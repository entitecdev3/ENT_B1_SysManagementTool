[
    {
        "id": "5a9ea7fb.714ac8",
        "type": "tab",
        "label": "Serve/Settings",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c0763147.55f79",
        "type": "tab",
        "label": "Management",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e7f8ec40.9de36",
        "type": "tab",
        "label": "Login",
        "disabled": false,
        "info": ""
    },
    {
        "id": "deb00af94856228f",
        "type": "tab",
        "label": "Logout",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "dcad3eb1.e262e",
        "type": "tab",
        "label": "GET Companies List",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6ccd91ab.19ee9",
        "type": "tab",
        "label": "Create JOBS/LOGS",
        "disabled": false,
        "info": ""
    },
    {
        "id": "58b888b4.6c1618",
        "type": "tab",
        "label": "Jobs Lookup Queue",
        "disabled": false,
        "info": ""
    },
    {
        "id": "14adbe7e.88fa32",
        "type": "tab",
        "label": "Job -  Copy Company",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3e2f123667197722",
        "type": "tab",
        "label": "Send_Email",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "20a520fa336da0fb",
        "type": "tab",
        "label": "Base_Path",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cf45155e.4364b8",
        "type": "tab",
        "label": "Testing",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ce5114bb6a210af7",
        "type": "tab",
        "label": "ServiceStatus",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "60936536b941ff69",
        "type": "tab",
        "label": "Service Start/Stop/Restart",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bc80dc8df2de9bdd",
        "type": "tab",
        "label": "Get Host Info",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "97998734b41b7fbf",
        "type": "tab",
        "label": "Configuration",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "680f23997f7dfd3d",
        "type": "tab",
        "label": "Security",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c9017f4194923110",
        "type": "tab",
        "label": "Compaies Status",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "dfb0188865563809",
        "type": "tab",
        "label": "Compaies Details",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8c1e85c397c34986",
        "type": "tab",
        "label": "ServiceStatus",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a014b78d93723dab",
        "type": "tab",
        "label": "HEALTHCHECK_LOGS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5ddb2001.76d37",
        "type": "subflow",
        "name": "Iterate",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 219,
                "wires": [
                    {
                        "id": "8c2fd99c.ea8498"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 454,
                "y": 174,
                "wires": [
                    {
                        "id": "8c2fd99c.ea8498",
                        "port": 0
                    }
                ]
            },
            {
                "x": 455,
                "y": 259,
                "wires": [
                    {
                        "id": "8c2fd99c.ea8498",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "inputVarName",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-arrow-circle-right",
                    "label": {
                        "en-US": "msg."
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "bool",
                            "json",
                            "bin",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "currentObjectName",
                "type": "str",
                "value": ""
            }
        ],
        "color": "#DDAA99"
    },
    {
        "id": "5717a347.80f76c",
        "type": "subflow",
        "name": "Configuration",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "60ba2a1e.d06d04"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 860,
                "y": 80,
                "wires": [
                    {
                        "id": "fa52a0d.578976",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "configFilename",
                "type": "str",
                "value": "config_flow.json",
                "ui": {
                    "label": {
                        "en-US": "Config Filename"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "bool",
                            "json",
                            "bin",
                            "env"
                        ]
                    }
                }
            }
        ],
        "color": "#DDAA99"
    },
    {
        "id": "195b570b57bc542c",
        "type": "subflow",
        "name": "Services.json",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 100,
                "wires": [
                    {
                        "id": "f974eaf584ce5b28"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 920,
                "y": 140,
                "wires": [
                    {
                        "id": "d9cdd4f3b0bcd618",
                        "port": 0
                    },
                    {
                        "id": "8162cca3a56f737e",
                        "port": 0
                    }
                ]
            },
            {
                "x": 740,
                "y": 160,
                "wires": [
                    {
                        "id": "6b6a7ab59e57452f",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "ExcSLDQuery",
                "type": "bool",
                "value": "true",
                "ui": {
                    "icon": "font-awesome/fa-database",
                    "label": {
                        "en-US": "WithSLDQuery"
                    },
                    "type": "checkbox"
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "7ee266ca63cceab4",
        "type": "subflow",
        "name": "Configuration2",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 160,
                "wires": [
                    {
                        "id": "1431b5bd6d4608f5"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 680,
                "y": 160,
                "wires": [
                    {
                        "id": "d537f212b1e16ecc",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "hana-db-connection",
                "type": "bool",
                "value": "true",
                "ui": {
                    "icon": "font-awesome/fa-database",
                    "label": {
                        "en-US": "configOverrideHana (hana-db-connection)"
                    },
                    "type": "checkbox"
                }
            },
            {
                "name": "b1-sl-config",
                "type": "bool",
                "value": "true",
                "ui": {
                    "icon": "font-awesome/fa-globe",
                    "label": {
                        "en-US": "configOverride (b1-sl-config)"
                    },
                    "type": "checkbox"
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "19a1d236fd159ab3",
        "type": "subflow",
        "name": "Session Check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 320,
                "y": 200,
                "wires": [
                    {
                        "id": "44105aaeaada02ff"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 660,
                "y": 140,
                "wires": [
                    {
                        "id": "44105aaeaada02ff",
                        "port": 0
                    }
                ]
            },
            {
                "x": 660,
                "y": 240,
                "wires": [
                    {
                        "id": "44105aaeaada02ff",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "bd1cf984.3d5158",
        "type": "sqlitedb",
        "db": "B1HManage",
        "mode": "RWC"
    },
    {
        "id": "e7336e81.c32bc",
        "type": "sqlitedb",
        "db": "B1HManageDB",
        "mode": "RWC"
    },
    {
        "id": "d92dfc92c370a6d4",
        "type": "HanaClientConfig",
        "configSetup": "config-file",
        "configFileName": "config_flow.json",
        "server": "-",
        "port": "-",
        "database": "-",
        "userName": "-",
        "password": "-"
    },
    {
        "id": "590928a27bca663b",
        "type": "b1-service-layer-config",
        "configSetup": "config-file",
        "configFileName": "config_flow.json",
        "serviceLayerUrl": "-",
        "companyName": "-",
        "userName": "-",
        "password": "-",
        "maxPageSize": "0",
        "logFilePath": "-"
    },
    {
        "id": "73cf520e833dd709",
        "type": "b1-service-layer-config",
        "configSetup": "config-file",
        "configFileName": "config_flow.json",
        "serviceLayerUrl": "-",
        "companyName": "-",
        "userName": "-",
        "password": "-",
        "maxPageSize": "0",
        "logFilePath": ""
    },
    {
        "id": "c322d005be20d02c",
        "type": "b1-service-layer-config",
        "configSetup": "config-file",
        "configFileName": "config_flow.json",
        "serviceLayerUrl": "-",
        "companyName": "-",
        "userName": "-",
        "password": "-",
        "maxPageSize": "0",
        "logFilePath": "-"
    },
    {
        "id": "90f7f74e794231f9",
        "type": "SSH_Credentials",
        "host": "hanab1hdev20",
        "port": "22",
        "userlabel": "root@hanab1hdev20"
    },
    {
        "id": "8b9bdb81738f863c",
        "type": "sqlitedb",
        "db": "B1HManageDB",
        "mode": "RWC"
    },
    {
        "id": "15d6e3b0d0c5d1fa",
        "type": "HanaClientConfig",
        "configSetup": "config-file",
        "configFileName": "config_flow.json",
        "server": "-",
        "port": "-",
        "database": "-",
        "userName": "-",
        "password": "-"
    },
    {
        "id": "8c2fd99c.ea8498",
        "type": "function",
        "z": "5ddb2001.76d37",
        "name": "Iterate",
        "func": "var arrayVarName = \"iterationInfo\";\nvar inputVarName = \"payload\";\n//var tempArrayVarName = env.get(\"arrayVarName\");\nvar tempInputVarName = env.get(\"inputVarName\");\nvar currentObjectName = env.get(\"currentObjectName\");\n// TO DO \n// aggiungere un ulteriore proprieta' che indica da dove devo copiare i dati, \n// esempio payload dovro' copiare i dati da payload in DocumentLines \n//         msg.arraInfo[nomevariabileTo] = msg[nomevariabileFrom]\n// nell'oggetto msg.iterationInfo andremo a creare i vari oggetti utilizzati dal nodo\n// esempio :\n// msg.iterationInfo.current riga che contiene i dati attualmente iterati , esempio currentDocumentLine\n// msg.iterationInfo._current array ad uso interno\n// msg.iterationInfo.     , esempio DocumentLines (tutto l'array)\n// \nif (currentObjectName !=='')\n    arrayVarName = '_' + currentObjectName + '_internal_DoNotUse';\nif (tempInputVarName !=='')    \n    inputVarName = tempInputVarName;    \n\nvar nextObj, out;\n//var itt = msg.iterationInfo;\nvar itt = msg[arrayVarName];\n//If the iterating has not yet begun set up the iteration metadata in the msg\nif (typeof itt === 'undefined') {\n    //Make sure payload is an array    \n    //if( Object.prototype.toString.call(msg.payload) !== '[object Array]' ) {    \n    if( Object.prototype.toString.call(msg[inputVarName]) !== '[object Array]' ) {       \n        //msg.payload = [msg.payload];       \n        msg[inputVarName] = [msg[inputVarName]];   \n        \n    }    \n    //msg.iterationInfo = itt = {};    \n    msg[arrayVarName] = itt = {};    \n    itt.index = -1;    \n    //itt.inArray = msg.payload;    \n    itt.inArray = msg[inputVarName];    \n    itt.outArray = [];\n    //Otherwise just push the input to the output array\n    } else {    \n    //itt.outArray.push(msg.payload)    \n    itt.outArray.push(msg[inputVarName])}\n    //Goto next object\n    itt.index ++;\n    //If there are stil objects left to iterate goto the next one in the original array\n    if (itt.index < itt.inArray.length) {    \n        nextObj = msg;    \n        //msg.payload = itt.inArray[itt.index];    \n        msg[currentObjectName] = itt.inArray[itt.index];\n        //otherwise pass the out array as the payload\n    } else {    \n        out = msg;    \n        //msg.payload = itt.outArray;    \n        msg[inputVarName] = itt.outArray;    \n        //delete msg.iterationInfo;    \n        delete msg[arrayVarName];\n    }\nreturn [nextObj, out];",
        "outputs": "2",
        "noerr": 0,
        "x": 347,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "69911dd6.26d784",
        "type": "file in",
        "z": "5717a347.80f76c",
        "name": "Read flow config",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 350,
        "y": 80,
        "wires": [
            [
                "6007a45c.7579ec"
            ]
        ]
    },
    {
        "id": "6007a45c.7579ec",
        "type": "json",
        "z": "5717a347.80f76c",
        "name": "Convert to JSON",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 570,
        "y": 80,
        "wires": [
            [
                "fa52a0d.578976"
            ]
        ]
    },
    {
        "id": "fa52a0d.578976",
        "type": "function",
        "z": "5717a347.80f76c",
        "name": "Init",
        "func": "if (msg.flowInfo === undefined) \n    msg.flowInfo = {};\nmsg.flowInfo.config = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "60ba2a1e.d06d04",
        "type": "function",
        "z": "5717a347.80f76c",
        "name": "Init",
        "func": "const filePath = global.get(\"redSettings\").userDir;\n\nconst fileName = env.get(\"configFilename\");\nmsg.filename = filePath + fileName;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 80,
        "wires": [
            [
                "69911dd6.26d784"
            ]
        ]
    },
    {
        "id": "f974eaf584ce5b28",
        "type": "function",
        "z": "195b570b57bc542c",
        "name": "services.json",
        "func": "msg.payload = msg.serviceAddData = [{\n\tServiceCode: \"HANA_IndexServer\",\n\tServiceName: \"HANA DB - Index Server\",\n\tActualStatusCheckType: \"Custom\",\n\tOSFormalStatusCheckCommand: \"ent_hana status\",\n\tOSStartCommand: \"ent_hana start\",\n\tOSServiceStopCommand: \"ent_hana stop\",\n\tOSServiceRestartCommand: \"ent_hana restart\"\n},{\n\tServiceCode: \"B1_SLD_LicenseManager\",\n\tServiceName: \"License Manager\",\n\tActualStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_Mailer\",\n\tServiceName: \"B1 Mailer\",\n\tActualStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_Alert\",\n\tServiceName: \"B1 Alert\",\n\tActualStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_MobileService\",\n\tServiceName: \"Mobile Service\",\n\tActualStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_AnalyticsPlatform\",\n\tServiceName: \"Analytics Platform & Portal\",\n\tActualStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_BackupService\",\n\tServiceName: \"Backup Service\",\n\tActualStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_EDS\",\n\tServiceName: \"Electronic Document Service (EDS)\",\n\tActualStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_eds status\",\n\tOSStartCommand: \"ent_b1_eds start\",\n\tOSServiceStopCommand: \"ent_b1_eds stop\",\n\tOSServiceRestartCommand: \"ent_b1_eds restart\"\n}, {\n\tServiceCode: \"B1_WebClient\",\n\tServiceName: \"Web Client (Fiori)\",\n\tActualStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_webclient status\",\n\tOSStartCommand: \"ent_b1_webclient start\",\n\tOSServiceStopCommand: \"ent_b1_webclient stop\",\n\tOSServiceRestartCommand: \"ent_b1_webclient restart\"\n}, {\n\tServiceCode: \"B1_ServiceLayer\",\n\tServiceName: \"Service Layer\",\n\tActualStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sl status\",\n\tOSStartCommand: \"ent_b1_sl start\",\n\tOSServiceStopCommand: \"ent_b1_sl stop\",\n\tOSServiceRestartCommand: \"ent_b1_sl restart\"\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 100,
        "wires": [
            [
                "1e90fcfaa759d525"
            ]
        ]
    },
    {
        "id": "1e90fcfaa759d525",
        "type": "function",
        "z": "195b570b57bc542c",
        "name": "sql for Service Info from B1 SLDData",
        "func": "if(!env.get(\"ExcSLDQuery\")){\n    delete msg.serviceAddData;\n    return [null, msg];\n}\n\nmsg.configOverrideHana.database = 'SLDDATA';\n\nif (!msg.flowInfo)\n    msg.flowInfo = {};\n    \nmsg.flowInfo.sql =`\nSELECT *,SUBSTR_REGEXPR('[://|@](\\\\w*):' IN \"SLD_AccessURL\" GROUP 1) AS \"SLD_ServerLocation\"\nFROM (\n(\nselect\n'HANA_IndexServer' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"NAME\" AS \"SLD_AccessURL\",\n0 AS \"VisualOrder\",\n\"ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"DBSERVERINSTANCES\"\n)\nUNION ALL\n(\nselect\n'B1_SLD_LicenseManager' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"ACCESSURL\" AS \"SLD_AccessURL\",\n10 AS \"VisualOrder\",\n\"LOGICALMACHINE_ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"LICENSESERVERS\"\n)\nUNION ALL\n(\nselect\n'B1_SLD_Mailer' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"ACCESSURL\" AS \"SLD_AccessURL\",\n20 AS \"VisualOrder\",\n\"LOGICALMACHINE_ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"MAILERSERVICES\"\n)\nUNION ALL\n(\nselect\n'B1_SLD_Alert' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"ACCESSURL\" AS \"SLD_AccessURL\",\n30 AS \"VisualOrder\",\n\"LOGICALMACHINE_ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"MAILERSERVICES\"\n)\nUNION ALL\n(\nselect\n'B1_SLD_MobileService' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"ACCESSURL\" AS \"SLD_AccessURL\",\n40 AS \"VisualOrder\",\n\"LOGICALMACHINE_ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"MOBILESERVICES\"\n)\nUNION ALL\n(\nselect\n'B1_SLD_AnalyticsPlatform' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"ACCESSURL\" AS \"SLD_AccessURL\",\n50 AS \"VisualOrder\",\n\"LOGICALMACHINE_ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"B1AHSERVERS\"\n)\nUNION ALL\n(\nselect\n'B1_SLD_BackupService' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"LINK\" AS \"SLD_AccessURL\",\n60 AS \"VisualOrder\",\n\"LOGICALMACHINE_ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"BACKUPSERVICES\"\n)\nUNION ALL\n(\nselect\n'B1_EDS' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"ACCESSURL\" AS \"SLD_AccessURL\",\n70 AS \"VisualOrder\",\n\"LOGICALMACHINE_ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"ELECTRONICDOCSERVICES\"\n)\nUNION ALL\n(\nselect\n'B1_WebClient' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"ACCESSURL\" AS \"SLD_AccessURL\",\n80 AS \"VisualOrder\",\n\"LOGICALMACHINE_ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"B1WEBCLIENTS\"\n)\nUNION ALL\n(\nselect\n'B1_ServiceLayer' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"ACCESSURL\" AS \"SLD_AccessURL\",\n90 AS \"VisualOrder\",\n\"LOGICALMACHINE_ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"B1SERVICELAYERS\"\n)\n);\n`;\n\n\nreturn [msg, null];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 160,
        "wires": [
            [
                "6b6a7ab59e57452f"
            ],
            [
                "8c4b3dc1a7cfa2ee"
            ]
        ]
    },
    {
        "id": "6b6a7ab59e57452f",
        "type": "HanaClient-request",
        "z": "195b570b57bc542c",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 610,
        "y": 120,
        "wires": [
            [
                "d9cdd4f3b0bcd618"
            ],
            []
        ]
    },
    {
        "id": "d9cdd4f3b0bcd618",
        "type": "function",
        "z": "195b570b57bc542c",
        "name": "",
        "func": "\n\nfor(let i in msg.payload){\n    for(let j in msg.serviceAddData){\n        if(msg.serviceAddData[j].ServiceCode === msg.payload[i].ServiceCode){\n            msg.payload[i] = Object.assign(msg.payload[i],msg.serviceAddData[j]);\n        }\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "8c4b3dc1a7cfa2ee",
        "type": "link out",
        "z": "195b570b57bc542c",
        "name": "",
        "mode": "link",
        "links": [
            "8162cca3a56f737e"
        ],
        "x": 585,
        "y": 200,
        "wires": []
    },
    {
        "id": "8162cca3a56f737e",
        "type": "link in",
        "z": "195b570b57bc542c",
        "name": "",
        "links": [
            "8c4b3dc1a7cfa2ee"
        ],
        "x": 835,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "d537f212b1e16ecc",
        "type": "function",
        "z": "7ee266ca63cceab4",
        "name": "",
        "func": "var payload={};\n\nif(!msg.flowInfo)\n    msg.flowInfo={}\n\nmsg.payload.forEach(item=>{\n    try{\n        payload[item.KEY]=JSON.parse(item.VALUE);\n    }catch(err){\n        payload[item.KEY]=item.VALUE;\n    }\n});\n\nif(env.get(\"hana-db-connection\"))\n    msg.configOverrideHana = payload['hana-db-connection'];\nif(env.get(\"b1-sl-config'\"))\n    msg.configOverride = payload['b1-sl-config'];\n    \nmsg.flowInfo.config = payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "17ea570b83d965b2",
        "type": "sqlite",
        "z": "7ee266ca63cceab4",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 360,
        "y": 160,
        "wires": [
            [
                "d537f212b1e16ecc"
            ]
        ]
    },
    {
        "id": "1431b5bd6d4608f5",
        "type": "function",
        "z": "7ee266ca63cceab4",
        "name": "SQL",
        "func": "\nmsg.topic = `\nSELECT * FROM ENT_CONFIG;   \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 160,
        "wires": [
            [
                "17ea570b83d965b2"
            ]
        ]
    },
    {
        "id": "44105aaeaada02ff",
        "type": "function",
        "z": "19a1d236fd159ab3",
        "name": "session check",
        "func": "const sessionInfo = global.get('sessionInfo');\n// msg.sessionInfo\nconst { entSessionId } = msg.req.cookies; \nconst  flowStartTimestamp  = new Date();\n\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n}\nmsg.serviceLayer = msg.serviceLayer ? msg.serviceLayer : {};\n\nif (sessionInfo) {\n    const reqSession = sessionInfo.filter(isReqSession);\n    // const reqSession = [ sessionInfo[sessionInfo.length - 1] ];\n    // node.warn(reqSession)\n    if (reqSession.length > 0) {\n        const reqSessionInfo = reqSession[0];\n        // const reqDatabase = reqSessionInfo.database;\n        // const reqUserName = reqSessionInfo.username;\n        // const reqb1SessionId = reqSessionInfo.b1SessionId;\n        const reqEntSessionTimeout = reqSessionInfo.entSessionTimeout;\n        const reqLastAccessTimestamp = reqSessionInfo.lastAccessTimestamp;\n        \n        const timeDifferenceMs = flowStartTimestamp - reqLastAccessTimestamp;\n        const clientTimeoutMs = parseInt(reqEntSessionTimeout) * 60 * 1000;\n        const sessionIndex = sessionInfo.findIndex(isReqSession);\n\n        if (clientTimeoutMs - timeDifferenceMs > 0) {\n            // node.warn(clientTimeoutMs - timeDifferenceMs)\n            // msg.serviceLayer.sessionId = reqb1SessionId;\n            sessionInfo[sessionIndex].lastAccessTimestamp = flowStartTimestamp;\n            msg.reqSession = sessionInfo[sessionIndex];\n            msg.currentSession = msg.reqSession;\n            \n            msg.payload = sessionInfo[sessionIndex];\n            return [msg, null];\n        } else {\n            // sessionInfo.splice(sessionIndex,1);\n            msg.statusCode = 401;\n            msg.payload = 'Session expired.'\n            return [null, msg];\n        }\n    }\n}\n\nmsg.statusCode = 401;\nmsg.payload = 'User not authenticated.'\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 200,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ff7dc85b.c74498",
        "type": "static",
        "z": "5a9ea7fb.714ac8",
        "name": "",
        "folder": "projects\\ENT_B1_SysManagementTool/webapp",
        "x": 430,
        "y": 180,
        "wires": [
            [
                "dac28394.4e63"
            ]
        ]
    },
    {
        "id": "2aa69f60.55672",
        "type": "http in",
        "z": "5a9ea7fb.714ac8",
        "name": "",
        "url": "/ui/*",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 180,
        "wires": [
            [
                "ff7dc85b.c74498"
            ]
        ]
    },
    {
        "id": "dac28394.4e63",
        "type": "http response",
        "z": "5a9ea7fb.714ac8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 180,
        "wires": []
    },
    {
        "id": "f3e4ec17beb0e12e",
        "type": "settings-config",
        "z": "5a9ea7fb.714ac8",
        "name": "",
        "x": 210,
        "y": 120,
        "wires": []
    },
    {
        "id": "27ba5dff.cff8a2",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 540,
        "y": 220,
        "wires": [
            [
                "8a2a209d.a1b7f"
            ]
        ]
    },
    {
        "id": "e305ee09.b0dcc",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "CREATE TABLE ENT_JOBS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE ENT_JOBS(JOB_ID TEXT PRIMARY KEY, JOB_NAME TEXT NOT NULL, BASE_SCHEMA TEXT, TARGET_SCHEMA TEXT, STATUS CHAR(1) NOT NULL,  FREQUENCY CHAR(1), START_ON DATETIME, END_ON DATETIME, SCHEDULED CHAR(1) NOT NULL, JOB_TYPE TEXT NOT NULL, CONFIGURATION TEXT, CREATED_ON DATETIME NOT NULL);",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 220,
        "wires": [
            [
                "27ba5dff.cff8a2"
            ]
        ]
    },
    {
        "id": "8a2a209d.a1b7f",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 220,
        "wires": []
    },
    {
        "id": "8edb8794.2a8a38",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "bd1cf984.3d5158",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 670,
        "y": 620,
        "wires": [
            [
                "dfcef466.e0d478"
            ]
        ]
    },
    {
        "id": "62755405.2b8a6c",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "INSERT_ENT_JOB",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 620,
        "wires": [
            [
                "99e1ec49.1a439"
            ]
        ]
    },
    {
        "id": "dfcef466.e0d478",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 620,
        "wires": []
    },
    {
        "id": "99e1ec49.1a439",
        "type": "function",
        "z": "c0763147.55f79",
        "name": "",
        "func": "\n\"CREATE TABLE ENT_JOB(JOB_ID TEXT PRIMARY KEY, JOB_NAME TEXT, CREATED_ON TEXT, FROM_SCHEMA TEXT, TO_SCHEMA TEXT, FRQUENCY TEXT, START_ON TEXT, END_ON TEXT, ONE_TIME TEXT)\";\n\n\"CREATE TABLE ENT_JOB_LOGS(LOG_ID TEXT PRIMARY KEY, JOB_ID TEXT, STARTED_ON TEXT, ENDED_ON TEXT, STATUS CHAR(1), FOREIGN KEY (JOB_ID) REFERENCES ENT_JOB (JOB_ID) ON UPDATE SET NULL ON DELETE SET NULL)\";\n\nmsg.topic = `INSERT INTO ENT_JOB (JOB_ID,JOB_NAME,CREATED_ON,FROM_SCHEMA,TO_SCHEMA,FRQUENCY, START_ON, END_ON, ONE_TIME)\n            VALUES ('1', 'xxxxx', 'xxxxx', 'xxxxx', 'xxxxx', 'xxxxx', 'xxxxx', 'xxxxx', 'xxxxx' );`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 620,
        "wires": [
            [
                "8edb8794.2a8a38"
            ]
        ]
    },
    {
        "id": "4025820c.d54c9c",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 500,
        "y": 920,
        "wires": [
            [
                "4828b52e.4bb13c"
            ]
        ]
    },
    {
        "id": "9ec4b48e.62a7b8",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "SELECT ENT_JOB",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT * FROM  ENT_JOBS",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 920,
        "wires": [
            [
                "4025820c.d54c9c"
            ]
        ]
    },
    {
        "id": "4828b52e.4bb13c",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 920,
        "wires": []
    },
    {
        "id": "7245d749.e13538",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "bd1cf984.3d5158",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 650,
        "y": 660,
        "wires": [
            [
                "6ff1ad26.1e15c4"
            ]
        ]
    },
    {
        "id": "8f73076a.ad7d38",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "INSERT_ENT_JOB_LOG",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT * FROM  ENT_JOB",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 660,
        "wires": [
            [
                "51655164.7db19"
            ]
        ]
    },
    {
        "id": "6ff1ad26.1e15c4",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 660,
        "wires": []
    },
    {
        "id": "51655164.7db19",
        "type": "function",
        "z": "c0763147.55f79",
        "name": "",
        "func": "\n\"CREATE TABLE ENT_JOB(JOB_ID TEXT PRIMARY KEY, JOB_NAME TEXT, CREATED_ON TEXT, FROM_SCHEMA TEXT, TO_SCHEMA TEXT, FRQUENCY TEXT, START_ON TEXT, END_ON TEXT, ONE_TIME TEXT)\";\n\n\"CREATE TABLE ENT_JOB_LOGS(LOG_ID TEXT PRIMARY KEY, JOB_ID TEXT, STARTED_ON TEXT, ENDED_ON TEXT, STATUS CHAR(1), FOREIGN KEY (JOB_ID) REFERENCES ENT_JOB (JOB_ID) ON UPDATE SET NULL ON DELETE SET NULL)\";\n\n// msg.topic = `INSERT INTO ENT_JOB (JOB_ID,JOB_NAME,CREATED_ON,FROM_SCHEMA,TO_SCHEMA,FRQUENCY, START_ON, END_ON, ONE_TIME)\n//             VALUES ('1', 'xxxxx', 'xxxxx', 'xxxxx', 'xxxxx', 'xxxxx', 'xxxxx', 'xxxxx', 'xxxxx' );`;\n            \nmsg.topic = `INSERT INTO ENT_JOB_LOGS (LOG_ID,JOB_ID,STARTED_ON,ENDED_ON,STATUS)\n            VALUES ('1', '2', 'xxxxx', 'xxxxx', 'xxxxx' );`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 660,
        "wires": [
            [
                "7245d749.e13538"
            ]
        ]
    },
    {
        "id": "cde687e7.16e368",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 500,
        "y": 960,
        "wires": [
            [
                "96dad5ec.4718d8"
            ]
        ]
    },
    {
        "id": "aed29a64.f33288",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "SELECT ENT_JOB_LOGs",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT * FROM  ENT_JOB_LOGS",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 960,
        "wires": [
            [
                "cde687e7.16e368"
            ]
        ]
    },
    {
        "id": "96dad5ec.4718d8",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 960,
        "wires": []
    },
    {
        "id": "c85599e0.f33ef8",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 560,
        "y": 180,
        "wires": [
            [
                "ada83813.4ff788"
            ]
        ]
    },
    {
        "id": "6c833c64.ac3af4",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "CREATE TABLE ENT_USERS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE ENT_USERS(USER_ID PRIMARY KEY, NAME TEXT, USERNAME TEXT UNIQUE NOT NULL, ROLE TEXT NOT NULL, PASSWORD TEXT NOT NULL, BLOCKED CHAR(1), CREATED_ON DATETIME NOT NULL);",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 180,
        "wires": [
            [
                "c85599e0.f33ef8"
            ]
        ]
    },
    {
        "id": "ada83813.4ff788",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 180,
        "wires": []
    },
    {
        "id": "9698a7e8.039d48",
        "type": "comment",
        "z": "c0763147.55f79",
        "name": "Create Table",
        "info": "",
        "x": 130,
        "y": 100,
        "wires": []
    },
    {
        "id": "617302bb.fb5e8c",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 680,
        "y": 580,
        "wires": [
            [
                "3545aa4.8b38a56"
            ]
        ]
    },
    {
        "id": "33e037db.cae2c8",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "INSERT_ENT_USERS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 580,
        "wires": [
            [
                "fbdc5196.d46d1"
            ]
        ]
    },
    {
        "id": "3545aa4.8b38a56",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 580,
        "wires": []
    },
    {
        "id": "fbdc5196.d46d1",
        "type": "function",
        "z": "c0763147.55f79",
        "name": "",
        "func": "\n\"CREATE TABLE ENT_JOB(JOB_ID TEXT PRIMARY KEY, JOB_NAME TEXT, CREATED_ON TEXT, FROM_SCHEMA TEXT, TO_SCHEMA TEXT, FRQUENCY TEXT, START_ON TEXT, END_ON TEXT, ONE_TIME TEXT)\";\n\n\"CREATE TABLE ENT_JOB_LOGS(LOG_ID TEXT PRIMARY KEY, JOB_ID TEXT, STARTED_ON TEXT, ENDED_ON TEXT, STATUS CHAR(1), FOREIGN KEY (JOB_ID) REFERENCES ENT_JOB (JOB_ID) ON UPDATE SET NULL ON DELETE SET NULL)\";\n\nmsg.topic = `INSERT INTO ENT_USERS (USER_ID, NAME, USERNAME, ROLE, PASSWORD, BLOCKED, CREATED_ON)\n            VALUES ('1','Admin-B1SiteUser', 'B1SiteUser', 'ADMIN', 'SAPB1Admin', 'N', datetime('now', 'localtime'));`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 580,
        "wires": [
            [
                "617302bb.fb5e8c"
            ]
        ]
    },
    {
        "id": "b1904fd6.26046",
        "type": "comment",
        "z": "c0763147.55f79",
        "name": "Insert Data",
        "info": "",
        "x": 120,
        "y": 520,
        "wires": []
    },
    {
        "id": "492a27b8.333fb8",
        "type": "comment",
        "z": "c0763147.55f79",
        "name": "Select Data",
        "info": "",
        "x": 130,
        "y": 820,
        "wires": []
    },
    {
        "id": "4582fda5.7d4474",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 500,
        "y": 880,
        "wires": [
            [
                "a4bf2b33.a51088"
            ]
        ]
    },
    {
        "id": "78992fde.b01e7",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "SELECT ENT_USERS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT * FROM  ENT_USERS",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 880,
        "wires": [
            [
                "4582fda5.7d4474"
            ]
        ]
    },
    {
        "id": "a4bf2b33.a51088",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 880,
        "wires": []
    },
    {
        "id": "bea77496.cb5fa8",
        "type": "comment",
        "z": "c0763147.55f79",
        "name": "Drop Table",
        "info": "",
        "x": 120,
        "y": 1060,
        "wires": []
    },
    {
        "id": "aca493e0.93882",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 500,
        "y": 1160,
        "wires": [
            [
                "215592a.e8e496e"
            ]
        ]
    },
    {
        "id": "3a44fd49.133c52",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "DROP ENT_JOBS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DROP TABLE ENT_JOBS",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 1160,
        "wires": [
            [
                "aca493e0.93882"
            ]
        ]
    },
    {
        "id": "215592a.e8e496e",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1160,
        "wires": []
    },
    {
        "id": "98babd42.3d4f5",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 500,
        "y": 1220,
        "wires": [
            [
                "e72c0afd.8f4878"
            ]
        ]
    },
    {
        "id": "12dc138.03a28ed",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "DROP ENT_JOB_LOGs",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DROP TABLE ENT_JOB_LOGS",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 1220,
        "wires": [
            [
                "98babd42.3d4f5"
            ]
        ]
    },
    {
        "id": "e72c0afd.8f4878",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1220,
        "wires": []
    },
    {
        "id": "6b85171b.9ddab8",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 500,
        "y": 1100,
        "wires": [
            [
                "c4a61ea8.ee681"
            ]
        ]
    },
    {
        "id": "fb7ac6ef.abbfb8",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "DROP ENT_USERS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DROP TABLE ENT_USERS",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 1100,
        "wires": [
            [
                "6b85171b.9ddab8"
            ]
        ]
    },
    {
        "id": "c4a61ea8.ee681",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1100,
        "wires": []
    },
    {
        "id": "60933614.190528",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 540,
        "y": 260,
        "wires": [
            [
                "eee81c4f.39a07"
            ]
        ]
    },
    {
        "id": "a9ef0a87.02e388",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "CREATE TABLE ENT_JOB_LOGS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE ENT_JOB_LOGS(LOG_ID TEXT PRIMARY KEY, JOB_ID TEXT NOT NULL, STARTED_ON TEXT NOT NULL, ENDED_ON TEXT, STATUS CHAR(1) NOT NULL, RUN_TYPE CHAR(1) NOT NULL, MSG TEXT, CONFIGURATION TEXT,  FOREIGN KEY (JOB_ID) REFERENCES ENT_JOBS (JOB_ID) ON UPDATE SET NULL ON DELETE SET NULL)",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 260,
        "wires": [
            [
                "60933614.190528"
            ]
        ]
    },
    {
        "id": "eee81c4f.39a07",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 260,
        "wires": []
    },
    {
        "id": "2d6fca7e1768ec98",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 520,
        "y": 1520,
        "wires": [
            [
                "0f23c0bb21568d18"
            ]
        ]
    },
    {
        "id": "4c3412e242d6cc4e",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "Alter TABLE ENT_JOB_LOGS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ALTER TABLE ENT_JOB_LOGS ADD COLUMN RUN_TYPE CHAR(1);",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 1520,
        "wires": [
            [
                "2d6fca7e1768ec98"
            ]
        ]
    },
    {
        "id": "0f23c0bb21568d18",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1520,
        "wires": []
    },
    {
        "id": "f72f5388aaf02dfa",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "CREATE TABLE ENT_USERS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE ENT_USERS(USER_ID PRIMARY KEY, NAME TEXT, USERNAME TEXT UNIQUE NOT NULL, ROLE TEXT NOT NULL, PASSWORD TEXT NOT NULL, BLOCKED CHAR(1), CREATED_ON DATETIME NOT NULL);",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "cdbc8fdc1de20144",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 580,
        "y": 300,
        "wires": [
            [
                "c845b23d1fc5ef20"
            ]
        ]
    },
    {
        "id": "57e3bbf1a8db35d1",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "CREATE TABLE ENT_EMAIL_TEMPLATE",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE ENT_EMAIL_TEMPLATE(TEMPLATE_ID PRIMARY KEY, CODE TEXT UNIQUE NOT NULL, NAME TEXT, TEXT_HTML TEXT NOT NULL, LANGUAGE TEXT, CREATED_ON DATETIME NOT NULL);",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 300,
        "wires": [
            [
                "cdbc8fdc1de20144"
            ]
        ]
    },
    {
        "id": "c845b23d1fc5ef20",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 300,
        "wires": []
    },
    {
        "id": "3dd05206057b99f1",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 700,
        "y": 700,
        "wires": [
            [
                "44944308184d1727"
            ]
        ]
    },
    {
        "id": "8b6eebab62300361",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "INSERT_ENT_EMAIL_TEMPLATE",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 700,
        "wires": [
            [
                "34c9064a42f07d55"
            ]
        ]
    },
    {
        "id": "44944308184d1727",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 700,
        "wires": []
    },
    {
        "id": "34c9064a42f07d55",
        "type": "function",
        "z": "c0763147.55f79",
        "name": "",
        "func": "\"CREATE TABLE ENT_EMAIL_TEMPLATE(TEMPLATE_ID PRIMARY KEY, CODE TEXT UNIQUE NOT NULL, NAME TEXT, TEXT_HTML TEXT NOT NULL, LANGUAGE TEXT, CREATED_ON DATETIME NOT NULL);\"\n\n            \nmsg.topic = `INSERT INTO ENT_EMAIL_TEMPLATE(TEMPLATE_ID, CODE, NAME , TEXT_HTML, LANGUAGE, CREATED_ON)\n            VALUES ('1', 'COPY_COMPANY', 'COPY_COMPANY', '<!DOCTYPE html>\n<html>\n<style>\ntable, th, td {\n  border:1px solid black;\n}\n</style>\n<body>\n\n<h4>Hello Admin</h4>\n\n<p>Following Job is started/completed:</p>\n</br></br>\n<table style=\"width:100%\">\n  <tr>\n    <th>Started On</th>\n    <th>Ended On</th>\n    <th>Status</th>\n    <th>Run Type</th>\n    <th>Message</th>\n    <th>Configuration</th>\n  </tr>\n  <tr>\n    <td>$$STARTED_ON$$</td>\n    <td>$$ENDED_ON$$</td>\n    <td>$$STATUS$$</td>\n    <td>$$RUN_TYPE$$</td>\n    <td>$$MSG$$</td>\n    <td>$$CONFIGURATION$$</td>\n  </tr>\n  \n</table>\n</br></br>\n<p>Thanks and Regards</p>\n<h5>B1 System Management Tool</h5>\n\n</body>\n</html>\n\n', 'EN', datetime('now', 'localtime'));`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 700,
        "wires": [
            [
                "3dd05206057b99f1"
            ]
        ]
    },
    {
        "id": "b748571c8774695f",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 540,
        "y": 1280,
        "wires": [
            [
                "f30fcb5998cbeccf"
            ]
        ]
    },
    {
        "id": "a26d602fa6d12307",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "DROP ENT_EMAIL_TEMPLATE",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DROP TABLE ENT_EMAIL_TEMPLATE",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 1280,
        "wires": [
            [
                "b748571c8774695f"
            ]
        ]
    },
    {
        "id": "f30fcb5998cbeccf",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1280,
        "wires": []
    },
    {
        "id": "8bae99a6f81592af",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 540,
        "y": 340,
        "wires": [
            [
                "ef4b54574cb243e1"
            ]
        ]
    },
    {
        "id": "83bad894a56ca1a6",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "CREATE TABLE ENT_SERVERS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE ENT_SERVERS(SERVER_ID PRIMARY KEY, HOSTNAME TEXT UNIQUE NOT NULL, PORT INTEGER DEFAULT 22, USERNAME TEXT NOT NULL, PASSWORD TEXT NOT NULL, CREATED_ON DATETIME NOT NULL);",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 340,
        "wires": [
            [
                "8bae99a6f81592af"
            ]
        ]
    },
    {
        "id": "ef4b54574cb243e1",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 340,
        "wires": []
    },
    {
        "id": "3601c2a3e6691631",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 680,
        "y": 740,
        "wires": [
            [
                "62cacbf7d61628e6"
            ]
        ]
    },
    {
        "id": "8b1d128c40711848",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "INSERT_ENT_SERVERS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 740,
        "wires": [
            [
                "943fbad0e7165d2b"
            ]
        ]
    },
    {
        "id": "62cacbf7d61628e6",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 740,
        "wires": []
    },
    {
        "id": "943fbad0e7165d2b",
        "type": "function",
        "z": "c0763147.55f79",
        "name": "",
        "func": "\n'CREATE TABLE ENT_SERVERS(SERVER_ID PRIMARY KEY, HOSTNAME TEXT NOT NULL, PORT INTEGER DEFAULT 22, USERNAME TEXT NOT NULL, PASSWORD TEXT NOT NULL, CREATED_ON DATETIME NOT NULL);'\n\nmsg.topic = `INSERT INTO ENT_SERVERS (SERVER_ID, HOSTNAME, USERNAME, PASSWORD, CREATED_ON)\n            VALUES ('100077fc-e0c5-11ec-9d64-0242ac120002','hanab1hdev20', 'root', 'SAPB1Admin!', datetime('now', 'localtime'));`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 740,
        "wires": [
            [
                "3601c2a3e6691631"
            ]
        ]
    },
    {
        "id": "6d2c846e26a2fbca",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 500,
        "y": 1340,
        "wires": [
            [
                "bb75b2dd6652b64b"
            ]
        ]
    },
    {
        "id": "2b10e87a96e5b459",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "DROP ENT_SERVERS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DROP TABLE ENT_SERVERS",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 1340,
        "wires": [
            [
                "6d2c846e26a2fbca"
            ]
        ]
    },
    {
        "id": "bb75b2dd6652b64b",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1340,
        "wires": []
    },
    {
        "id": "efa56641b04c69be",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 540,
        "y": 380,
        "wires": [
            [
                "5c219c979769c024"
            ]
        ]
    },
    {
        "id": "743c9af661022696",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "CREATE TABLE ENT_CONFIG",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE ENT_CONFIG(CONFIG_ID PRIMARY KEY, KEY TEXT UNIQUE NOT NULL, VALUE TEXT NOT NULL, CREATED_ON DATETIME NOT NULL);",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 380,
        "wires": [
            [
                "efa56641b04c69be"
            ]
        ]
    },
    {
        "id": "5c219c979769c024",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 380,
        "wires": []
    },
    {
        "id": "1fe8acf77133a6cd",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 500,
        "y": 1000,
        "wires": [
            [
                "1d48e95333821c18"
            ]
        ]
    },
    {
        "id": "db518b7b46a96c20",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "SELECT ENT_CONFIG",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT * FROM  ENT_JOB_LOGS",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 1000,
        "wires": [
            [
                "1fe8acf77133a6cd"
            ]
        ]
    },
    {
        "id": "1d48e95333821c18",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1000,
        "wires": []
    },
    {
        "id": "cfebb8c743401408",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 500,
        "y": 1400,
        "wires": [
            [
                "c47c07033f85e18a"
            ]
        ]
    },
    {
        "id": "ff4591e565f9cb29",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "DROP ENT_SERVERS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DROP TABLE ENT_CONFiG",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 1400,
        "wires": [
            [
                "cfebb8c743401408"
            ]
        ]
    },
    {
        "id": "c47c07033f85e18a",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1400,
        "wires": []
    },
    {
        "id": "e7cf0bd59b74a77c",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 680,
        "y": 780,
        "wires": [
            [
                "f770c11ac6baee46"
            ]
        ]
    },
    {
        "id": "9f5fd25a4cdbe44f",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "INSERT_ENT_CONFIG",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 780,
        "wires": [
            [
                "f59a208e885d11d8"
            ]
        ]
    },
    {
        "id": "f770c11ac6baee46",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 780,
        "wires": []
    },
    {
        "id": "431735aa4fdea6b5",
        "type": "function",
        "z": "c0763147.55f79",
        "name": "",
        "func": "\n'CREATE TABLE ENT_CONFIG(SERVER_ID PRIMARY KEY, HOSTNAME TEXT NOT NULL, PORT INTEGER DEFAULT 22, USERNAME TEXT NOT NULL, PASSWORD TEXT NOT NULL, CREATED_ON DATETIME NOT NULL);'\n\nmsg.topic = `INSERT INTO ENT_CONFIG (CONFIG_ID, KEY, VALUE, CREATED_ON)\n            VALUES ('307d1bac-3c79-43d7-9e32-d998299a35ba', 'mail-config', '{}', datetime('now', 'localtime'));`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 780,
        "wires": [
            [
                "e7cf0bd59b74a77c"
            ]
        ]
    },
    {
        "id": "2672889ef140e698",
        "type": "function",
        "z": "c0763147.55f79",
        "name": "",
        "func": "\n'CREATE TABLE ENT_CONFIG(SERVER_ID PRIMARY KEY, HOSTNAME TEXT NOT NULL, PORT INTEGER DEFAULT 22, USERNAME TEXT NOT NULL, PASSWORD TEXT NOT NULL, CREATED_ON DATETIME NOT NULL);'\n\nmsg.topic = `INSERT INTO ENT_CONFIG (CONFIG_ID, KEY, VALUE, CREATED_ON)\n            VALUES ('c7d03ca8-3790-4e9e-a280-e937a60d3475', 'hana-db-connection', '{}', datetime('now', 'localtime'));`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 820,
        "wires": [
            [
                "e7cf0bd59b74a77c"
            ]
        ]
    },
    {
        "id": "2df1067c1431dabf",
        "type": "function",
        "z": "c0763147.55f79",
        "name": "securiy",
        "func": "\n'CREATE TABLE ENT_CONFIG(SERVER_ID PRIMARY KEY, HOSTNAME TEXT NOT NULL, PORT INTEGER DEFAULT 22, USERNAME TEXT NOT NULL, PASSWORD TEXT NOT NULL, CREATED_ON DATETIME NOT NULL);'\n\nmsg.topic = `INSERT INTO ENT_CONFIG (CONFIG_ID, KEY, VALUE, CREATED_ON)\n            VALUES ('2015ebdc-852c-4c3e-a3dc-00870bfcb6f5', 'security', '{ENT_SESSION_TIMEOUT:10}', datetime('now', 'localtime'));`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 820,
        "wires": [
            [
                "e7cf0bd59b74a77c"
            ]
        ]
    },
    {
        "id": "f59a208e885d11d8",
        "type": "function",
        "z": "c0763147.55f79",
        "name": "pathforExportImport",
        "func": "\n'CREATE TABLE ENT_CONFIG(SERVER_ID PRIMARY KEY, HOSTNAME TEXT NOT NULL, PORT INTEGER DEFAULT 22, USERNAME TEXT NOT NULL, PASSWORD TEXT NOT NULL, CREATED_ON DATETIME NOT NULL);'\n\nmsg.topic = `INSERT INTO ENT_CONFIG (CONFIG_ID, KEY, VALUE, CREATED_ON)\n            VALUES ('a46b54dc-7c51-40f9-9b8f-0f10a2c1f540', 'path-for-export-import', 'Test', datetime('now', 'localtime'));`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 820,
        "wires": [
            [
                "e7cf0bd59b74a77c"
            ]
        ]
    },
    {
        "id": "218b98ee59af4bde",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 520,
        "y": 420,
        "wires": [
            [
                "fe39dc1cd13b7a81"
            ]
        ]
    },
    {
        "id": "0b07f0f4f28ca4e8",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "CREATE TABLE ENT_SCHEMA_INFO",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE ENT_SCHEMA_INFO(SCHEMA_INFO_ID PRIMARY KEY, SCHEMA TEXT UNIQUE NOT NULL, TYPE TEXT, CREATED_ON DATETIME NOT NULL);",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 420,
        "wires": [
            [
                "218b98ee59af4bde"
            ]
        ]
    },
    {
        "id": "fe39dc1cd13b7a81",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 420,
        "wires": []
    },
    {
        "id": "478246de7edec987",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 560,
        "y": 460,
        "wires": [
            [
                "e3be79463893cf77"
            ]
        ]
    },
    {
        "id": "119f58323b6644c3",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "CREATE TABLE ENT_HEALTHCHECK_LOGS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "CREATE TABLE ENT_HEALTHCHECK_LOGS(LOG_ID PRIMARY KEY, ENTITY_TYPE TEXT, ENTITY_KEY NOT NULL, STATUS TEXT NOT NULL, STATUS_INFO TEXT, CREATED_ON DATETIME NOT NULL);",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 460,
        "wires": [
            [
                "478246de7edec987"
            ]
        ]
    },
    {
        "id": "e3be79463893cf77",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 460,
        "wires": []
    },
    {
        "id": "85de2b03ad37d2c0",
        "type": "sqlite",
        "z": "c0763147.55f79",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 500,
        "y": 1460,
        "wires": [
            [
                "1cdea7865928ec32"
            ]
        ]
    },
    {
        "id": "867f9905138db54a",
        "type": "inject",
        "z": "c0763147.55f79",
        "name": "DROP ENT_B1SERVICE_LOGS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DROP TABLE ENT_B1SERVICE_LOGS",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 1460,
        "wires": [
            [
                "85de2b03ad37d2c0"
            ]
        ]
    },
    {
        "id": "1cdea7865928ec32",
        "type": "debug",
        "z": "c0763147.55f79",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1460,
        "wires": []
    },
    {
        "id": "da0c28ed.80a278",
        "type": "sqlite",
        "z": "e7f8ec40.9de36",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 620,
        "y": 80,
        "wires": [
            [
                "b6fb9b37.e37958",
                "74a195eb.5ae05c"
            ]
        ]
    },
    {
        "id": "27f1a68a.ce5e0a",
        "type": "function",
        "z": "e7f8ec40.9de36",
        "name": "",
        "func": "const { username, password} = msg.req.body;\nmsg.topic=`SELECT * FROM  ENT_USERS where USERNAME= '${username}' and PASSWORD= '${password}'`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 80,
        "wires": [
            [
                "da0c28ed.80a278"
            ]
        ]
    },
    {
        "id": "74a195eb.5ae05c",
        "type": "debug",
        "z": "e7f8ec40.9de36",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 40,
        "wires": []
    },
    {
        "id": "3545bacc.f5fa76",
        "type": "http response",
        "z": "e7f8ec40.9de36",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 940,
        "y": 420,
        "wires": []
    },
    {
        "id": "98daf2d1.0be9",
        "type": "http in",
        "z": "e7f8ec40.9de36",
        "name": "login",
        "url": "/api/login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 80,
        "wires": [
            [
                "a8aaa364.b8fad"
            ]
        ]
    },
    {
        "id": "b6fb9b37.e37958",
        "type": "function",
        "z": "e7f8ec40.9de36",
        "name": "",
        "func": "if(msg.payload.length){\n    msg.payload = msg.payload[0];\n    return [msg, null];\n}\nmsg.payload=\"Incorrect Username/Password\";\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 80,
        "wires": [
            [
                "67e4b5d3cc0ff459"
            ],
            [
                "dcc64289.66426"
            ]
        ]
    },
    {
        "id": "dcc64289.66426",
        "type": "http response",
        "z": "e7f8ec40.9de36",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 980,
        "y": 120,
        "wires": []
    },
    {
        "id": "67e4b5d3cc0ff459",
        "type": "link out",
        "z": "e7f8ec40.9de36",
        "name": "",
        "mode": "link",
        "links": [
            "80c085ab42f916e2"
        ],
        "x": 935,
        "y": 40,
        "wires": []
    },
    {
        "id": "80c085ab42f916e2",
        "type": "link in",
        "z": "e7f8ec40.9de36",
        "name": "",
        "links": [
            "67e4b5d3cc0ff459"
        ],
        "x": 85,
        "y": 260,
        "wires": [
            [
                "fdc8740118891a16"
            ]
        ]
    },
    {
        "id": "d01b6175.bf5dc",
        "type": "function",
        "z": "e7f8ec40.9de36",
        "name": "generate session ID",
        "func": "const numberId = Math.round(Math.random() * 10000);\nconst { flowStartTimestamp } = msg.flowInfo;\nconst day = flowStartTimestamp.getDate();\nconst dayFormat = day < 10 ? `0${day}` : day;\nconst month = (flowStartTimestamp.getMonth() + 1);\nconst monthFormat = month < 10 ? `0${month}` : month;\nconst yearFormat = flowStartTimestamp.getFullYear();\nconst timestamp = `${yearFormat}-${monthFormat}-${dayFormat}`;\n\nmsg.generatedSessionId = `ENT-${timestamp}-${numberId}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 300,
        "wires": [
            [
                "d6ec66e9.67f688"
            ]
        ]
    },
    {
        "id": "d6ec66e9.67f688",
        "type": "function",
        "z": "e7f8ec40.9de36",
        "name": "set session data",
        "func": "// const { sessionId, sessionTimeout } = msg.serviceLayer;\nconst ENT_SESSION_TIMEOUT  = 30;\nconst { flowStartTimestamp } = msg.flowInfo;\n// const { database, userName, password } = msg.configOverride;\nconst { generatedSessionId } = msg;\nconst { host } = msg.req.headers;\nconst { username, password} = msg.req.body;\n\nconst newSession = {\n    lastAccessTimestamp: flowStartTimestamp,\n    // b1SessionId: sessionId,\n    // b1SessionTimeout: sessionTimeout,\n    entSessionTimeout: ENT_SESSION_TIMEOUT,\n    entSessionId: generatedSessionId,\n    // database,\n    username\n    // password,\n    // userGroups,\n    // appSections,\n    // paramsSAP: msg.flowInfo.paramsSAP\n};\nmsg.reqSession = newSession;\n\nconst sessions = global.get('sessionInfo') || [];\nglobal.set('sessionInfo', sessions.concat(newSession));\n\nmsg.currentSession = newSession;\n\n//Vlad : 28.09.2020\n// msg.cookies = {\n//     entSessionId: { \n//         value : generatedSessionId,\n//         path : '/api/odatav2'\n//     }\n// }\n\n// msg.cookies = {\n//     entSessionId: { \n//          value : generatedSessionId,\n//          maxAge : 900000,\n//          domain : host.split(':')[0]\n//      }\n// };\n\n// 2020.11.10 - works but it does not set domain or other properties of cookie\n// msg.cookies = {\n//     entSessionId : generatedSessionId\n// };\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 300,
        "wires": [
            [
                "67b9fe76.c6992",
                "4333281ea4c9d8fd"
            ]
        ]
    },
    {
        "id": "67b9fe76.c6992",
        "type": "function",
        "z": "e7f8ec40.9de36",
        "name": "send session data payload",
        "func": "const { currentSession } = msg;\nconst {\n    username,\n    entSessionTimeout,\n    entSessionId,\n} = currentSession;\n\nmsg.payload = {\n    \n};\n\nmsg.cookies = {\n    entSessionId\n};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 420,
        "wires": [
            [
                "3545bacc.f5fa76",
                "e06bff1e0a1515f8"
            ]
        ]
    },
    {
        "id": "fdc8740118891a16",
        "type": "subflow:19a1d236fd159ab3",
        "z": "e7f8ec40.9de36",
        "name": "",
        "x": 220,
        "y": 260,
        "wires": [
            [
                "a54237c0920426a7"
            ],
            [
                "d01b6175.bf5dc"
            ]
        ]
    },
    {
        "id": "a54237c0920426a7",
        "type": "link out",
        "z": "e7f8ec40.9de36",
        "name": "",
        "mode": "link",
        "links": [
            "58421591396361ca"
        ],
        "x": 375,
        "y": 220,
        "wires": []
    },
    {
        "id": "58421591396361ca",
        "type": "link in",
        "z": "e7f8ec40.9de36",
        "name": "",
        "links": [
            "a54237c0920426a7"
        ],
        "x": 485,
        "y": 460,
        "wires": [
            [
                "67b9fe76.c6992"
            ]
        ]
    },
    {
        "id": "a8aaa364.b8fad",
        "type": "function",
        "z": "e7f8ec40.9de36",
        "name": "flow info init",
        "func": "msg.flowInfo = {};\nmsg.flowInfo.flowName = 'Login';\nmsg.flowInfo.flowStartTimestamp = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 80,
        "wires": [
            [
                "27f1a68a.ce5e0a"
            ]
        ]
    },
    {
        "id": "e06bff1e0a1515f8",
        "type": "debug",
        "z": "e7f8ec40.9de36",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 380,
        "wires": []
    },
    {
        "id": "4333281ea4c9d8fd",
        "type": "debug",
        "z": "e7f8ec40.9de36",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 260,
        "wires": []
    },
    {
        "id": "9ad8dbca52938aee",
        "type": "http in",
        "z": "deb00af94856228f",
        "name": "logout",
        "url": "/api/logout",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "6e6bb52bc6957a66"
            ]
        ]
    },
    {
        "id": "946052a80e818814",
        "type": "debug",
        "z": "deb00af94856228f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 100,
        "wires": []
    },
    {
        "id": "301bf89c7b161308",
        "type": "http response",
        "z": "deb00af94856228f",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 560,
        "y": 180,
        "wires": []
    },
    {
        "id": "b70516345e0e2501",
        "type": "http response",
        "z": "deb00af94856228f",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 560,
        "y": 100,
        "wires": []
    },
    {
        "id": "6e6bb52bc6957a66",
        "type": "function",
        "z": "deb00af94856228f",
        "name": "session check",
        "func": "const sessionInfo = global.get('sessionInfo');\n// msg.sessionInfo=sessionInfo;\nconst { entSessionId } = msg.req.cookies; \n\nconst isReqSession = (elem) => {\n    return (\n        elem.entSessionId === entSessionId\n    )\n}\n\nif (sessionInfo) {\n    const reqSession = sessionInfo.filter(isReqSession);\n    if (reqSession.length > 0) {\n        const sessionIndex = sessionInfo.findIndex(isReqSession);\n        sessionInfo.splice(sessionIndex,1)\n        msg.sessionInfo = global.get('sessionInfo');\n        msg.payload = 'Logout Successfull';\n        return [msg, null];\n    }\n}\n\nmsg.statusCode = 401;\nmsg.payload = 'User not authenticated.'\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 140,
        "wires": [
            [
                "b70516345e0e2501",
                "946052a80e818814"
            ],
            [
                "301bf89c7b161308"
            ]
        ]
    },
    {
        "id": "3eded5ac.09d2da",
        "type": "function",
        "z": "dcad3eb1.e262e",
        "name": "sql",
        "func": "\nif (!msg.flowInfo)\n    msg.flowInfo = {};\n    \nmsg.flowInfo.sql = 'call SBOCOMMON.TMSP_GETCOMPLIST';\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 300,
        "wires": [
            [
                "c18ca30b7fc2bfa0"
            ]
        ]
    },
    {
        "id": "a197420b.436d4",
        "type": "http response",
        "z": "dcad3eb1.e262e",
        "name": "OK",
        "statusCode": "200",
        "headers": {},
        "x": 910,
        "y": 260,
        "wires": []
    },
    {
        "id": "d29f93c.23c147",
        "type": "http response",
        "z": "dcad3eb1.e262e",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 320,
        "wires": []
    },
    {
        "id": "f86bb7e2.28f588",
        "type": "debug",
        "z": "dcad3eb1.e262e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 910,
        "y": 220,
        "wires": []
    },
    {
        "id": "c96b304c.04279",
        "type": "debug",
        "z": "dcad3eb1.e262e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 910,
        "y": 360,
        "wires": []
    },
    {
        "id": "fabdb8b7.f73ae8",
        "type": "http in",
        "z": "dcad3eb1.e262e",
        "name": "GetCompanies",
        "url": "/api/getCompanies",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "a24e82a60a80e7f0"
            ]
        ]
    },
    {
        "id": "c18ca30b7fc2bfa0",
        "type": "HanaClient-request",
        "z": "dcad3eb1.e262e",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 690,
        "y": 300,
        "wires": [
            [
                "a197420b.436d4",
                "f86bb7e2.28f588"
            ],
            [
                "d29f93c.23c147",
                "c96b304c.04279"
            ]
        ]
    },
    {
        "id": "da85b95eb6713a86",
        "type": "subflow:7ee266ca63cceab4",
        "z": "dcad3eb1.e262e",
        "name": "",
        "env": [
            {
                "name": "b1-sl-config",
                "type": "bool",
                "value": "false"
            }
        ],
        "x": 360,
        "y": 300,
        "wires": [
            [
                "3eded5ac.09d2da"
            ]
        ]
    },
    {
        "id": "a24e82a60a80e7f0",
        "type": "subflow:19a1d236fd159ab3",
        "z": "dcad3eb1.e262e",
        "name": "",
        "x": 240,
        "y": 220,
        "wires": [
            [
                "da85b95eb6713a86"
            ],
            [
                "9c56c4b94b3db256"
            ]
        ]
    },
    {
        "id": "9c56c4b94b3db256",
        "type": "http response",
        "z": "dcad3eb1.e262e",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 410,
        "y": 180,
        "wires": []
    },
    {
        "id": "63ef73.725e708c",
        "type": "http in",
        "z": "6ccd91ab.19ee9",
        "name": "GET JOBS",
        "url": "/api/jobs",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 280,
        "wires": [
            [
                "1750a2c8b07aa780"
            ]
        ]
    },
    {
        "id": "b62ee9b5.4b1388",
        "type": "http in",
        "z": "6ccd91ab.19ee9",
        "name": "GET LOGS",
        "url": "/api/logs",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 560,
        "wires": [
            [
                "cf06e152beeda5eb"
            ]
        ]
    },
    {
        "id": "682fe8e0.c0c0c8",
        "type": "http in",
        "z": "6ccd91ab.19ee9",
        "name": "find Job by Id",
        "url": "/api/jobbyId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 940,
        "wires": [
            [
                "f9a77e869043609e"
            ]
        ]
    },
    {
        "id": "768fc65d.c42718",
        "type": "http in",
        "z": "6ccd91ab.19ee9",
        "name": "find Log by Id",
        "url": "/api/logbyId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1020,
        "wires": [
            [
                "d26dca67.3329e8"
            ]
        ]
    },
    {
        "id": "240ab2e3.1cf0fe",
        "type": "http in",
        "z": "6ccd91ab.19ee9",
        "name": "find Job by Name",
        "url": "/api/jobbyName",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1100,
        "wires": [
            [
                "deaa6e5a.c8d6f"
            ]
        ]
    },
    {
        "id": "e6c1fcc6.034b",
        "type": "http in",
        "z": "6ccd91ab.19ee9",
        "name": "Create JOBS",
        "url": "/api/createJob",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 120,
        "wires": [
            [
                "379de5047c549d25"
            ]
        ]
    },
    {
        "id": "52061937.177d08",
        "type": "http in",
        "z": "6ccd91ab.19ee9",
        "name": "Create LOGS",
        "url": "/api/createLog",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 200,
        "wires": [
            [
                "3545210cdf6e71c4"
            ]
        ]
    },
    {
        "id": "a3069ff6.7ff25",
        "type": "sqlite",
        "z": "6ccd91ab.19ee9",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 720,
        "y": 120,
        "wires": [
            [
                "3af03560.ec996a",
                "a1765f83.c031f"
            ]
        ]
    },
    {
        "id": "3af03560.ec996a",
        "type": "debug",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 80,
        "wires": []
    },
    {
        "id": "d04f4093.a2fea",
        "type": "function",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "func": "\n// \"CREATE TABLE ENT_JOB(JOB_ID TEXT PRIMARY KEY, JOB_NAME TEXT, CREATED_ON TEXT, FROM_SCHEMA TEXT, TO_SCHEMA TEXT, FRQUENCY TEXT, START_ON TEXT, END_ON TEXT, ONE_TIME TEXT)\";\n\nvar {JOB_NAME,BASE_SCHEMA,TARGET_SCHEMA,FREQUENCY, START_ON, END_ON, SCHEDULED, JOB_TYPE, CONFIGURATION, STATUS} = msg.req.body;\n\nEND_ON = END_ON ? END_ON : '9999-12-31 00:00:00';\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\nconst JOB_ID = uuidv4();\n\nmsg.topic = `INSERT INTO ENT_JOBS (JOB_ID,JOB_NAME,CREATED_ON,BASE_SCHEMA,TARGET_SCHEMA,FREQUENCY, START_ON, END_ON, SCHEDULED, JOB_TYPE, CONFIGURATION, STATUS)\n            VALUES ('${JOB_ID}', ${JOB_NAME ? \"'\"+JOB_NAME+\"'\" : JOB_NAME}, datetime('now', 'localtime'), ${BASE_SCHEMA ? \"'\"+BASE_SCHEMA+\"'\" : BASE_SCHEMA}, \n            ${TARGET_SCHEMA ? \"'\"+TARGET_SCHEMA+\"'\" : TARGET_SCHEMA}, ${FREQUENCY ? \"'\"+FREQUENCY+\"'\" : FREQUENCY}, ${START_ON ? \"'\"+START_ON+\"'\" : START_ON}, \n            ${END_ON ? \"'\"+END_ON+\"'\" : END_ON}, ${SCHEDULED ? \"'\"+SCHEDULED+\"'\" : SCHEDULED}, ${JOB_TYPE ? \"'\"+JOB_TYPE+\"'\" : JOB_TYPE}, \n            ${CONFIGURATION ? \"'\"+CONFIGURATION+\"'\" : CONFIGURATION}, ${STATUS ? \"'\"+STATUS+\"'\" : STATUS});`;\n            \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 120,
        "wires": [
            [
                "a3069ff6.7ff25"
            ]
        ]
    },
    {
        "id": "a4796c9d.e85e9",
        "type": "sqlite",
        "z": "6ccd91ab.19ee9",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 720,
        "y": 200,
        "wires": [
            [
                "4438fe60.d997b",
                "5bfdd6a.8ccec28"
            ]
        ]
    },
    {
        "id": "4438fe60.d997b",
        "type": "debug",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 160,
        "wires": []
    },
    {
        "id": "c1634a42.83edc8",
        "type": "function",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "func": "// \"CREATE TABLE ENT_JOB_LOGS(LOG_ID TEXT PRIMARY KEY, JOB_ID TEXT, STARTED_ON TEXT, ENDED_ON TEXT, STATUS CHAR(1), FOREIGN KEY (JOB_ID) REFERENCES ENT_JOB (JOB_ID) ON UPDATE SET NULL ON DELETE SET NULL)\";\n\nconst {JOB_ID,STARTED_ON,ENDED_ON,STATUS} = msg.req.body;\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nconst LOG_ID = uuidv4();\n\nmsg.topic = `INSERT INTO ENT_JOB_LOGS (LOG_ID,JOB_ID,STARTED_ON,ENDED_ON,STATUS)\n            VALUES ('${LOG_ID}', '${JOB_ID}', '${STARTED_ON}', '${ENDED_ON}', '${STATUS}' );`;\n            \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 200,
        "wires": [
            [
                "a4796c9d.e85e9"
            ]
        ]
    },
    {
        "id": "e88db0db.c3ff1",
        "type": "sqlite",
        "z": "6ccd91ab.19ee9",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 720,
        "y": 280,
        "wires": [
            [
                "ec87e38a.e593d",
                "333bd44d.d6021c"
            ]
        ]
    },
    {
        "id": "ec87e38a.e593d",
        "type": "debug",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 240,
        "wires": []
    },
    {
        "id": "b8fbbd7a.2adc6",
        "type": "sqlite",
        "z": "6ccd91ab.19ee9",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 760,
        "y": 560,
        "wires": [
            [
                "70ae9a4a.352eb4",
                "db036bdb.33eff8"
            ]
        ]
    },
    {
        "id": "70ae9a4a.352eb4",
        "type": "debug",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 520,
        "wires": []
    },
    {
        "id": "682f5341.8bf12c",
        "type": "sqlite",
        "z": "6ccd91ab.19ee9",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 760,
        "y": 940,
        "wires": [
            [
                "84168539.aa6a48",
                "bbbeeea7.508b4"
            ]
        ]
    },
    {
        "id": "84168539.aa6a48",
        "type": "debug",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 900,
        "wires": []
    },
    {
        "id": "a1fb1cd.42035e",
        "type": "sqlite",
        "z": "6ccd91ab.19ee9",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 760,
        "y": 1020,
        "wires": [
            [
                "f19fa8ff.3c1668",
                "df58377f.ebaca8"
            ]
        ]
    },
    {
        "id": "f19fa8ff.3c1668",
        "type": "debug",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 980,
        "wires": []
    },
    {
        "id": "b772a89a.2e25f8",
        "type": "sqlite",
        "z": "6ccd91ab.19ee9",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 760,
        "y": 1100,
        "wires": [
            [
                "4c42ee16.13576",
                "e590ad03.06fc8"
            ]
        ]
    },
    {
        "id": "4c42ee16.13576",
        "type": "debug",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 1060,
        "wires": []
    },
    {
        "id": "6bb43ea1.517f6",
        "type": "function",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "func": "\nmsg.topic = `SELECT * FROM  ENT_JOBS`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 280,
        "wires": [
            [
                "e88db0db.c3ff1"
            ]
        ]
    },
    {
        "id": "c07b6c00.bbe15",
        "type": "function",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "func": "\nmsg.topic = `SELECT * FROM  ENT_JOB_LOGS`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 560,
        "wires": [
            [
                "b8fbbd7a.2adc6"
            ]
        ]
    },
    {
        "id": "21941d45.387da2",
        "type": "function",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "func": "\nconst {JOB_ID} = msg.req.query;\n\nmsg.topic = `SELECT * FROM  ENT_JOBS WHERE JOB_ID ='${JOB_ID}'`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 940,
        "wires": [
            [
                "682f5341.8bf12c"
            ]
        ]
    },
    {
        "id": "d26dca67.3329e8",
        "type": "function",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "func": "const {LOG_ID} = msg.req.query;\n\nmsg.topic = `SELECT * FROM  ENT_JOB_LOGS WHERE LOG_ID ='${LOG_ID}'`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1020,
        "wires": [
            [
                "a1fb1cd.42035e"
            ]
        ]
    },
    {
        "id": "deaa6e5a.c8d6f",
        "type": "function",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "func": "\nconst {JOB_NAME} = msg.req.query;\n\nmsg.topic = `SELECT * FROM  ENT_JOB WHERE JOB_NAME LIKE '%${JOB_NAME}%'`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1100,
        "wires": [
            [
                "b772a89a.2e25f8"
            ]
        ]
    },
    {
        "id": "a1765f83.c031f",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 120,
        "wires": []
    },
    {
        "id": "5bfdd6a.8ccec28",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 200,
        "wires": []
    },
    {
        "id": "333bd44d.d6021c",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 280,
        "wires": []
    },
    {
        "id": "db036bdb.33eff8",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 560,
        "wires": []
    },
    {
        "id": "bbbeeea7.508b4",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 940,
        "wires": []
    },
    {
        "id": "df58377f.ebaca8",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 1020,
        "wires": []
    },
    {
        "id": "e590ad03.06fc8",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 1100,
        "wires": []
    },
    {
        "id": "72c649cc.1b2658",
        "type": "catch",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 160,
        "y": 1180,
        "wires": [
            [
                "791de05c.d7aeb"
            ]
        ]
    },
    {
        "id": "56d3aa8a.c684e4",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 530,
        "y": 1180,
        "wires": []
    },
    {
        "id": "a0166404.2c9968",
        "type": "debug",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1140,
        "wires": []
    },
    {
        "id": "791de05c.d7aeb",
        "type": "function",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "func": "msg.payload = msg.error.message\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1180,
        "wires": [
            [
                "56d3aa8a.c684e4",
                "a0166404.2c9968"
            ]
        ]
    },
    {
        "id": "7874d580.f7460c",
        "type": "http in",
        "z": "6ccd91ab.19ee9",
        "name": "Update Job",
        "url": "/api/updateJob",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 660,
        "wires": [
            [
                "92990f901a2190f3"
            ]
        ]
    },
    {
        "id": "b77a0b24.c94348",
        "type": "sqlite",
        "z": "6ccd91ab.19ee9",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 760,
        "y": 660,
        "wires": [
            [
                "d85ff82e.ca2248",
                "e32d333c.a747"
            ]
        ]
    },
    {
        "id": "d85ff82e.ca2248",
        "type": "debug",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 620,
        "wires": []
    },
    {
        "id": "a537cf94.7edea",
        "type": "function",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "func": "\nvar {JOB_ID,JOB_NAME,BASE_SCHEMA,TARGET_SCHEMA,FREQUENCY, START_ON, END_ON, SCHEDULED, JOB_TYPE, CONFIGURATION, STATUS} = msg.req.body;\n\nEND_ON = END_ON ? END_ON : '9999-12-31 00:00:00';\n\nmsg.topic = `UPDATE ENT_JOBS SET JOB_NAME = '${JOB_NAME}' ,BASE_SCHEMA = '${BASE_SCHEMA}', TARGET_SCHEMA = '${TARGET_SCHEMA}' ,FREQUENCY = '${FREQUENCY}', START_ON = '${START_ON}', END_ON = '${END_ON}', SCHEDULED = '${SCHEDULED}', \nJOB_TYPE = ${JOB_TYPE ? \"'\"+JOB_TYPE+\"'\" : \"null\"}, STATUS = '${STATUS}', CONFIGURATION = '${CONFIGURATION}' WHERE JOB_ID ='${JOB_ID}'`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 660,
        "wires": [
            [
                "b77a0b24.c94348"
            ]
        ]
    },
    {
        "id": "e32d333c.a747",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 660,
        "wires": []
    },
    {
        "id": "c471f19a.fa776",
        "type": "http in",
        "z": "6ccd91ab.19ee9",
        "name": "find Logs by Job Id",
        "url": "/api/logbyJobId",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 740,
        "wires": [
            [
                "694b9c8f78fd7243"
            ]
        ]
    },
    {
        "id": "60acf12d.69726",
        "type": "sqlite",
        "z": "6ccd91ab.19ee9",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 760,
        "y": 740,
        "wires": [
            [
                "d3cb0f92.1cad1",
                "966a345a5fc8b890"
            ]
        ]
    },
    {
        "id": "d3cb0f92.1cad1",
        "type": "debug",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 700,
        "wires": []
    },
    {
        "id": "497b3bf4.efbe54",
        "type": "function",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "func": "const {JOB_ID} = msg.req.query;\n\nmsg.topic = `SELECT * FROM  ENT_JOB_LOGS WHERE JOB_ID ='${JOB_ID}'`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 740,
        "wires": [
            [
                "60acf12d.69726"
            ]
        ]
    },
    {
        "id": "2b007564.35181a",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1070,
        "y": 740,
        "wires": []
    },
    {
        "id": "98b86de1.aa9fb",
        "type": "http in",
        "z": "6ccd91ab.19ee9",
        "name": "Job Soft Delete ",
        "url": "/api/jobSoftDelete",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 840,
        "wires": [
            [
                "8762e1e0b2c89683"
            ]
        ]
    },
    {
        "id": "33b19dcb.bdb482",
        "type": "sqlite",
        "z": "6ccd91ab.19ee9",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 760,
        "y": 840,
        "wires": [
            [
                "5554a1fd.64b41",
                "5265b488.23e5cc"
            ]
        ]
    },
    {
        "id": "5554a1fd.64b41",
        "type": "debug",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 800,
        "wires": []
    },
    {
        "id": "448a3845.99e3e8",
        "type": "function",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "func": "\nconst {JOB_ID} = msg.req.query;\n\nmsg.topic = `UPDATE ENT_JOBS SET STATUS = 'D'   WHERE JOB_ID ='${JOB_ID}'`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 840,
        "wires": [
            [
                "33b19dcb.bdb482"
            ]
        ]
    },
    {
        "id": "5265b488.23e5cc",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 840,
        "wires": []
    },
    {
        "id": "966a345a5fc8b890",
        "type": "function",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "func": "\nfor(var i in msg.payload){\n    if(msg.payload[i].CONFIGURATION)\n    var temp = JSON.parse(msg.payload[i].CONFIGURATION)\n    if(temp.Password){\n        temp.Password=\"*****\";\n    }\n    \n    msg.payload[i].CONFIGURATION = JSON.stringify(temp);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 740,
        "wires": [
            [
                "2b007564.35181a"
            ]
        ]
    },
    {
        "id": "4ea229794e1c5202",
        "type": "sqlite",
        "z": "6ccd91ab.19ee9",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 740,
        "y": 400,
        "wires": [
            [
                "9ff112eb9ea22e12"
            ]
        ]
    },
    {
        "id": "18800a8f0749bb01",
        "type": "function",
        "z": "6ccd91ab.19ee9",
        "name": "Host Info SQL",
        "func": "\nmsg.topic = `\nSELECT * FROM ENT_SERVERS where HOSTNAME='${msg.req.body.HOSTNAME}';   \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 400,
        "wires": [
            [
                "4ea229794e1c5202"
            ]
        ]
    },
    {
        "id": "9ff112eb9ea22e12",
        "type": "function",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "func": "if(!msg.payload.length){\n    return [msg, null];\n}\nmsg.payload = msg.payload[0];\n\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 400,
        "wires": [
            [
                "f460521902e17323"
            ],
            [
                "27c4352cb68623ef"
            ]
        ]
    },
    {
        "id": "81d8f5d5a550ce5e",
        "type": "sqlite",
        "z": "6ccd91ab.19ee9",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 720,
        "y": 460,
        "wires": [
            [
                "a7aa1eb581ea0267",
                "5a33e615f02f77c1"
            ]
        ]
    },
    {
        "id": "a7aa1eb581ea0267",
        "type": "debug",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 480,
        "wires": []
    },
    {
        "id": "27c4352cb68623ef",
        "type": "function",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "func": "const {HOSTNAME, PORT, USERNAME, PASSWORD} = msg.req.body;\nmsg.topic = `\nUPDATE ENT_SERVERS SET HOSTNAME='${HOSTNAME}',PORT = ${PORT}, USERNAME='${USERNAME}', PASSWORD='${PASSWORD}' where HOSTNAME='${msg.req.body.HOSTNAME}';   \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 460,
        "wires": [
            [
                "81d8f5d5a550ce5e"
            ]
        ]
    },
    {
        "id": "5a33e615f02f77c1",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 460,
        "wires": []
    },
    {
        "id": "15061ef612fd0f3a",
        "type": "http in",
        "z": "6ccd91ab.19ee9",
        "name": "Create/Update Server",
        "url": "/api/updateHostInfo",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 400,
        "wires": [
            [
                "eaa1c860d76183db"
            ]
        ]
    },
    {
        "id": "a51b6cda229054b5",
        "type": "sqlite",
        "z": "6ccd91ab.19ee9",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 720,
        "y": 340,
        "wires": [
            [
                "dfd632c1858f894d",
                "5ed64a8d48465ac7"
            ]
        ]
    },
    {
        "id": "dfd632c1858f894d",
        "type": "debug",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 300,
        "wires": []
    },
    {
        "id": "f460521902e17323",
        "type": "function",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "func": "// \"CREATE TABLE ENT_JOB_LOGS(LOG_ID TEXT PRIMARY KEY, JOB_ID TEXT, STARTED_ON TEXT, ENDED_ON TEXT, STATUS CHAR(1), FOREIGN KEY (JOB_ID) REFERENCES ENT_JOB (JOB_ID) ON UPDATE SET NULL ON DELETE SET NULL)\";\n\nconst {JOB_ID,STARTED_ON,ENDED_ON,STATUS} = msg.req.body;\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nconst SERVER_ID = uuidv4();\nconst {HOSTNAME, PORT, USERNAME, PASSWORD} = msg.req.body;\n\nmsg.topic = `INSERT INTO ENT_SERVERS (SERVER_ID, HOSTNAME, PORT, USERNAME, PASSWORD, CREATED_ON)\n            VALUES ('${SERVER_ID}','${HOSTNAME}', ${PORT}, '${USERNAME}', '${PASSWORD}', datetime('now', 'localtime'));`;\n            \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 340,
        "wires": [
            [
                "a51b6cda229054b5"
            ]
        ]
    },
    {
        "id": "5ed64a8d48465ac7",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 340,
        "wires": []
    },
    {
        "id": "379de5047c549d25",
        "type": "subflow:19a1d236fd159ab3",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "x": 300,
        "y": 120,
        "wires": [
            [
                "d04f4093.a2fea"
            ],
            [
                "bac369e6d7b35348"
            ]
        ]
    },
    {
        "id": "bac369e6d7b35348",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 310,
        "y": 160,
        "wires": []
    },
    {
        "id": "3545210cdf6e71c4",
        "type": "subflow:19a1d236fd159ab3",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "x": 300,
        "y": 200,
        "wires": [
            [
                "c1634a42.83edc8"
            ],
            [
                "b3fbc0cc597e2c2b"
            ]
        ]
    },
    {
        "id": "b3fbc0cc597e2c2b",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 310,
        "y": 240,
        "wires": []
    },
    {
        "id": "1750a2c8b07aa780",
        "type": "subflow:19a1d236fd159ab3",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "x": 300,
        "y": 280,
        "wires": [
            [
                "6bb43ea1.517f6"
            ],
            [
                "497f8825141f7ee6"
            ]
        ]
    },
    {
        "id": "497f8825141f7ee6",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 310,
        "y": 320,
        "wires": []
    },
    {
        "id": "eaa1c860d76183db",
        "type": "subflow:19a1d236fd159ab3",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "x": 340,
        "y": 400,
        "wires": [
            [
                "18800a8f0749bb01"
            ],
            [
                "b0e4c74d98087aa4"
            ]
        ]
    },
    {
        "id": "b0e4c74d98087aa4",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 350,
        "y": 440,
        "wires": []
    },
    {
        "id": "cf06e152beeda5eb",
        "type": "subflow:19a1d236fd159ab3",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "x": 320,
        "y": 560,
        "wires": [
            [
                "c07b6c00.bbe15"
            ],
            [
                "745233556d2ad4f4"
            ]
        ]
    },
    {
        "id": "745233556d2ad4f4",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 330,
        "y": 600,
        "wires": []
    },
    {
        "id": "92990f901a2190f3",
        "type": "subflow:19a1d236fd159ab3",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "x": 300,
        "y": 660,
        "wires": [
            [
                "a537cf94.7edea"
            ],
            [
                "a5f6327bfd1634f5"
            ]
        ]
    },
    {
        "id": "a5f6327bfd1634f5",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 310,
        "y": 700,
        "wires": []
    },
    {
        "id": "694b9c8f78fd7243",
        "type": "subflow:19a1d236fd159ab3",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "x": 360,
        "y": 740,
        "wires": [
            [
                "497b3bf4.efbe54"
            ],
            [
                "cfaef68d2f52c280"
            ]
        ]
    },
    {
        "id": "cfaef68d2f52c280",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 370,
        "y": 780,
        "wires": []
    },
    {
        "id": "8762e1e0b2c89683",
        "type": "subflow:19a1d236fd159ab3",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "x": 340,
        "y": 840,
        "wires": [
            [
                "448a3845.99e3e8"
            ],
            [
                "21faa24a3e9c2ce0"
            ]
        ]
    },
    {
        "id": "21faa24a3e9c2ce0",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 320,
        "y": 880,
        "wires": []
    },
    {
        "id": "f9a77e869043609e",
        "type": "subflow:19a1d236fd159ab3",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "x": 340,
        "y": 940,
        "wires": [
            [
                "21941d45.387da2"
            ],
            [
                "1c94c8a460f4261a"
            ]
        ]
    },
    {
        "id": "1c94c8a460f4261a",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 330,
        "y": 980,
        "wires": []
    },
    {
        "id": "57da292c3ce7a013",
        "type": "http in",
        "z": "6ccd91ab.19ee9",
        "name": "GET USERS",
        "url": "/api/users",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 40,
        "wires": [
            [
                "6abb71df4834039e"
            ]
        ]
    },
    {
        "id": "5f20c31dad2b1437",
        "type": "sqlite",
        "z": "6ccd91ab.19ee9",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 720,
        "y": 40,
        "wires": [
            [
                "c42c68a0a1d27a1b",
                "1dfa308b63d0a05b"
            ]
        ]
    },
    {
        "id": "ce91dcfff03334b4",
        "type": "function",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "func": "\nmsg.topic = `SELECT * FROM  ENT_USERS`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 40,
        "wires": [
            [
                "5f20c31dad2b1437"
            ]
        ]
    },
    {
        "id": "1dfa308b63d0a05b",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 40,
        "wires": []
    },
    {
        "id": "6abb71df4834039e",
        "type": "subflow:19a1d236fd159ab3",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "x": 300,
        "y": 40,
        "wires": [
            [
                "ce91dcfff03334b4"
            ],
            [
                "b402a3a8fed6b529"
            ]
        ]
    },
    {
        "id": "b402a3a8fed6b529",
        "type": "http response",
        "z": "6ccd91ab.19ee9",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 310,
        "y": 80,
        "wires": []
    },
    {
        "id": "c42c68a0a1d27a1b",
        "type": "debug",
        "z": "6ccd91ab.19ee9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 20,
        "wires": []
    },
    {
        "id": "86df040c.204668",
        "type": "inject",
        "z": "58b888b4.6c1618",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "4622d10.bfffc3",
        "type": "sqlite",
        "z": "58b888b4.6c1618",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 440,
        "y": 160,
        "wires": [
            [
                "2ac03a5f.c3a0c6",
                "bafe4ff3.8ade4"
            ]
        ]
    },
    {
        "id": "d32ae5b9.640118",
        "type": "function",
        "z": "58b888b4.6c1618",
        "name": "Join Job&Log",
        "func": "\nmsg.topic = `SELECT *,J1.JOB_ID, J1.STATUS, J1.CONFIGURATION FROM  ENT_JOBS J1 LEFT OUTER JOIN \n(SELECT * FROM ENT_JOB_LOGS WHERE (JOB_ID, STARTED_ON) IN ( SELECT JOB_ID , MAX(STARTED_ON) FROM ENT_JOB_LOGS WHERE RUN_TYPE = 'S' GROUP BY JOB_ID )) L1 \nON J1.JOB_ID=L1.JOB_ID WHERE J1.SCHEDULED ='Y' AND J1.STATUS = 'A' \nAND CAST(strftime('%s',datetime('now', 'localtime'))  AS  integer) <= CAST(strftime('%s',J1.END_ON) AS integer) \nAND CAST(strftime('%s',datetime('now', 'localtime')) AS integer) >= CAST(strftime('%s',J1.START_ON) AS integer)\n\n--AND JOB_ID NOT IN (SELECT JOB_ID FROM ENT_JOB_LOGS WHERE date(STARTED_ON) = date('now') )`;\n\n//LEFT OUTER JOIN ENT_JOB_LOGS L1 ON J1.JOB_ID=L1.JOB_ID\n//J1.END_ON > '${new Date()}' AND\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 160,
        "wires": [
            [
                "4622d10.bfffc3"
            ]
        ]
    },
    {
        "id": "dcb19515.c440d8",
        "type": "debug",
        "z": "58b888b4.6c1618",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 80,
        "wires": []
    },
    {
        "id": "8532c4bd.2f1f08",
        "type": "sqlite",
        "z": "58b888b4.6c1618",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 520,
        "y": 660,
        "wires": [
            [
                "d58cbd76.4798e"
            ]
        ]
    },
    {
        "id": "62916676.c1a508",
        "type": "function",
        "z": "58b888b4.6c1618",
        "name": "Log - Job In-Process",
        "func": "\nconst {JOB_ID, CONFIGURATION, RUN_TYPE} = msg.item;\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nconst LOG_ID = uuidv4();\nmsg.LOG_ID = LOG_ID;\nconst MSG = \"Current task: 10. Export Schema\"\n\nmsg.topic = `INSERT INTO ENT_JOB_LOGS (LOG_ID,JOB_ID,STARTED_ON,STATUS, CONFIGURATION, RUN_TYPE, MSG)\n            VALUES ('${LOG_ID}', '${JOB_ID}', datetime('now', 'localtime'), 'I', '${CONFIGURATION}', '${RUN_TYPE}', '${MSG}');`;\n            \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 660,
        "wires": [
            [
                "8532c4bd.2f1f08"
            ]
        ]
    },
    {
        "id": "76fa59cf.0f7de8",
        "type": "subflow:5ddb2001.76d37",
        "z": "58b888b4.6c1618",
        "name": "",
        "env": [
            {
                "name": "inputVarName",
                "value": "payload",
                "type": "str"
            },
            {
                "name": "currentObjectName",
                "value": "item",
                "type": "str"
            }
        ],
        "x": 790,
        "y": 160,
        "wires": [
            [
                "44b3487a.144a18"
            ],
            [
                "6d903ddc.d73b94"
            ]
        ]
    },
    {
        "id": "44b3487a.144a18",
        "type": "function",
        "z": "58b888b4.6c1618",
        "name": "",
        "func": "msg.item.RUN_TYPE = \"S\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 120,
        "wires": [
            [
                "dcb19515.c440d8",
                "76fa59cf.0f7de8",
                "64f94c54.4ba714"
            ]
        ]
    },
    {
        "id": "d58cbd76.4798e",
        "type": "function",
        "z": "58b888b4.6c1618",
        "name": "Check JobType",
        "func": "\nif(msg.item.JOB_TYPE===\"COPY_COMPANY\"){\n    return [msg, null];\n}\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 660,
        "wires": [
            [
                "7d00c343.ac26ec",
                "1895b955.ff0737"
            ],
            [
                "c40187b7.2f9538",
                "a7d4823e.03602"
            ]
        ]
    },
    {
        "id": "64f94c54.4ba714",
        "type": "link out",
        "z": "58b888b4.6c1618",
        "name": "",
        "links": [
            "c5231673.2a2448"
        ],
        "x": 1075,
        "y": 120,
        "wires": []
    },
    {
        "id": "c5231673.2a2448",
        "type": "link in",
        "z": "58b888b4.6c1618",
        "name": "",
        "links": [
            "64f94c54.4ba714",
            "9b12ea1d.ef2d18"
        ],
        "x": 105,
        "y": 500,
        "wires": [
            [
                "830e470247a341f7"
            ]
        ]
    },
    {
        "id": "1895b955.ff0737",
        "type": "link out",
        "z": "58b888b4.6c1618",
        "name": "",
        "links": [
            "b3226777.67bb78",
            "f9dcd32b.d33f9",
            "7b39e2e278639562"
        ],
        "x": 935,
        "y": 620,
        "wires": []
    },
    {
        "id": "c40187b7.2f9538",
        "type": "link out",
        "z": "58b888b4.6c1618",
        "name": "",
        "links": [],
        "x": 935,
        "y": 700,
        "wires": []
    },
    {
        "id": "7d00c343.ac26ec",
        "type": "debug",
        "z": "58b888b4.6c1618",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 580,
        "wires": []
    },
    {
        "id": "a7d4823e.03602",
        "type": "debug",
        "z": "58b888b4.6c1618",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 740,
        "wires": []
    },
    {
        "id": "2ac03a5f.c3a0c6",
        "type": "debug",
        "z": "58b888b4.6c1618",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 100,
        "wires": []
    },
    {
        "id": "b0c4015b.d7442",
        "type": "sqlite",
        "z": "58b888b4.6c1618",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 560,
        "y": 320,
        "wires": [
            [
                "6c78735a.45f55c",
                "448fd6c6.c03e08"
            ]
        ]
    },
    {
        "id": "9749a28e.aeec6",
        "type": "function",
        "z": "58b888b4.6c1618",
        "name": "",
        "func": "\nconst {JOB_ID} = msg.req.body;\n\nmsg.topic = `SELECT * FROM  ENT_JOBS WHERE JOB_ID ='${JOB_ID}'`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 320,
        "wires": [
            [
                "b0c4015b.d7442"
            ]
        ]
    },
    {
        "id": "448fd6c6.c03e08",
        "type": "function",
        "z": "58b888b4.6c1618",
        "name": "",
        "func": "msg.item=msg.payload[0];\nmsg.item.RUN_TYPE=\"M\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 320,
        "wires": [
            [
                "95407b82.512c98",
                "9b12ea1d.ef2d18"
            ]
        ]
    },
    {
        "id": "d54e340d.3b0528",
        "type": "http in",
        "z": "58b888b4.6c1618",
        "name": "Run Job",
        "url": "/api/runJob",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 320,
        "wires": [
            [
                "9749a28e.aeec6"
            ]
        ]
    },
    {
        "id": "afc5a47c.585718",
        "type": "comment",
        "z": "58b888b4.6c1618",
        "name": "For Scheduled Job",
        "info": "",
        "x": 130,
        "y": 60,
        "wires": []
    },
    {
        "id": "8423b709.302458",
        "type": "comment",
        "z": "58b888b4.6c1618",
        "name": "For Non-Scheduled Job",
        "info": "",
        "x": 140,
        "y": 240,
        "wires": []
    },
    {
        "id": "3d66ce2c.725802",
        "type": "comment",
        "z": "58b888b4.6c1618",
        "name": "Log - Job In-Process",
        "info": "",
        "x": 130,
        "y": 560,
        "wires": []
    },
    {
        "id": "95407b82.512c98",
        "type": "http response",
        "z": "58b888b4.6c1618",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 340,
        "wires": []
    },
    {
        "id": "6c78735a.45f55c",
        "type": "debug",
        "z": "58b888b4.6c1618",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 240,
        "wires": []
    },
    {
        "id": "6aa0480e.138ac8",
        "type": "comment",
        "z": "58b888b4.6c1618",
        "name": "Read Config_Flow.json",
        "info": "",
        "x": 140,
        "y": 420,
        "wires": []
    },
    {
        "id": "9b12ea1d.ef2d18",
        "type": "link out",
        "z": "58b888b4.6c1618",
        "name": "",
        "links": [
            "c5231673.2a2448"
        ],
        "x": 955,
        "y": 340,
        "wires": []
    },
    {
        "id": "276ba7ff.7c8ca8",
        "type": "link in",
        "z": "58b888b4.6c1618",
        "name": "",
        "links": [
            "24f1e8e5.4aecb8"
        ],
        "x": 85,
        "y": 660,
        "wires": [
            [
                "62916676.c1a508"
            ]
        ]
    },
    {
        "id": "24f1e8e5.4aecb8",
        "type": "link out",
        "z": "58b888b4.6c1618",
        "name": "",
        "links": [
            "276ba7ff.7c8ca8"
        ],
        "x": 985,
        "y": 500,
        "wires": []
    },
    {
        "id": "6d903ddc.d73b94",
        "type": "debug",
        "z": "58b888b4.6c1618",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 200,
        "wires": []
    },
    {
        "id": "bafe4ff3.8ade4",
        "type": "function",
        "z": "58b888b4.6c1618",
        "name": "",
        "func": "var lastWeek = new Date();\nlastWeek.setDate(lastWeek.getDate() - 7);\nlastWeek = lastWeek;\n\nvar lastMonth = new Date();\nlastMonth.setDate(lastMonth.getDate() - 30);\nlastMonth = lastMonth;\n\nconst currentDate = new Date();\n\nmsg.payload  =  msg.payload.filter((item)=>{\n    if(item.STARTED_ON === null){\n        return true;\n    }\n    \n    const startedOn = new Date(item.STARTED_ON);\n    \n    if(item.FREQUENCY === 'D' && startedOn.toDateString() !== currentDate.toDateString() && startedOn.getHours() <= currentDate.getHours() && startedOn.getMinutes() <= currentDate.getMinutes()){\n        return true;\n    }else if (item.FREQUENCY === 'W' && startedOn.toDateString() === lastWeek.toDateString() && lastWeek.getHours() <= lastWeek.getHours() && startedOn.getMinutes() <= lastWeek.getMinutes()){\n        return true;\n    }else if (item.FREQUENCY === 'M' && startedOn.toDateString() === lastMonth.toDateString() && startedOn.getHours() <= lastMonth.getHours() && startedOn.getMinutes() <= lastMonth.getMinutes()){\n        return true;\n    }else{\n        return false;\n    }\n    \n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 160,
        "wires": [
            [
                "76fa59cf.0f7de8",
                "35acb0fb.cd5b4"
            ]
        ]
    },
    {
        "id": "35acb0fb.cd5b4",
        "type": "debug",
        "z": "58b888b4.6c1618",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 100,
        "wires": []
    },
    {
        "id": "3aef7f66978c286f",
        "type": "subflow:5717a347.80f76c",
        "z": "58b888b4.6c1618",
        "name": "",
        "x": 260,
        "y": 460,
        "wires": [
            [
                "b0af90f86487abb4"
            ]
        ]
    },
    {
        "id": "b0af90f86487abb4",
        "type": "debug",
        "z": "58b888b4.6c1618",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 460,
        "wires": []
    },
    {
        "id": "830e470247a341f7",
        "type": "subflow:7ee266ca63cceab4",
        "z": "58b888b4.6c1618",
        "name": "",
        "x": 240,
        "y": 500,
        "wires": [
            [
                "588c990ba64d78fe"
            ]
        ]
    },
    {
        "id": "a75140acf3770af0",
        "type": "sqlite",
        "z": "58b888b4.6c1618",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 640,
        "y": 500,
        "wires": [
            [
                "649d928cec6e6ea2"
            ]
        ]
    },
    {
        "id": "588c990ba64d78fe",
        "type": "function",
        "z": "58b888b4.6c1618",
        "name": "Host Info SQL",
        "func": "\nmsg.topic = `\nSELECT * FROM ENT_SERVERS;   \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 500,
        "wires": [
            [
                "a75140acf3770af0"
            ]
        ]
    },
    {
        "id": "649d928cec6e6ea2",
        "type": "function",
        "z": "58b888b4.6c1618",
        "name": "credentials_linux",
        "func": "msg.flowInfo.config.credentials_linux = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 500,
        "wires": [
            [
                "24f1e8e5.4aecb8"
            ]
        ]
    },
    {
        "id": "f9dcd32b.d33f9",
        "type": "link in",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "1895b955.ff0737"
        ],
        "x": 85,
        "y": 120,
        "wires": [
            [
                "5c65f28ff3ba0337"
            ]
        ]
    },
    {
        "id": "8f386d67.52245",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "Standard export WITH NO dependencies",
        "func": "const {BASE_SCHEMA, TARGET_SCHEMA, CONFIGURATION} = msg.item;\nvar d = new Date(),\n    dformat = [d.getFullYear(),\n               d.getMonth()+1,\n               d.getDate()].join('')+'_'+\n              [d.getHours(),\n               d.getMinutes(),\n               d.getSeconds()].join('');\n               \nconst path_for_export_import = msg.flowInfo.config[\"path-for-export-import\"];\nmsg.file_path = `${path_for_export_import}/${BASE_SCHEMA}/bck_${dformat}`;//yyyymmdd_hhssmm\n\n// msg.configOverride = {};\n// if(!msg.flowInfo){\n//     msg.flowInfo = {};\n// }\n\nmsg.configOverrideHana = msg.flowInfo.config['hana-db-connection'];\n\nmsg.flowInfo.sql = `export ${BASE_SCHEMA}.\"*\" as binary\ninto '${msg.file_path}'\n\nwith threads 4 no dependencies;`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 120,
        "wires": [
            [
                "54477b72.a7b8d4",
                "4d3ea61c5a4656b3"
            ]
        ]
    },
    {
        "id": "79e7ba22.a96194",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "Standard import/rename",
        "func": "const {BASE_SCHEMA, TARGET_SCHEMA, CONFIGURATION} = msg.item;\n\nmsg.flowInfo.sql = `import ${BASE_SCHEMA}.\"*\" as binary\nfrom '${msg.file_path}'\nwith threads 4 replace no dependencies\nrename schema ${BASE_SCHEMA} to ${TARGET_SCHEMA};`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 320,
        "wires": [
            [
                "1f6b7d32.cfd6a3",
                "56c7d1ed9130b9f3"
            ]
        ]
    },
    {
        "id": "94551b15.a358d8",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "a8ecb5ed.6ad148"
        ],
        "x": 1035,
        "y": 200,
        "wires": []
    },
    {
        "id": "c33d120b.82098",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "a8ecb5ed.6ad148"
        ],
        "x": 555,
        "y": 340,
        "wires": []
    },
    {
        "id": "3cfb5aa4.d588a6",
        "type": "sqlite",
        "z": "14adbe7e.88fa32",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 820,
        "y": 1320,
        "wires": [
            [
                "7676efc3e425d7c4"
            ]
        ]
    },
    {
        "id": "3f86ad81.41aed2",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "Log - Job  Successfull",
        "func": "const { JOB_ID } = msg.item;\nconst MSG = \"Job Successfully Completed\"\nmsg.configOverride={};\nmsg.topic = `\nUPDATE ENT_JOB_LOGS SET STATUS = 'S', MSG = '${MSG}', ENDED_ON = datetime('now', 'localtime') WHERE LOG_ID = '${msg.LOG_ID}';   \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1320,
        "wires": [
            [
                "3cfb5aa4.d588a6",
                "d5b4593d.5b4178"
            ]
        ]
    },
    {
        "id": "4e8f3ea8.dcffc",
        "type": "sqlite",
        "z": "14adbe7e.88fa32",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 720,
        "y": 1500,
        "wires": [
            [
                "bf6192ef.5a68a",
                "978254fcbccd1753"
            ]
        ]
    },
    {
        "id": "10ea7b71.9a6e55",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "Log - Job  Error",
        "func": "\nconst { JOB_ID } = msg.item;\nmsg.topic = `\nUPDATE ENT_JOB_LOGS SET STATUS = 'E', MSG = '${typeof(msg.error)==='object'? JSON.stringify(msg.error) : msg.error}', ENDED_ON = datetime('now', 'localtime') WHERE LOG_ID = '${msg.LOG_ID}';   \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1500,
        "wires": [
            [
                "4e8f3ea8.dcffc",
                "ce3b4409.f9cf68"
            ]
        ]
    },
    {
        "id": "a8ecb5ed.6ad148",
        "type": "link in",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "94551b15.a358d8",
            "c33d120b.82098",
            "a9bc894a.a1c9e8",
            "9e5dce19.806b8",
            "b4146f57a0ea4c82",
            "5d27ddde739ce629",
            "213a9a8846809236",
            "53bcf70ea6d9cffa",
            "f1f5c0ed15cea47f",
            "4b476265c23d19a6",
            "726fa795e6fdad30",
            "0367267241df2b47",
            "a6b74c870bbfaebb",
            "bca070ef9ee83e8c",
            "759a117e752feb6a",
            "95082cbb15af8493",
            "8c33fbf4bb55103b",
            "f84d5f38def61f77",
            "270ca5dd4bd3d0cd"
        ],
        "x": 115,
        "y": 1480,
        "wires": [
            [
                "fe0e5d030fc49bce"
            ]
        ]
    },
    {
        "id": "1244d415.94181c",
        "type": "debug",
        "z": "14adbe7e.88fa32",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 140,
        "wires": []
    },
    {
        "id": "73d339f5.005c38",
        "type": "debug",
        "z": "14adbe7e.88fa32",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 320,
        "wires": []
    },
    {
        "id": "a9bc894a.a1c9e8",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "a8ecb5ed.6ad148"
        ],
        "x": 715,
        "y": 1220,
        "wires": []
    },
    {
        "id": "bf6192ef.5a68a",
        "type": "debug",
        "z": "14adbe7e.88fa32",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 1540,
        "wires": []
    },
    {
        "id": "238923f.a1fcadc",
        "type": "comment",
        "z": "14adbe7e.88fa32",
        "name": "10. Export Schema",
        "info": "",
        "x": 110,
        "y": 60,
        "wires": []
    },
    {
        "id": "55b0ced3.86ee6",
        "type": "comment",
        "z": "14adbe7e.88fa32",
        "name": "20. Import WITH rename",
        "info": "",
        "x": 130,
        "y": 220,
        "wires": []
    },
    {
        "id": "1fe0b491.b1a69b",
        "type": "comment",
        "z": "14adbe7e.88fa32",
        "name": "999. Test Service Layer Login",
        "info": "",
        "x": 140,
        "y": 1060,
        "wires": []
    },
    {
        "id": "1612deb9.6ef0c1",
        "type": "comment",
        "z": "14adbe7e.88fa32",
        "name": "Write Error",
        "info": "",
        "x": 100,
        "y": 1440,
        "wires": []
    },
    {
        "id": "54477b72.a7b8d4",
        "type": "debug",
        "z": "14adbe7e.88fa32",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 80,
        "wires": []
    },
    {
        "id": "1f6b7d32.cfd6a3",
        "type": "debug",
        "z": "14adbe7e.88fa32",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 280,
        "wires": []
    },
    {
        "id": "d5b4593d.5b4178",
        "type": "debug",
        "z": "14adbe7e.88fa32",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 1360,
        "wires": []
    },
    {
        "id": "ce3b4409.f9cf68",
        "type": "debug",
        "z": "14adbe7e.88fa32",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1460,
        "wires": []
    },
    {
        "id": "2fbf985d.033f38",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "",
        "func": "if(msg.payload===null){\n    msg.error = \"Error: Standard Export With No Dependencies\"\n    return [null, msg];\n}else{\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 180,
        "wires": [
            [
                "1244d415.94181c",
                "11151c4a.ace614"
            ],
            [
                "94551b15.a358d8",
                "22a02939.4e4de6"
            ]
        ]
    },
    {
        "id": "22a02939.4e4de6",
        "type": "debug",
        "z": "14adbe7e.88fa32",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 200,
        "wires": []
    },
    {
        "id": "4cd47203.f6516c",
        "type": "catch",
        "z": "14adbe7e.88fa32",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 180,
        "y": 1580,
        "wires": [
            [
                "6a671a80.ea0f24",
                "10ea7b71.9a6e55"
            ]
        ]
    },
    {
        "id": "6a671a80.ea0f24",
        "type": "debug",
        "z": "14adbe7e.88fa32",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 1580,
        "wires": []
    },
    {
        "id": "2fda2e30.1cff22",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "",
        "func": "if(msg.payload===null){\n    msg.error = 'Error: Standard Import With Rename'\n    return [null, msg];\n}else{\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 300,
        "wires": [
            [
                "9fb2ab1c65404ce3"
            ],
            [
                "9e5dce19.806b8",
                "73d339f5.005c38"
            ]
        ]
    },
    {
        "id": "26eb2716.d10ec8",
        "type": "link in",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "b439c4e0.b4dfa8"
        ],
        "x": 65,
        "y": 960,
        "wires": [
            [
                "09d8c099bb9d71a7"
            ]
        ]
    },
    {
        "id": "b439c4e0.b4dfa8",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "26eb2716.d10ec8"
        ],
        "x": 925,
        "y": 820,
        "wires": []
    },
    {
        "id": "9e5dce19.806b8",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "a8ecb5ed.6ad148"
        ],
        "x": 715,
        "y": 320,
        "wires": []
    },
    {
        "id": "ab963504.38bf98",
        "type": "link in",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "11151c4a.ace614"
        ],
        "x": 65,
        "y": 320,
        "wires": [
            [
                "79e7ba22.a96194"
            ]
        ]
    },
    {
        "id": "11151c4a.ace614",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "ab963504.38bf98"
        ],
        "x": 1025,
        "y": 140,
        "wires": []
    },
    {
        "id": "dc96e009.c3edd",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "",
        "func": "msg.error = \"Service Layer Verification Failed!\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1200,
        "wires": [
            [
                "a9bc894a.a1c9e8"
            ]
        ]
    },
    {
        "id": "4d3ea61c5a4656b3",
        "type": "HanaClient-request",
        "z": "14adbe7e.88fa32",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 650,
        "y": 200,
        "wires": [
            [
                "2fbf985d.033f38"
            ],
            [
                "b4146f57a0ea4c82"
            ]
        ]
    },
    {
        "id": "c4c43085b649cb56",
        "type": "HanaClient-request",
        "z": "14adbe7e.88fa32",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 450,
        "y": 320,
        "wires": [
            [
                "2fda2e30.1cff22"
            ],
            [
                "c33d120b.82098"
            ]
        ]
    },
    {
        "id": "b4146f57a0ea4c82",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "a8ecb5ed.6ad148"
        ],
        "x": 815,
        "y": 220,
        "wires": []
    },
    {
        "id": "aeb79bd38b25c641",
        "type": "b1-service-layer-request",
        "z": "14adbe7e.88fa32",
        "server": "590928a27bca663b",
        "name": "SL Check",
        "serviceLayerMethod": "",
        "httpMethod": "GET",
        "slResponseObject": "",
        "x": 380,
        "y": 1180,
        "wires": [
            [
                "33eadede40900e74",
                "fced1a75bb32bbb9"
            ],
            [
                "dc96e009.c3edd"
            ]
        ]
    },
    {
        "id": "33eadede40900e74",
        "type": "debug",
        "z": "14adbe7e.88fa32",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 1140,
        "wires": []
    },
    {
        "id": "07528ccbf7379508",
        "type": "comment",
        "z": "14adbe7e.88fa32",
        "name": "Catch",
        "info": "",
        "x": 90,
        "y": 1540,
        "wires": []
    },
    {
        "id": "4b6d40e3d642b30e",
        "type": "HanaClient-request",
        "z": "14adbe7e.88fa32",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 970,
        "y": 280,
        "wires": [
            [
                "66036e74b603fd11"
            ],
            [
                "5d27ddde739ce629"
            ]
        ]
    },
    {
        "id": "9fb2ab1c65404ce3",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "UPDATE_OADM",
        "func": "\n// $$BASE_COMPANY_NAME$$ : Name of base Company\n// $$DATE_YYYYMMDD$$ :  Date in format 2022-04-06\n// $$DATE_DDMMYYYY$$ :  Date in format 06-04-2022\n\n// const DATE_YYYYMMDD = [d.getFullYear(),\n//           d.getMonth()<9?'0'+(d.getMonth()+1):d.getMonth()+1,\n//           d.getDate()].join('-');\n           \n// const DATE_DDMMYYYY = [d.getDate(),\n//           d.getMonth()<9?'0'+(d.getMonth()+1):d.getMonth()+1,\n//           d.getFullYear()].join('-');           \n\nconst {BASE_SCHEMA, TARGET_SCHEMA, CONFIGURATION} = msg.item;\nconst { TARGET_SCHEMA_NAME, BASE_SCHEMA_NAME} = JSON.parse(CONFIGURATION);\nif(!msg.flowInfo){\n    msg.flowInfo={};\n}\n\nmsg.flowInfo.sql = `\n\nUPDATE ${TARGET_SCHEMA}.OADM SET \"CompnyName\"=SUBSTR(REPLACE(REPLACE(REPLACE('${TARGET_SCHEMA_NAME}','$$BASE_COMP_NAME$$','${BASE_SCHEMA_NAME}'),\n'$$DATE_YYYYMMDD$$',TO_VARCHAR(CURRENT_DATE,'YYYY-MM-DD')),'$$DATE_DDMMYYYY$$',TO_VARCHAR(CURRENT_DATE,'DD-MM-YYYY')),1,100);\n\n--UPDATE ${TARGET_SCHEMA}.CINF SET \"CompnyName\"=SUBSTR(REPLACE(REPLACE(REPLACE('${TARGET_SCHEMA_NAME}','$$BASE_COMP_NAME$$','${BASE_SCHEMA_NAME}'),\n--'$$DATE_YYYYMMDD$$',TO_VARCHAR(CURRENT_DATE,'YYYY-MM-DD')),'$$DATE_DDMMYYYY$$',TO_VARCHAR(CURRENT_DATE,'DD-MM-YYYY')),1,100);\n\n--CALL \"SBOCOMMON\".\"TMSP_REFRESHCOMPLIST\"();\n\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 280,
        "wires": [
            [
                "4b6d40e3d642b30e"
            ]
        ]
    },
    {
        "id": "5d27ddde739ce629",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "a8ecb5ed.6ad148"
        ],
        "x": 1095,
        "y": 300,
        "wires": []
    },
    {
        "id": "66036e74b603fd11",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "res/err",
        "func": "if(msg.payload===null){\n    msg.error = 'Error: New Company Name'\n    return [null, msg];\n}else{\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 260,
        "wires": [
            [
                "33b5d61b18d264d2"
            ],
            [
                "213a9a8846809236"
            ]
        ]
    },
    {
        "id": "213a9a8846809236",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "a8ecb5ed.6ad148"
        ],
        "x": 1245,
        "y": 280,
        "wires": []
    },
    {
        "id": "51a64a81f41eb557",
        "type": "HanaClient-request",
        "z": "14adbe7e.88fa32",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 370,
        "y": 480,
        "wires": [
            [
                "05b6ca4b4806e9a6"
            ],
            [
                "53bcf70ea6d9cffa"
            ]
        ]
    },
    {
        "id": "70f8becc8429d4e0",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "UPDATE _CINF",
        "func": "\n// $$BASE_COMPANY_NAME$$ : Name of base Company\n// $$DATE_YYYYMMDD$$ :  Date in format 2022-04-06\n// $$DATE_DDMMYYYY$$ :  Date in format 06-04-2022\n\n// const DATE_YYYYMMDD = [d.getFullYear(),\n//           d.getMonth()<9?'0'+(d.getMonth()+1):d.getMonth()+1,\n//           d.getDate()].join('-');\n           \n// const DATE_DDMMYYYY = [d.getDate(),\n//           d.getMonth()<9?'0'+(d.getMonth()+1):d.getMonth()+1,\n//           d.getFullYear()].join('-');           \n\nconst {BASE_SCHEMA, TARGET_SCHEMA, CONFIGURATION} = msg.item;\nconst { TARGET_SCHEMA_NAME, BASE_SCHEMA_NAME} = JSON.parse(CONFIGURATION);\nif(!msg.flowInfo){\n    msg.flowInfo={};\n}\n\nmsg.flowInfo.sql = `\n\n--UPDATE ${TARGET_SCHEMA}.OADM SET \"CompnyName\"=SUBSTR(REPLACE(REPLACE(REPLACE('${TARGET_SCHEMA_NAME}','$$BASE_COMP_NAME$$','${BASE_SCHEMA_NAME}'),\n--'$$DATE_YYYYMMDD$$',TO_VARCHAR(CURRENT_DATE,'YYYY-MM-DD')),'$$DATE_DDMMYYYY$$',TO_VARCHAR(CURRENT_DATE,'DD-MM-YYYY')),1,100);\n\nUPDATE ${TARGET_SCHEMA}.CINF SET \"CompnyName\"=SUBSTR(REPLACE(REPLACE(REPLACE('${TARGET_SCHEMA_NAME}','$$BASE_COMP_NAME$$','${BASE_SCHEMA_NAME}'),\n'$$DATE_YYYYMMDD$$',TO_VARCHAR(CURRENT_DATE,'YYYY-MM-DD')),'$$DATE_DDMMYYYY$$',TO_VARCHAR(CURRENT_DATE,'DD-MM-YYYY')),1,100);\n\n--CALL \"SBOCOMMON\".\"TMSP_REFRESHCOMPLIST\"();\n\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 480,
        "wires": [
            [
                "51a64a81f41eb557"
            ]
        ]
    },
    {
        "id": "53bcf70ea6d9cffa",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "a8ecb5ed.6ad148"
        ],
        "x": 475,
        "y": 500,
        "wires": []
    },
    {
        "id": "05b6ca4b4806e9a6",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "res/err",
        "func": "if(msg.payload===null){\n    msg.error = 'Error: New Company Name'\n    return [null, msg];\n}else{\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 460,
        "wires": [
            [
                "6a71330f1246f9a0"
            ],
            [
                "f1f5c0ed15cea47f"
            ]
        ]
    },
    {
        "id": "f1f5c0ed15cea47f",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "a8ecb5ed.6ad148"
        ],
        "x": 615,
        "y": 480,
        "wires": []
    },
    {
        "id": "652d307f3b76e40e",
        "type": "HanaClient-request",
        "z": "14adbe7e.88fa32",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 890,
        "y": 440,
        "wires": [
            [
                "f2d7b3572ae243a9"
            ],
            [
                "4b476265c23d19a6"
            ]
        ]
    },
    {
        "id": "6a71330f1246f9a0",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "REFRESHCOMPLIST",
        "func": "\n// $$BASE_COMPANY_NAME$$ : Name of base Company\n// $$DATE_YYYYMMDD$$ :  Date in format 2022-04-06\n// $$DATE_DDMMYYYY$$ :  Date in format 06-04-2022\n\n// const DATE_YYYYMMDD = [d.getFullYear(),\n//           d.getMonth()<9?'0'+(d.getMonth()+1):d.getMonth()+1,\n//           d.getDate()].join('-');\n           \n// const DATE_DDMMYYYY = [d.getDate(),\n//           d.getMonth()<9?'0'+(d.getMonth()+1):d.getMonth()+1,\n//           d.getFullYear()].join('-');           \n\nconst {BASE_SCHEMA, TARGET_SCHEMA, CONFIGURATION} = msg.item;\nconst { TARGET_SCHEMA_NAME, BASE_SCHEMA_NAME} = JSON.parse(CONFIGURATION);\nif(!msg.flowInfo){\n    msg.flowInfo={};\n}\n\nmsg.flowInfo.sql = `\n\n--UPDATE ${TARGET_SCHEMA}.OADM SET \"CompnyName\"=SUBSTR(REPLACE(REPLACE(REPLACE('${TARGET_SCHEMA_NAME}','$$BASE_COMP_NAME$$','${BASE_SCHEMA_NAME}'),\n--'$$DATE_YYYYMMDD$$',TO_VARCHAR(CURRENT_DATE,'YYYY-MM-DD')),'$$DATE_DDMMYYYY$$',TO_VARCHAR(CURRENT_DATE,'DD-MM-YYYY')),1,100);\n\n--UPDATE ${TARGET_SCHEMA}.CINF SET \"CompnyName\"=SUBSTR(REPLACE(REPLACE(REPLACE('${TARGET_SCHEMA_NAME}','$$BASE_COMP_NAME$$','${BASE_SCHEMA_NAME}'),\n--'$$DATE_YYYYMMDD$$',TO_VARCHAR(CURRENT_DATE,'YYYY-MM-DD')),'$$DATE_DDMMYYYY$$',TO_VARCHAR(CURRENT_DATE,'DD-MM-YYYY')),1,100);\n\nCALL \"SBOCOMMON\".\"TMSP_REFRESHCOMPLIST\"();\n\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 440,
        "wires": [
            [
                "652d307f3b76e40e"
            ]
        ]
    },
    {
        "id": "4b476265c23d19a6",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "a8ecb5ed.6ad148"
        ],
        "x": 1005,
        "y": 460,
        "wires": []
    },
    {
        "id": "283d6c15971ff52d",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "res/err",
        "func": "if(msg.payload===null){\n    msg.error = 'Error: New Company Name'\n    return [null, msg];\n}else{\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 680,
        "wires": [
            [
                "ac28c470d161ecb4"
            ],
            [
                "726fa795e6fdad30"
            ]
        ]
    },
    {
        "id": "726fa795e6fdad30",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "a8ecb5ed.6ad148"
        ],
        "x": 355,
        "y": 700,
        "wires": []
    },
    {
        "id": "bfe4aa9ec0a7273b",
        "type": "HanaClient-request",
        "z": "14adbe7e.88fa32",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 590,
        "y": 660,
        "wires": [
            [
                "217b0c8569146c87"
            ],
            [
                "0367267241df2b47"
            ]
        ]
    },
    {
        "id": "67d3d247d9363886",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "UPDATE_OADP",
        "func": "          \nconst {BASE_SCHEMA, TARGET_SCHEMA, CONFIGURATION} = msg.item;\nconst {WordPath, BitmapPath, AttachPath, ExtPath} = JSON.parse(CONFIGURATION);\nif(!msg.flowInfo){\n    msg.flowInfo={};\n}\n\nmsg.flowInfo.sql = `\n\nUPDATE ${TARGET_SCHEMA}.OADP SET\n\"WordPath\" = '${WordPath}', --include this line ONLY if user chooses to customize it\n\"BitmapPath\" = '${BitmapPath}', --include this line ONLY if user chooses to customize it\n\"AttachPath\" = '${AttachPath}', --include this line ONLY if user chooses to customize it\n\"ExtPath\" = '${ExtPath}' ; --include this line ONLY if user chooses to customize it\n\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 660,
        "wires": [
            [
                "bfe4aa9ec0a7273b"
            ]
        ]
    },
    {
        "id": "0367267241df2b47",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "a8ecb5ed.6ad148"
        ],
        "x": 695,
        "y": 680,
        "wires": []
    },
    {
        "id": "217b0c8569146c87",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "res/err",
        "func": "if(msg.payload===null){\n    msg.error = 'Error: New Company Name'\n    return [null, msg];\n}else{\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 640,
        "wires": [
            [
                "232f9f04cb0ecbb6"
            ],
            [
                "bca070ef9ee83e8c"
            ]
        ]
    },
    {
        "id": "232f9f04cb0ecbb6",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "mode": "link",
        "links": [
            "91324d47e65e6650"
        ],
        "x": 825,
        "y": 620,
        "wires": []
    },
    {
        "id": "b37c1559dd50b9cd",
        "type": "HanaClient-request",
        "z": "14adbe7e.88fa32",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 370,
        "y": 780,
        "wires": [
            [
                "47a2161fb9c335d6"
            ],
            [
                "a6b74c870bbfaebb"
            ]
        ]
    },
    {
        "id": "4d17f85514b16516",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "UPDATE_OADM",
        "func": "          \nconst {BASE_SCHEMA, TARGET_SCHEMA, CONFIGURATION} = msg.item;\nconst {ExcelPath, XmlPath} = JSON.parse(CONFIGURATION);\nif(!msg.flowInfo){\n    msg.flowInfo={};\n}\n\nmsg.flowInfo.sql = `\n\nUPDATE ${TARGET_SCHEMA}.OADM SET\n\"ExcelPath\" = '${ExcelPath}', --include this line ONLY if user chooses to customize it\n\"XmlPath\" = '${XmlPath}' ;  --include this line ONLY if user chooses to customize it\n\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 780,
        "wires": [
            [
                "b37c1559dd50b9cd"
            ]
        ]
    },
    {
        "id": "a6b74c870bbfaebb",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "a8ecb5ed.6ad148"
        ],
        "x": 475,
        "y": 800,
        "wires": []
    },
    {
        "id": "47a2161fb9c335d6",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "res/err",
        "func": "if(msg.payload===null){\n    msg.error = 'Error: New Company Name'\n    return [null, msg];\n}else{\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 760,
        "wires": [
            [
                "bc1cb2adf1a68cfb"
            ],
            [
                "759a117e752feb6a"
            ]
        ]
    },
    {
        "id": "91324d47e65e6650",
        "type": "link in",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "232f9f04cb0ecbb6"
        ],
        "x": 75,
        "y": 780,
        "wires": [
            [
                "4d17f85514b16516"
            ]
        ]
    },
    {
        "id": "bca070ef9ee83e8c",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "a8ecb5ed.6ad148"
        ],
        "x": 825,
        "y": 660,
        "wires": []
    },
    {
        "id": "759a117e752feb6a",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "a8ecb5ed.6ad148"
        ],
        "x": 625,
        "y": 780,
        "wires": []
    },
    {
        "id": "f2d7b3572ae243a9",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "mode": "link",
        "links": [
            "01c3078e8321fac4"
        ],
        "x": 1005,
        "y": 420,
        "wires": []
    },
    {
        "id": "01c3078e8321fac4",
        "type": "link in",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "f2d7b3572ae243a9"
        ],
        "x": 85,
        "y": 680,
        "wires": [
            [
                "283d6c15971ff52d"
            ]
        ]
    },
    {
        "id": "3084fabe6b4a1e1c",
        "type": "link in",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "e15c485d03dc8604",
            "33b5d61b18d264d2"
        ],
        "x": 85,
        "y": 480,
        "wires": [
            [
                "70f8becc8429d4e0"
            ]
        ]
    },
    {
        "id": "33b5d61b18d264d2",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "mode": "link",
        "links": [
            "3084fabe6b4a1e1c"
        ],
        "x": 1245,
        "y": 240,
        "wires": []
    },
    {
        "id": "9196affcb199de17",
        "type": "comment",
        "z": "14adbe7e.88fa32",
        "name": "40. Remap Company Path configuration (Word, Excel, Attachments, ...)",
        "info": "",
        "x": 270,
        "y": 540,
        "wires": []
    },
    {
        "id": "d24483c00bd953a8",
        "type": "comment",
        "z": "14adbe7e.88fa32",
        "name": "50. Remap Attachment Paths on existing files",
        "info": "",
        "x": 190,
        "y": 900,
        "wires": []
    },
    {
        "id": "b68d46b21ed4fba4",
        "type": "HanaClient-request",
        "z": "14adbe7e.88fa32",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 730,
        "y": 940,
        "wires": [
            [
                "47cddeb0afc0ef8f"
            ],
            [
                "95082cbb15af8493"
            ]
        ]
    },
    {
        "id": "e122f7f7ea01a39e",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "UPDATE_ATC1",
        "func": "          \nconst {BASE_SCHEMA, TARGET_SCHEMA, CONFIGURATION} = msg.item;\nconst {AttachPath} = JSON.parse(CONFIGURATION);\nconst baseAttachPath = msg.payload[0].AttachPath;\n\nif(!msg.flowInfo){\n    msg.flowInfo={};\n}\n\nmsg.flowInfo.sql = `\n\nUPDATE ${TARGET_SCHEMA}.ATC1 \nSET \"trgtPath\"=REPLACE(\"trgtPath\",'${baseAttachPath.substr(0,baseAttachPath.length-1)}','${AttachPath.substr(0,AttachPath.length-1)}')\n\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 920,
        "wires": [
            [
                "b68d46b21ed4fba4"
            ]
        ]
    },
    {
        "id": "95082cbb15af8493",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "a8ecb5ed.6ad148"
        ],
        "x": 835,
        "y": 960,
        "wires": []
    },
    {
        "id": "47cddeb0afc0ef8f",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "res/err",
        "func": "if(msg.payload===null){\n    msg.error = 'Error: Rename Attachment Folder Path'\n    return [null, msg];\n}else{\n    return [msg, null];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 920,
        "wires": [
            [
                "de3d51f8c36761a3"
            ],
            [
                "f84d5f38def61f77"
            ]
        ]
    },
    {
        "id": "09d8c099bb9d71a7",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "Get_AttachPath",
        "func": "const {BASE_SCHEMA, TARGET_SCHEMA, CONFIGURATION} = msg.item;\n\nif(!msg.flowInfo){\n    msg.flowInfo = {};\n}\nmsg.flowInfo.sql = `\nSELECT TOP 1\nOADP.\"WordPath\",\nOADM.\"ExcelPath\",\nOADP.\"BitmapPath\",\nOADP.\"AttachPath\",\nOADP.\"ExtPath\",\nOADM.\"XmlPath\"\nFROM ${BASE_SCHEMA}.OADP JOIN ${BASE_SCHEMA}.OADM ON 1=1\n`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 960,
        "wires": [
            [
                "baee2a0dc3e7dfd6",
                "f2e6486222c8df4e"
            ]
        ]
    },
    {
        "id": "f2e6486222c8df4e",
        "type": "HanaClient-request",
        "z": "14adbe7e.88fa32",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 370,
        "y": 960,
        "wires": [
            [
                "e122f7f7ea01a39e"
            ],
            [
                "8c33fbf4bb55103b"
            ]
        ]
    },
    {
        "id": "baee2a0dc3e7dfd6",
        "type": "debug",
        "z": "14adbe7e.88fa32",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 1000,
        "wires": []
    },
    {
        "id": "8c33fbf4bb55103b",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "a8ecb5ed.6ad148"
        ],
        "x": 495,
        "y": 980,
        "wires": []
    },
    {
        "id": "f84d5f38def61f77",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "a8ecb5ed.6ad148"
        ],
        "x": 975,
        "y": 940,
        "wires": []
    },
    {
        "id": "4774e3b0c6b16ae2",
        "type": "link in",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "de3d51f8c36761a3",
            "9e7504b5ea3986fc"
        ],
        "x": 65,
        "y": 1120,
        "wires": [
            [
                "1ef330454de945bf"
            ]
        ]
    },
    {
        "id": "de3d51f8c36761a3",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "mode": "link",
        "links": [
            "4774e3b0c6b16ae2"
        ],
        "x": 975,
        "y": 900,
        "wires": []
    },
    {
        "id": "59ab7512982a8b22",
        "type": "sqlite",
        "z": "14adbe7e.88fa32",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 400,
        "y": 360,
        "wires": [
            [
                "c4c43085b649cb56"
            ]
        ]
    },
    {
        "id": "56c7d1ed9130b9f3",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "update Log",
        "func": "const { JOB_ID } = msg.item;\nconst MSG = \"Current task: 20. Import Schema with rename\"\nmsg.topic = `\nUPDATE ENT_JOB_LOGS SET STATUS = 'I', MSG = '${MSG}', ENDED_ON = datetime('now', 'localtime') WHERE LOG_ID = '${msg.LOG_ID}' AND JOB_ID = '${JOB_ID}';   \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 360,
        "wires": [
            [
                "59ab7512982a8b22"
            ]
        ]
    },
    {
        "id": "a129e5c47d95453e",
        "type": "sqlite",
        "z": "14adbe7e.88fa32",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 400,
        "y": 600,
        "wires": [
            [
                "67d3d247d9363886"
            ]
        ]
    },
    {
        "id": "ac28c470d161ecb4",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "update Log",
        "func": "const { JOB_ID } = msg.item;\nconst MSG = \"Current task: 40. Remap Company Path configuration (Word, Excel, Attachments, ...)\"\nmsg.topic = `\nUPDATE ENT_JOB_LOGS SET STATUS = 'I', MSG = '${MSG}', ENDED_ON = datetime('now', 'localtime') WHERE LOG_ID = '${msg.LOG_ID}' AND JOB_ID = '${JOB_ID}';   \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 620,
        "wires": [
            [
                "a129e5c47d95453e"
            ]
        ]
    },
    {
        "id": "e4666ce8839e1a4d",
        "type": "sqlite",
        "z": "14adbe7e.88fa32",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 860,
        "y": 740,
        "wires": [
            [
                "06c6363eed0d53ca"
            ]
        ]
    },
    {
        "id": "bc1cb2adf1a68cfb",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "update Log",
        "func": "const { JOB_ID } = msg.item;\nconst MSG = \"Current task: 50. Remap Attachment Paths on existing files\"\nmsg.topic = `\nUPDATE ENT_JOB_LOGS SET STATUS = 'I', MSG = '${MSG}', ENDED_ON = datetime('now', 'localtime') WHERE LOG_ID = '${msg.LOG_ID}' AND JOB_ID = '${JOB_ID}';   \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 740,
        "wires": [
            [
                "e4666ce8839e1a4d"
            ]
        ]
    },
    {
        "id": "84ccc2ad051ea60b",
        "type": "sqlite",
        "z": "14adbe7e.88fa32",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 360,
        "y": 1120,
        "wires": [
            [
                "e83c425860166354"
            ]
        ]
    },
    {
        "id": "1ef330454de945bf",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "update Log",
        "func": "const { JOB_ID } = msg.item;\nconst MSG = \"Current task: 60. Test Service Layer Login\"\nmsg.topic = `\nUPDATE ENT_JOB_LOGS SET STATUS = 'I', MSG = '${MSG}', ENDED_ON = datetime('now', 'localtime') WHERE LOG_ID = '${msg.LOG_ID}' AND JOB_ID = '${JOB_ID}';   \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 1120,
        "wires": [
            [
                "84ccc2ad051ea60b"
            ]
        ]
    },
    {
        "id": "978254fcbccd1753",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "mode": "link",
        "links": [
            "5ed9e293e5edcb51"
        ],
        "x": 885,
        "y": 1500,
        "wires": []
    },
    {
        "id": "b3e82280580115fb",
        "type": "comment",
        "z": "14adbe7e.88fa32",
        "name": "30. UPDATE Company Info (CINF)",
        "info": "",
        "x": 160,
        "y": 420,
        "wires": []
    },
    {
        "id": "06c6363eed0d53ca",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "",
        "func": "\nconst {CONFIGURATION} = msg.item;\n\nconst {Attach_Path_Remap_Existing_Documents} = JSON.parse(CONFIGURATION);\n\nif(Attach_Path_Remap_Existing_Documents && Attach_Path_Remap_Existing_Documents==='Y'){\n    return [msg, null];\n}else{\n    return [null, msg];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 840,
        "wires": [
            [
                "b439c4e0.b4dfa8"
            ],
            [
                "9e7504b5ea3986fc"
            ]
        ]
    },
    {
        "id": "9e7504b5ea3986fc",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "mode": "link",
        "links": [
            "4774e3b0c6b16ae2"
        ],
        "x": 925,
        "y": 860,
        "wires": []
    },
    {
        "id": "374f3295e0993cce",
        "type": "debug",
        "z": "14adbe7e.88fa32",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 80,
        "wires": []
    },
    {
        "id": "5c65f28ff3ba0337",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "prep ssh",
        "func": "\nconst {server} =  msg.flowInfo.config['hana-db-connection'];\nconst {credentials_linux} = msg.flowInfo.config;\nconst {BASE_SCHEMA, CONFIGURATION} = msg.item;\n\n\ncredentials_linux.forEach(item=>{\n    if(item.HOSTNAME===server){\n        msg.linux_credentials = {\n\t\t\t\"hostname\": item.HOSTNAME,\n\t\t\t\"port\": item.PORT,\n\t\t\t\"username\": item.USERNAME , \n\t\t\t\"password\" : item.PASSWORD\n\t    };\n    }\n});\nconst path_for_export_import = msg.flowInfo.config[\"path-for-export-import\"];\nmsg.payload = `mkdir -p -m 777 \"${path_for_export_import}/${BASE_SCHEMA}\"`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 120,
        "wires": [
            [
                "b3655344b69d24ee"
            ]
        ]
    },
    {
        "id": "b3655344b69d24ee",
        "type": "ssh-v3",
        "z": "14adbe7e.88fa32",
        "name": "",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "374f3295e0993cce",
                "8f386d67.52245"
            ]
        ]
    },
    {
        "id": "e83c425860166354",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "SL Prep",
        "func": "const {UserName, Password} = JSON.parse(msg.item.CONFIGURATION)\nconst b1_sl_config = msg.flowInfo.config[\"b1-sl-config\"];\n\nmsg.configOverride = {\n    database: msg.item.TARGET_SCHEMA,\n    userName: UserName,\n    password: Password,\n    serviceLayerUrl: b1_sl_config.serviceLayerUrl\n    };\n    \nmsg.serviceLayer = {\n    method:'BusinessPartners?$top=1'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 1180,
        "wires": [
            [
                "aeb79bd38b25c641"
            ]
        ]
    },
    {
        "id": "fe0e5d030fc49bce",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "prep ssh",
        "func": "\n// const {server} =  msg.flowInfo.config['hana-db-connection'];\n// const {credentials_linux} = msg.flowInfo.config;\n// const {BASE_SCHEMA, CONFIGURATION} = msg.item;\n\n\n// credentials_linux.forEach(item=>{\n//     if(item.HOSTNAME===server){\n//         msg.linux_credentials = item;\n//     }\n// });\n\nconst path_for_export_import = msg.flowInfo.config[\"path-for-export-import\"];\n\nif(path_for_export_import && path_for_export_import.length>10){\n    msg.payload = `find \"${path_for_export_import}\"/* -maxdepth 1 -type d -mtime +0 -exec rm -rf {} \\;`;\n    return [msg, null]\n}\n\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1480,
        "wires": [
            [
                "b560f00f561b9f4a"
            ],
            [
                "68e57ab94396f0dd"
            ]
        ]
    },
    {
        "id": "b560f00f561b9f4a",
        "type": "ssh-v3",
        "z": "14adbe7e.88fa32",
        "name": "",
        "x": 400,
        "y": 1440,
        "wires": [
            [
                "10ea7b71.9a6e55"
            ]
        ]
    },
    {
        "id": "68e57ab94396f0dd",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "mode": "link",
        "links": [
            "5ed9e293e5edcb51"
        ],
        "x": 365,
        "y": 1500,
        "wires": []
    },
    {
        "id": "9360773d50bba97d",
        "type": "debug",
        "z": "14adbe7e.88fa32",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 1240,
        "wires": []
    },
    {
        "id": "9d70b1e897cbd54a",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "mode": "link",
        "links": [
            "5ed9e293e5edcb51"
        ],
        "x": 1265,
        "y": 1300,
        "wires": []
    },
    {
        "id": "7676efc3e425d7c4",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "prep ssh",
        "func": "\n// const {server} =  msg.flowInfo.config['hana-db-connection'];\n// const {credentials_linux} = msg.flowInfo.config;\n// const {BASE_SCHEMA, CONFIGURATION} = msg.item;\n\n\n// credentials_linux.forEach(item=>{\n//     if(item.hostname===server){\n//         msg.linux_credentials = item;\n//     }\n// });\n\nconst path_for_export_import = msg.flowInfo.config[\"path-for-export-import\"];\n\nif(path_for_export_import && path_for_export_import.length>10){\n    msg.payload = `find \"${path_for_export_import}\"/* -maxdepth 1 -type d -mtime +0 -exec rm -rf {} \\;`;\n    return [msg, null]\n}\n\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1320,
        "wires": [
            [
                "190d65edb7cb3ee2",
                "9360773d50bba97d"
            ],
            [
                "47c78d683f85d7f3"
            ]
        ]
    },
    {
        "id": "190d65edb7cb3ee2",
        "type": "ssh-v3",
        "z": "14adbe7e.88fa32",
        "name": "",
        "x": 1170,
        "y": 1300,
        "wires": [
            [
                "9d70b1e897cbd54a"
            ]
        ]
    },
    {
        "id": "47c78d683f85d7f3",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "mode": "link",
        "links": [
            "5ed9e293e5edcb51"
        ],
        "x": 1135,
        "y": 1340,
        "wires": []
    },
    {
        "id": "0d38936a81c6b555",
        "type": "HanaClient-request",
        "z": "14adbe7e.88fa32",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 550,
        "y": 1280,
        "wires": [
            [
                "4f8243af72e181cd"
            ],
            [
                "21933813dfff062d"
            ]
        ]
    },
    {
        "id": "4f8243af72e181cd",
        "type": "subflow:5ddb2001.76d37",
        "z": "14adbe7e.88fa32",
        "name": "",
        "env": [
            {
                "name": "inputVarName",
                "value": "customSQLQueries",
                "type": "str"
            },
            {
                "name": "currentObjectName",
                "value": "customSQL",
                "type": "str"
            }
        ],
        "x": 170,
        "y": 1300,
        "wires": [
            [
                "2bc9d59710ec43bd"
            ],
            [
                "c8a2487f22128433"
            ]
        ]
    },
    {
        "id": "bdd9e385369ad3e1",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "Custom_SQL_Queries",
        "func": "          \nconst {BASE_SCHEMA, TARGET_SCHEMA, CONFIGURATION} = msg.item;\n\nconst {Custom_SQL_Queries} = JSON.parse(CONFIGURATION);\n\nmsg.customSQLQueries = Custom_SQL_Queries;\nmsg.customSQLError=[];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1140,
        "wires": [
            [
                "4f8243af72e181cd"
            ]
        ]
    },
    {
        "id": "2bc9d59710ec43bd",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "Exc: SQL",
        "func": "\nif(!msg.flowInfo){\n    msg.flowInfo={};\n}\n\nmsg.flowInfo.sql = msg.customSQL.Query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1280,
        "wires": [
            [
                "0d38936a81c6b555"
            ]
        ]
    },
    {
        "id": "21933813dfff062d",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "sqlError",
        "func": "\nmsg.customSQLError.push({\n    \"Query Name\": msg.customSQL.Name,\n    \"Error\": msg.error\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1280,
        "wires": [
            [
                "4f8243af72e181cd"
            ]
        ]
    },
    {
        "id": "f65a7f0ed8abfe92",
        "type": "sqlite",
        "z": "14adbe7e.88fa32",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 740,
        "y": 1140,
        "wires": [
            [
                "bdd9e385369ad3e1"
            ]
        ]
    },
    {
        "id": "fced1a75bb32bbb9",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "update Log",
        "func": "const { JOB_ID } = msg.item;\nconst MSG = \"Current task: 999. Executing Custom Quries\";\nmsg.topic = `\nUPDATE ENT_JOB_LOGS SET STATUS = 'I', MSG = '${MSG}', ENDED_ON = datetime('now', 'localtime') WHERE LOG_ID = '${msg.LOG_ID}' AND JOB_ID = '${JOB_ID}';   \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1140,
        "wires": [
            [
                "f65a7f0ed8abfe92"
            ]
        ]
    },
    {
        "id": "c8a2487f22128433",
        "type": "function",
        "z": "14adbe7e.88fa32",
        "name": "Res: SQL",
        "func": "if(!msg.customSQLError.length){\n    return [msg, null];\n}else{\n    msg.error = 'Job Successfully Completed,\\n' + 'Custom Queries Error: '+JSON.stringify(msg.customSQLError);\n    return [null, msg];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1340,
        "wires": [
            [
                "3f86ad81.41aed2"
            ],
            [
                "270ca5dd4bd3d0cd"
            ]
        ]
    },
    {
        "id": "270ca5dd4bd3d0cd",
        "type": "link out",
        "z": "14adbe7e.88fa32",
        "name": "",
        "links": [
            "a8ecb5ed.6ad148"
        ],
        "x": 495,
        "y": 1360,
        "wires": []
    },
    {
        "id": "d0d457e348c9b7a9",
        "type": "e-mail",
        "z": "3e2f123667197722",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 770,
        "y": 400,
        "wires": [
            [
                "6c6daa6f33f0600f"
            ],
            [
                "021f8d210c08e941"
            ]
        ]
    },
    {
        "id": "e772305f0ab42166",
        "type": "function",
        "z": "3e2f123667197722",
        "name": "prep_body",
        "func": "\nif(msg.payload[0].CONFIGURATION)\n    var temp = JSON.parse(msg.payload[0].CONFIGURATION)\n    if(temp.Password){\n        temp.Password=\"*****\";\n}\nmsg.payload[0].CONFIGURATION = JSON.stringify(temp);\n\nconst {STARTED_ON, ENDED_ON, STATUS, RUN_TYPE, MSG, CONFIGURATION} = msg.payload[0];\n\nmsg.templateBody = msg.templateBody.replace('$$STARTED_ON$$', STARTED_ON).replace('$$ENDED_ON$$', ENDED_ON?ENDED_ON:'-').replace('$$STATUS$$', STATUS==='I' ? 'In-Progress' : STATUS==='S' ? 'Success' : 'Error')\n.replace('$$RUN_TYPE$$', RUN_TYPE==='M'?'Manual':RUN_TYPE==='S'?'Scheduled':'Not Found').replace('$$MSG$$', MSG).replace('$$CONFIGURATION$$', CONFIGURATION);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 240,
        "wires": [
            [
                "6dba2a94801c0091"
            ]
        ]
    },
    {
        "id": "5ed9e293e5edcb51",
        "type": "link in",
        "z": "3e2f123667197722",
        "name": "",
        "links": [
            "1e4c2e702f2c944a",
            "978254fcbccd1753",
            "7606a1256efe28d1",
            "68e57ab94396f0dd",
            "9d70b1e897cbd54a",
            "47c78d683f85d7f3"
        ],
        "x": 225,
        "y": 120,
        "wires": [
            [
                "ccc4b03ba8715ede"
            ]
        ]
    },
    {
        "id": "3bfc367e0b06c2ec",
        "type": "sqlite",
        "z": "3e2f123667197722",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 660,
        "y": 120,
        "wires": [
            [
                "5d15e291d34e3d65"
            ]
        ]
    },
    {
        "id": "ccc4b03ba8715ede",
        "type": "function",
        "z": "3e2f123667197722",
        "name": "SQL_Get_Template",
        "func": "const {JOB_TYPE} = msg.item;\n// const JOB_TYPE = \"COPY_COMPANY\"\n\nmsg.topic = `SELECT * FROM  ENT_EMAIL_TEMPLATE WHERE CODE ='${JOB_TYPE}'`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 120,
        "wires": [
            [
                "3bfc367e0b06c2ec"
            ]
        ]
    },
    {
        "id": "25c3b8684d040f61",
        "type": "sqlite",
        "z": "3e2f123667197722",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 580,
        "y": 240,
        "wires": [
            [
                "136c2bf227465625",
                "e772305f0ab42166"
            ]
        ]
    },
    {
        "id": "5d15e291d34e3d65",
        "type": "function",
        "z": "3e2f123667197722",
        "name": "SQL_Get_ENT_JOB_LOGS",
        "func": "\nmsg.templateBody = msg.payload[0].TEXT_HTML;\n\n// msg.LOG_ID = '6580a497-640c-47e8-9c88-56422f2459be';\n\nmsg.topic = `SELECT * FROM  ENT_JOB_LOGS WHERE LOG_ID ='${msg.LOG_ID}'`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 240,
        "wires": [
            [
                "25c3b8684d040f61"
            ]
        ]
    },
    {
        "id": "136c2bf227465625",
        "type": "debug",
        "z": "3e2f123667197722",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 200,
        "wires": []
    },
    {
        "id": "295d8ea8.7cf3d2",
        "type": "function",
        "z": "3e2f123667197722",
        "name": "mail-content",
        "func": "const {userid, from, password, host, port, tls, secure, portal_url, to} = msg.flowInfo.config['mail-config'];\n\nmsg.userid = userid;\nmsg.password = password;\nmsg.from = from;\nmsg.host = host;\nmsg.port = port;\nmsg.tls = tls;\nmsg.secure = secure;\nmsg.to = to;\nmsg.topic = 'B1 System Management';//msg.req.body.emailTitle;\nmsg.payload = msg.templateBody;//msg.req.body.mailBody\n// msg.payload = (msg.payload).replace(\"$$LINK$$\", portal_url);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 380,
        "wires": [
            [
                "d0d457e348c9b7a9",
                "690f0cbd3225e2f7"
            ]
        ]
    },
    {
        "id": "690f0cbd3225e2f7",
        "type": "debug",
        "z": "3e2f123667197722",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 360,
        "wires": []
    },
    {
        "id": "1bc032aacca527f7",
        "type": "catch",
        "z": "3e2f123667197722",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 260,
        "y": 580,
        "wires": [
            [
                "6c743ac78edb3ecc"
            ]
        ]
    },
    {
        "id": "6c743ac78edb3ecc",
        "type": "debug",
        "z": "3e2f123667197722",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 580,
        "wires": []
    },
    {
        "id": "41b6b61e9075ed82",
        "type": "comment",
        "z": "3e2f123667197722",
        "name": "Catch Block",
        "info": "",
        "x": 170,
        "y": 500,
        "wires": []
    },
    {
        "id": "7e64b9461dcbcbd2",
        "type": "comment",
        "z": "3e2f123667197722",
        "name": "Send Email",
        "info": "",
        "x": 170,
        "y": 40,
        "wires": []
    },
    {
        "id": "6dba2a94801c0091",
        "type": "subflow:7ee266ca63cceab4",
        "z": "3e2f123667197722",
        "name": "",
        "x": 500,
        "y": 300,
        "wires": [
            [
                "295d8ea8.7cf3d2"
            ]
        ]
    },
    {
        "id": "6c6daa6f33f0600f",
        "type": "debug",
        "z": "3e2f123667197722",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 380,
        "wires": []
    },
    {
        "id": "021f8d210c08e941",
        "type": "debug",
        "z": "3e2f123667197722",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 420,
        "wires": []
    },
    {
        "id": "fe33562c678fe06f",
        "type": "debug",
        "z": "3e2f123667197722",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 580,
        "wires": []
    },
    {
        "id": "bdbd1fe121b09e75",
        "type": "function",
        "z": "20a520fa336da0fb",
        "name": "Query",
        "func": "const {BASE_SCHEMA}= msg.req.query;\n\nif(!msg.flowInfo)\n    msg.flowInfo={};\n    \nmsg.flowInfo.sql = `\nSELECT TOP 1\nOADP.\"WordPath\",\nOADM.\"ExcelPath\",\nOADP.\"BitmapPath\",\nOADP.\"AttachPath\",\nOADP.\"ExtPath\",\nOADM.\"XmlPath\"\nFROM ${BASE_SCHEMA}.OADP JOIN ${BASE_SCHEMA}.OADM ON 1=1\n`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 120,
        "wires": [
            [
                "cb010f770a1f699d",
                "6a55feca3d675ed0"
            ]
        ]
    },
    {
        "id": "a2a35256a62123a4",
        "type": "function",
        "z": "20a520fa336da0fb",
        "name": "res",
        "func": "msg.payload = msg.payload[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 80,
        "wires": [
            [
                "22a5340b53ed037e",
                "08eb9a8a70a2c775"
            ]
        ]
    },
    {
        "id": "6a55feca3d675ed0",
        "type": "HanaClient-request",
        "z": "20a520fa336da0fb",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 590,
        "y": 120,
        "wires": [
            [
                "a2a35256a62123a4"
            ],
            [
                "b07d801d77aa0d98"
            ]
        ]
    },
    {
        "id": "b07d801d77aa0d98",
        "type": "function",
        "z": "20a520fa336da0fb",
        "name": "err",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 160,
        "wires": [
            [
                "3f5a5c0bc55d8f7c",
                "1d971dd0dbd878ef"
            ]
        ]
    },
    {
        "id": "22a5340b53ed037e",
        "type": "debug",
        "z": "20a520fa336da0fb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 20,
        "wires": []
    },
    {
        "id": "3f5a5c0bc55d8f7c",
        "type": "debug",
        "z": "20a520fa336da0fb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 200,
        "wires": []
    },
    {
        "id": "08eb9a8a70a2c775",
        "type": "http response",
        "z": "20a520fa336da0fb",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 940,
        "y": 80,
        "wires": []
    },
    {
        "id": "1d971dd0dbd878ef",
        "type": "http response",
        "z": "20a520fa336da0fb",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 940,
        "y": 160,
        "wires": []
    },
    {
        "id": "315386d00a168e71",
        "type": "http in",
        "z": "20a520fa336da0fb",
        "name": "schemaBasePath",
        "url": "/api/schemaBasePath",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 120,
        "wires": [
            [
                "e49d16da61487389"
            ]
        ]
    },
    {
        "id": "cb010f770a1f699d",
        "type": "debug",
        "z": "20a520fa336da0fb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 80,
        "wires": []
    },
    {
        "id": "5522d8b0490c41af",
        "type": "function",
        "z": "20a520fa336da0fb",
        "name": "Query",
        "func": "const {TARGET_SCHEMA}= msg.req.query;\n\nif(!msg.flowInfo)\n    msg.flowInfo={};\n    \nmsg.flowInfo.sql = `\nSELECT TOP 1\nOADP.\"WordPath\",\nOADM.\"ExcelPath\",\nOADP.\"BitmapPath\",\nOADP.\"AttachPath\",\nOADP.\"ExtPath\",\nOADM.\"XmlPath\"\nFROM ${TARGET_SCHEMA}.OADP JOIN ${TARGET_SCHEMA}.OADM ON 1=1\n`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 340,
        "wires": [
            [
                "585afa1a9b08e953",
                "9eefb804d082cd4b"
            ]
        ]
    },
    {
        "id": "2b11ce5fac0dc4aa",
        "type": "function",
        "z": "20a520fa336da0fb",
        "name": "res",
        "func": "msg.payload = msg.payload[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 300,
        "wires": [
            [
                "fe3bf006e8b101f2",
                "0e05559f00665382"
            ]
        ]
    },
    {
        "id": "9eefb804d082cd4b",
        "type": "HanaClient-request",
        "z": "20a520fa336da0fb",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 610,
        "y": 340,
        "wires": [
            [
                "2b11ce5fac0dc4aa"
            ],
            [
                "699be11be1f43ebe"
            ]
        ]
    },
    {
        "id": "699be11be1f43ebe",
        "type": "function",
        "z": "20a520fa336da0fb",
        "name": "err",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 380,
        "wires": [
            [
                "6c30c4d138fb4d38",
                "dd81b551f44df74e"
            ]
        ]
    },
    {
        "id": "fe3bf006e8b101f2",
        "type": "debug",
        "z": "20a520fa336da0fb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 240,
        "wires": []
    },
    {
        "id": "6c30c4d138fb4d38",
        "type": "debug",
        "z": "20a520fa336da0fb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 420,
        "wires": []
    },
    {
        "id": "0e05559f00665382",
        "type": "http response",
        "z": "20a520fa336da0fb",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 960,
        "y": 300,
        "wires": []
    },
    {
        "id": "dd81b551f44df74e",
        "type": "http response",
        "z": "20a520fa336da0fb",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 960,
        "y": 380,
        "wires": []
    },
    {
        "id": "a150c69f6044ccbc",
        "type": "http in",
        "z": "20a520fa336da0fb",
        "name": "TargetSchemaPath",
        "url": "/api/targetSchemaPath",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 340,
        "wires": [
            [
                "5f2b3f1c4d05819c"
            ]
        ]
    },
    {
        "id": "585afa1a9b08e953",
        "type": "debug",
        "z": "20a520fa336da0fb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 300,
        "wires": []
    },
    {
        "id": "e49d16da61487389",
        "type": "subflow:7ee266ca63cceab4",
        "z": "20a520fa336da0fb",
        "name": "",
        "env": [
            {
                "name": "b1-sl-config",
                "type": "bool",
                "value": "false"
            }
        ],
        "x": 300,
        "y": 120,
        "wires": [
            [
                "bdbd1fe121b09e75"
            ]
        ]
    },
    {
        "id": "5f2b3f1c4d05819c",
        "type": "subflow:7ee266ca63cceab4",
        "z": "20a520fa336da0fb",
        "name": "",
        "env": [
            {
                "name": "b1-sl-config",
                "type": "bool",
                "value": "false"
            }
        ],
        "x": 300,
        "y": 340,
        "wires": [
            [
                "5522d8b0490c41af"
            ]
        ]
    },
    {
        "id": "5cc5fc01.9243c4",
        "type": "inject",
        "z": "cf45155e.4364b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 120,
        "wires": [
            [
                "ff051d01.dd621"
            ]
        ]
    },
    {
        "id": "232eed62.396ce2",
        "type": "sqlite",
        "z": "cf45155e.4364b8",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 500,
        "y": 120,
        "wires": [
            [
                "100b2611.2002fa",
                "e5d38695a63d23ef"
            ]
        ]
    },
    {
        "id": "ff051d01.dd621",
        "type": "function",
        "z": "cf45155e.4364b8",
        "name": "Join Job&Log",
        "func": "\n// msg.topic = `SELECT * FROM  ENT_JOBS J1 LEFT OUTER JOIN ENT_JOB_LOGS L1 ON J1.JOB_ID=L1.JOB_ID WHERE J1.SCHEDULED ='Y' \n// AND J1.STATUS = 'A' AND  strftime('%s','now') <= strftime('%s',J1.END_ON) AND  strftime('%s','now') >= strftime('%s',J1.START_ON) \n// --AND JOB_ID NOT IN (SELECT JOB_ID FROM ENT_JOB_LOGS WHERE date(STARTED_ON) = date('now') )`;\n\nmsg.topic = `SELECT *, strftime('%s',J1.END_ON),J1.JOB_ID, J1.STATUS, J1.CONFIGURATION FROM  ENT_JOBS J1 LEFT OUTER JOIN \n(SELECT * FROM ENT_JOB_LOGS WHERE (JOB_ID, STARTED_ON) IN ( SELECT JOB_ID , MAX(STARTED_ON) FROM ENT_JOB_LOGS WHERE RUN_TYPE = 'S' GROUP BY JOB_ID )) L1 \nON J1.JOB_ID=L1.JOB_ID WHERE J1.SCHEDULED ='Y' \nAND J1.STATUS = 'A' \nAND CAST(strftime('%s',datetime('now', 'localtime'))  AS  integer) <= CAST(strftime('%s',J1.END_ON) AS integer) \nAND CAST(strftime('%s',datetime('now', 'localtime')) AS integer) >= CAST(strftime('%s',J1.START_ON) AS integer)\n\n--AND JOB_ID NOT IN (SELECT JOB_ID FROM ENT_JOB_LOGS WHERE date(STARTED_ON) = date('now') )`;\n\n//LEFT OUTER JOIN ENT_JOB_LOGS L1 ON J1.JOB_ID=L1.JOB_ID\n//J1.END_ON > '${new Date()}' AND\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 120,
        "wires": [
            [
                "232eed62.396ce2"
            ]
        ]
    },
    {
        "id": "fb910090.6abc9",
        "type": "debug",
        "z": "cf45155e.4364b8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 120,
        "wires": []
    },
    {
        "id": "da6796a9.a4cde8",
        "type": "inject",
        "z": "cf45155e.4364b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 60,
        "y": 240,
        "wires": [
            [
                "686637bf.0b6ad8"
            ]
        ]
    },
    {
        "id": "686637bf.0b6ad8",
        "type": "function",
        "z": "cf45155e.4364b8",
        "name": "",
        "func": "msg.topic = `\nSELECT *, strftime('%s',datetime('now', 'localtime')), strftime('%s','now'), strftime('%s',START_ON),strftime('%s','now')> strftime('%s',START_ON), datetime('now', 'localtime')  FROM ENT_JOBS J2 WHERE JOB_NAME='NewJOB2'    \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 240,
        "wires": [
            [
                "523d189.270efe8"
            ]
        ]
    },
    {
        "id": "523d189.270efe8",
        "type": "sqlite",
        "z": "cf45155e.4364b8",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 420,
        "y": 240,
        "wires": [
            [
                "af603819.c6ff38"
            ]
        ]
    },
    {
        "id": "af603819.c6ff38",
        "type": "debug",
        "z": "cf45155e.4364b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 240,
        "wires": []
    },
    {
        "id": "100b2611.2002fa",
        "type": "function",
        "z": "cf45155e.4364b8",
        "name": "",
        "func": "var lastWeek = new Date();\nlastWeek.setDate(lastWeek.getDate() - 7);\nlastWeek = lastWeek.toDateString();\n\nvar lastMonth = new Date();\nlastMonth.setDate(lastMonth.getDate() - 30);\nlastMonth = lastMonth.toDateString();\n\nconst currentDate = new Date().toDateString();\n\nmsg.payload2  =  msg.payload.filter((item)=>{\n    if(item.STARTED_ON === null){\n        return true;\n    }\n    \n    const startedOn = new Date(item.STARTED_ON).toDateString();\n    \n    if(item.FREQUENCY === 'D' && startedOn !== currentDate){\n        return true;\n    }else if (item.FREQUENCY === 'W' && startedOn === lastWeek){\n        return true;\n    }else if (item.FREQUENCY === 'M' && startedOn === lastMonth){\n        return true;\n    }else{\n        return false;\n    }\n    \n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 120,
        "wires": [
            [
                "fb910090.6abc9"
            ]
        ]
    },
    {
        "id": "3bb28d4288088ade",
        "type": "inject",
        "z": "cf45155e.4364b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 60,
        "y": 280,
        "wires": [
            [
                "f625b645bcd5e9bd"
            ]
        ]
    },
    {
        "id": "f625b645bcd5e9bd",
        "type": "function",
        "z": "cf45155e.4364b8",
        "name": "",
        "func": "msg.topic = `\nSELECT * FROM ENT_JOB_LOGS WHERE (JOB_ID, STARTED_ON) IN ( SELECT JOB_ID , MAX(STARTED_ON) FROM ENT_JOB_LOGS GROUP BY JOB_ID )    \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 320,
        "wires": [
            [
                "e53ab86a957e28de"
            ]
        ]
    },
    {
        "id": "e53ab86a957e28de",
        "type": "sqlite",
        "z": "cf45155e.4364b8",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 400,
        "y": 320,
        "wires": [
            [
                "1c1851a12d374027"
            ]
        ]
    },
    {
        "id": "1c1851a12d374027",
        "type": "debug",
        "z": "cf45155e.4364b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 320,
        "wires": []
    },
    {
        "id": "d39ed8050cb988b1",
        "type": "file",
        "z": "cf45155e.4364b8",
        "name": "",
        "filename": "C:\\Users\\fiori2\\Desktop\\testFolder\\test\\",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 430,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "731b85c4ee9b5f8d",
        "type": "inject",
        "z": "cf45155e.4364b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 60,
        "wires": [
            [
                "d39ed8050cb988b1"
            ]
        ]
    },
    {
        "id": "e5d38695a63d23ef",
        "type": "debug",
        "z": "cf45155e.4364b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 60,
        "wires": []
    },
    {
        "id": "af2349436d8c54b2",
        "type": "function",
        "z": "cf45155e.4364b8",
        "name": "sql",
        "func": "msg.configOverride = {};\nif (!msg.flowInfo)\n    msg.flowInfo = {};\n//msg.flowInfo.sql = 'call SBOCOMMON.TMSP_GETCOMPLIST2';\nmsg.flowInfo.sql =`\nSELECT 1 from DUMMY;\n`;\n\n\n//  call SBOCOMMON.TMSP_GETCOMPLIST\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 380,
        "wires": [
            [
                "149c7dd226cacb76"
            ]
        ]
    },
    {
        "id": "b75cb922508f0e65",
        "type": "http response",
        "z": "cf45155e.4364b8",
        "name": "OK",
        "statusCode": "200",
        "headers": {},
        "x": 790,
        "y": 420,
        "wires": []
    },
    {
        "id": "fe1bc226e9c52702",
        "type": "http response",
        "z": "cf45155e.4364b8",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 360,
        "wires": []
    },
    {
        "id": "7763130c403b66d8",
        "type": "debug",
        "z": "cf45155e.4364b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 730,
        "y": 360,
        "wires": []
    },
    {
        "id": "64d5b2f7ea855a6f",
        "type": "debug",
        "z": "cf45155e.4364b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 730,
        "y": 420,
        "wires": []
    },
    {
        "id": "cfe1d50a867b74fe",
        "type": "inject",
        "z": "cf45155e.4364b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 380,
        "wires": [
            [
                "af2349436d8c54b2"
            ]
        ]
    },
    {
        "id": "149c7dd226cacb76",
        "type": "HanaClient-request",
        "z": "cf45155e.4364b8",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 510,
        "y": 400,
        "wires": [
            [
                "b75cb922508f0e65",
                "7763130c403b66d8"
            ],
            [
                "fe1bc226e9c52702",
                "64d5b2f7ea855a6f"
            ]
        ]
    },
    {
        "id": "b306b59ccfa95f63",
        "type": "function",
        "z": "cf45155e.4364b8",
        "name": "",
        "func": "\nconst {server} =  msg.flowInfo.config['hana-db-connection'];\nconst {credentials_linux} = msg.flowInfo.config;\n\ncredentials_linux.forEach(item=>{\n    if(item.hostname===server){\n        msg.linux_credentials = item;\n    }\n});\n\nmsg.payload = '[ -d \"/hana\" ] && echo \"Directory exists.\"';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 560,
        "wires": [
            [
                "b727cd5063a06f36"
            ]
        ]
    },
    {
        "id": "2647ea057b10dcd5",
        "type": "inject",
        "z": "cf45155e.4364b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 500,
        "wires": [
            [
                "54174bbf8ea456c4"
            ]
        ]
    },
    {
        "id": "0eb4401e9f2b059d",
        "type": "debug",
        "z": "cf45155e.4364b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 560,
        "wires": []
    },
    {
        "id": "54174bbf8ea456c4",
        "type": "subflow:5717a347.80f76c",
        "z": "cf45155e.4364b8",
        "name": "",
        "x": 250,
        "y": 560,
        "wires": [
            [
                "b306b59ccfa95f63"
            ]
        ]
    },
    {
        "id": "d6da37a82593ba30",
        "type": "inject",
        "z": "cf45155e.4364b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 468,
        "wires": [
            [
                "b727cd5063a06f36"
            ]
        ]
    },
    {
        "id": "b727cd5063a06f36",
        "type": "ssh-v3",
        "z": "cf45155e.4364b8",
        "name": "",
        "x": 610,
        "y": 560,
        "wires": [
            [
                "0eb4401e9f2b059d"
            ]
        ]
    },
    {
        "id": "bc87d660b0d7b59a",
        "type": "function",
        "z": "cf45155e.4364b8",
        "name": "services.json",
        "func": "msg.serviceAddData = [{\n\tServiceCode: \"HANA_IndexServer\",\n\tServiceName: \"HANA DB - Index Server\",\n\tActualStatusCheckType: \"Custom\",\n\tOSFormalStatusCheckCommand: \"ent_hana status\",\n\tOSStartCommand: \"ent_hana start\",\n\tOSServiceStopCommand: \"ent_hana stop\",\n\tOSServiceRestartCommand: \"ent_hana restart\"\n},{\n\tServiceCode: \"B1_SLD_LicenseManager\",\n\tServiceName: \"License Manager\",\n\tActualStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_Mailer\",\n\tServiceName: \"B1 Mailer\",\n\tActualStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_Alert\",\n\tServiceName: \"B1 Alert\",\n\tActualStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_MobileService\",\n\tServiceName: \"Mobile Service\",\n\tActualStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_AnalyticsPlatform\",\n\tServiceName: \"Analytics Platform & Portal\",\n\tActualStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_BackupService\",\n\tServiceName: \"Backup Service\",\n\tActualStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_EDS\",\n\tServiceName: \"Electronic Document Service (EDS)\",\n\tActualStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_eds status\",\n\tOSStartCommand: \"ent_b1_eds start\",\n\tOSServiceStopCommand: \"ent_b1_eds stop\",\n\tOSServiceRestartCommand: \"ent_b1_eds restart\"\n}, {\n\tServiceCode: \"B1_WebClient\",\n\tServiceName: \"Web Client (Fiori)\",\n\tActualStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_webclient status\",\n\tOSStartCommand: \"ent_b1_webclient start\",\n\tOSServiceStopCommand: \"ent_b1_webclient stop\",\n\tOSServiceRestartCommand: \"ent_b1_webclient restart\"\n}, {\n\tServiceCode: \"B1_ServiceLayer\",\n\tServiceName: \"Service Layer\",\n\tActualStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sl status\",\n\tOSStartCommand: \"ent_b1_sl start\",\n\tOSServiceStopCommand: \"ent_b1_sl stop\",\n\tOSServiceRestartCommand: \"ent_b1_sl restart\"\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 960,
        "wires": [
            [
                "6f8691e6397695d3"
            ]
        ]
    },
    {
        "id": "6f8691e6397695d3",
        "type": "function",
        "z": "cf45155e.4364b8",
        "name": "sql for Service Info from B1 SLDData",
        "func": "msg.configOverrideHana = {\n    database: 'SLDDATA'\n};\nif (!msg.flowInfo)\n    msg.flowInfo = {};\n//msg.flowInfo.sql = 'call SBOCOMMON.TMSP_GETCOMPLIST2';\nmsg.flowInfo.sql =`\nSELECT *,SUBSTR_REGEXPR('[://|@](\\\\w*):' IN \"SLD_AccessURL\" GROUP 1) AS \"SLD_ServerLocation\"\nFROM (\n(\nselect\n'HANA_IndexServer' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"NAME\" AS \"SLD_AccessURL\",\n0 AS \"VisualOrder\",\n\"ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"DBSERVERINSTANCES\"\n)\nUNION ALL\n(\nselect\n'B1_SLD_LicenseManager' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"ACCESSURL\" AS \"SLD_AccessURL\",\n10 AS \"VisualOrder\",\n\"LOGICALMACHINE_ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"LICENSESERVERS\"\n)\nUNION ALL\n(\nselect\n'B1_SLD_Mailer' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"ACCESSURL\" AS \"SLD_AccessURL\",\n20 AS \"VisualOrder\",\n\"LOGICALMACHINE_ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"MAILERSERVICES\"\n)\nUNION ALL\n(\nselect\n'B1_SLD_Alert' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"ACCESSURL\" AS \"SLD_AccessURL\",\n30 AS \"VisualOrder\",\n\"LOGICALMACHINE_ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"MAILERSERVICES\"\n)\nUNION ALL\n(\nselect\n'B1_SLD_MobileService' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"ACCESSURL\" AS \"SLD_AccessURL\",\n40 AS \"VisualOrder\",\n\"LOGICALMACHINE_ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"MOBILESERVICES\"\n)\nUNION ALL\n(\nselect\n'B1_SLD_AnalyticsPlatform' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"ACCESSURL\" AS \"SLD_AccessURL\",\n50 AS \"VisualOrder\",\n\"LOGICALMACHINE_ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"B1AHSERVERS\"\n)\nUNION ALL\n(\nselect\n'B1_SLD_BackupService' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"LINK\" AS \"SLD_AccessURL\",\n60 AS \"VisualOrder\",\n\"LOGICALMACHINE_ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"BACKUPSERVICES\"\n)\nUNION ALL\n(\nselect\n'B1_EDS' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"ACCESSURL\" AS \"SLD_AccessURL\",\n70 AS \"VisualOrder\",\n\"LOGICALMACHINE_ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"ELECTRONICDOCSERVICES\"\n)\nUNION ALL\n(\nselect\n'B1_WebClient' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"ACCESSURL\" AS \"SLD_AccessURL\",\n80 AS \"VisualOrder\",\n\"LOGICALMACHINE_ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"B1WEBCLIENTS\"\n)\nUNION ALL\n(\nselect\n'B1_ServiceLayer' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"ACCESSURL\" AS \"SLD_AccessURL\",\n90 AS \"VisualOrder\",\n\"LOGICALMACHINE_ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"B1SERVICELAYERS\"\n)\n);\n`;\n\n\n//  call SBOCOMMON.TMSP_GETCOMPLIST\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1020,
        "wires": [
            [
                "f16075f7718282ed"
            ]
        ]
    },
    {
        "id": "f16075f7718282ed",
        "type": "HanaClient-request",
        "z": "cf45155e.4364b8",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 650,
        "y": 1020,
        "wires": [
            [
                "4fe1438843ee6930"
            ],
            []
        ]
    },
    {
        "id": "4fe1438843ee6930",
        "type": "function",
        "z": "cf45155e.4364b8",
        "name": "",
        "func": "\n\nfor(let i of msg.payload){\n    for(let j of msg.serviceAddData){\n        node.warn(i);\n        // if(msg.serviceAddData[j] === msg.payload[i]){\n        //     msg.payload[i] = Object.assign(msg.payload[i],msg.serviceAddData[j]);\n        // }\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 980,
        "wires": [
            [
                "bac5b6252ac440c8"
            ]
        ]
    },
    {
        "id": "bac5b6252ac440c8",
        "type": "debug",
        "z": "cf45155e.4364b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1020,
        "wires": []
    },
    {
        "id": "7d2adb1d23061dae",
        "type": "inject",
        "z": "cf45155e.4364b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 960,
        "wires": [
            [
                "bc87d660b0d7b59a"
            ]
        ]
    },
    {
        "id": "8ad3e5826f5f4089",
        "type": "Serial Iterator",
        "z": "cf45155e.4364b8",
        "name": "",
        "property": "payload",
        "inputFlow": "feedback",
        "saveOutput": 0,
        "recursive": 0,
        "storeId": 0,
        "x": 550,
        "y": 1120,
        "wires": [
            [
                "ee3a6d212e9603bd"
            ],
            [
                "7d72d34333aabe63"
            ]
        ]
    },
    {
        "id": "3fa4c42c441ba7d7",
        "type": "inject",
        "z": "cf45155e.4364b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 1120,
        "wires": [
            [
                "d2fee81078800f0d"
            ]
        ]
    },
    {
        "id": "dd4ca1aaa9b1e645",
        "type": "function",
        "z": "cf45155e.4364b8",
        "name": "",
        "func": "msg.total = 0;\nmsg.payload = [1,2,3,4,5]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1120,
        "wires": [
            [
                "8ad3e5826f5f4089"
            ]
        ]
    },
    {
        "id": "a7bf56977f75c7b7",
        "type": "debug",
        "z": "cf45155e.4364b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1080,
        "wires": []
    },
    {
        "id": "7d72d34333aabe63",
        "type": "debug",
        "z": "cf45155e.4364b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1160,
        "wires": []
    },
    {
        "id": "ee3a6d212e9603bd",
        "type": "function",
        "z": "cf45155e.4364b8",
        "name": "",
        "func": "msg.total +=msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1080,
        "wires": [
            [
                "a7bf56977f75c7b7",
                "8ad3e5826f5f4089"
            ]
        ]
    },
    {
        "id": "4077e72df6936aa7",
        "type": "function",
        "z": "cf45155e.4364b8",
        "name": "",
        "func": "\nconst {server} =  msg.flowInfo.config['hana-db-connection'];\nconst {credentials_linux} = msg.flowInfo.config;\n\ncredentials_linux.forEach(item=>{\n    if(item.hostname===server){\n        msg.linux_credentials = item;\n    }\n});\n\nmsg.payload = '[ -d \"/hana\" ] && echo \"Directory exists.\"';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "0dbd0b4dd8d32468",
        "type": "inject",
        "z": "cf45155e.4364b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 680,
        "wires": [
            [
                "471f13f7f712ea95"
            ]
        ]
    },
    {
        "id": "40214411f1197324",
        "type": "debug",
        "z": "cf45155e.4364b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 640,
        "wires": []
    },
    {
        "id": "471f13f7f712ea95",
        "type": "subflow:5717a347.80f76c",
        "z": "cf45155e.4364b8",
        "name": "",
        "x": 270,
        "y": 680,
        "wires": [
            [
                "4077e72df6936aa7"
            ]
        ]
    },
    {
        "id": "dce27e18a8869252",
        "type": "debug",
        "z": "cf45155e.4364b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 680,
        "wires": []
    },
    {
        "id": "5491e972b62cfb26",
        "type": "function",
        "z": "cf45155e.4364b8",
        "name": "",
        "func": "\nconst {server} =  msg.flowInfo.config['hana-db-connection'];\nconst {credentials_linux} = msg.flowInfo.config;\n\ncredentials_linux.forEach(item=>{\n    if(item.hostname===server){\n        msg.linux_credentials = item;\n    }\n});\n\nmsg.payload = '[ -d \"/hana\" ] && echo \"Directory exists.\"';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "c6adf303e193740c",
        "type": "inject",
        "z": "cf45155e.4364b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 800,
        "wires": [
            [
                "d4398520a9874763"
            ]
        ]
    },
    {
        "id": "3f76187e95208cec",
        "type": "debug",
        "z": "cf45155e.4364b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 760,
        "wires": []
    },
    {
        "id": "d4398520a9874763",
        "type": "subflow:5717a347.80f76c",
        "z": "cf45155e.4364b8",
        "name": "",
        "x": 290,
        "y": 800,
        "wires": [
            [
                "5491e972b62cfb26"
            ]
        ]
    },
    {
        "id": "297c21b674762acf",
        "type": "debug",
        "z": "cf45155e.4364b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 800,
        "wires": []
    },
    {
        "id": "0f08bf427a299256",
        "type": "debug",
        "z": "cf45155e.4364b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 720,
        "wires": []
    },
    {
        "id": "aad7d69e327fa370",
        "type": "function",
        "z": "cf45155e.4364b8",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 640,
        "wires": [
            [
                "40214411f1197324"
            ]
        ]
    },
    {
        "id": "9bf886e816deae95",
        "type": "http in",
        "z": "cf45155e.4364b8",
        "name": "Services",
        "url": "/api/getServices3",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 264,
        "y": 864,
        "wires": [
            []
        ]
    },
    {
        "id": "c8ecd987183732da",
        "type": "http in",
        "z": "cf45155e.4364b8",
        "name": "Services",
        "url": "/api/getServices3",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 720,
        "wires": [
            [
                "471f13f7f712ea95"
            ]
        ]
    },
    {
        "id": "bbea36aec1a1c781",
        "type": "subflow:5ddb2001.76d37",
        "z": "cf45155e.4364b8",
        "name": "",
        "x": 190,
        "y": 1020,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d2fee81078800f0d",
        "type": "subflow:5717a347.80f76c",
        "z": "cf45155e.4364b8",
        "name": "",
        "x": 250,
        "y": 1120,
        "wires": [
            [
                "dd4ca1aaa9b1e645"
            ]
        ]
    },
    {
        "id": "7d0cd58055afb7de",
        "type": "sqlite",
        "z": "cf45155e.4364b8",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 520,
        "y": 1260,
        "wires": [
            [
                "bdedf30142e9f271"
            ]
        ]
    },
    {
        "id": "183b3f89a28f0443",
        "type": "function",
        "z": "cf45155e.4364b8",
        "name": "FlowTimeStamp",
        "func": "\nnode.warn('B1_SLD_AnalyticsPlatform')\n\nmsg.topic = `SELECT datetime('now', 'localtime') as \"FlowTimeStamp\" ;\n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1260,
        "wires": [
            [
                "7d0cd58055afb7de"
            ]
        ]
    },
    {
        "id": "a3fde6ba62792fe9",
        "type": "inject",
        "z": "cf45155e.4364b8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1260,
        "wires": [
            [
                "183b3f89a28f0443",
                "b2e8b102b6066234"
            ]
        ]
    },
    {
        "id": "bdedf30142e9f271",
        "type": "debug",
        "z": "cf45155e.4364b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 696,
        "y": 1263,
        "wires": []
    },
    {
        "id": "1ae402d09303a599",
        "type": "catch",
        "z": "cf45155e.4364b8",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 200,
        "y": 1380,
        "wires": [
            [
                "08ea8d085f9fa143"
            ]
        ]
    },
    {
        "id": "08ea8d085f9fa143",
        "type": "debug",
        "z": "cf45155e.4364b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 1380,
        "wires": []
    },
    {
        "id": "b2e8b102b6066234",
        "type": "debug",
        "z": "cf45155e.4364b8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 1300,
        "wires": []
    },
    {
        "id": "2c7b31a1723f61dd",
        "type": "debug",
        "z": "ce5114bb6a210af7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 60,
        "wires": []
    },
    {
        "id": "31cdfe1b64b05fa2",
        "type": "http request",
        "z": "ce5114bb6a210af7",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 330,
        "y": 320,
        "wires": [
            [
                "9e5b1c85dba88ed0"
            ]
        ]
    },
    {
        "id": "24b05faddc37f414",
        "type": "debug",
        "z": "ce5114bb6a210af7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 240,
        "wires": []
    },
    {
        "id": "14dc477e48163218",
        "type": "function",
        "z": "ce5114bb6a210af7",
        "name": "",
        "func": "msg.item = msg.payload;\nmsg.url = msg.item.SLD_AccessURL\nmsg.rejectUnauthorized=false;\n\nif(msg.item.ActualStatusCheckType==='Basic'){\n    return [msg, null, null];\n}else if(msg.item.ServiceCode==='HANA_IndexServer'){\n    if (!msg.flowInfo)\n    msg.flowInfo = {};\n    msg.flowInfo.sql = 'select 1 from dummy';\n    return [null, msg, null];\n}else{\n    return [null, null, msg];\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 360,
        "wires": [
            [
                "31cdfe1b64b05fa2"
            ],
            [
                "394c0501d7254160"
            ],
            []
        ]
    },
    {
        "id": "f0e1ed6a0fa26761",
        "type": "debug",
        "z": "ce5114bb6a210af7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 220,
        "wires": []
    },
    {
        "id": "899f315b7b41baf7",
        "type": "http request",
        "z": "ce5114bb6a210af7",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://hanab1hdev20:50000",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 650,
        "y": 860,
        "wires": [
            [
                "d160ac1c228f7419"
            ]
        ]
    },
    {
        "id": "b80ece1a6a78f61f",
        "type": "inject",
        "z": "ce5114bb6a210af7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 860,
        "wires": [
            [
                "2ca208b4d5dd17d8"
            ]
        ]
    },
    {
        "id": "d160ac1c228f7419",
        "type": "debug",
        "z": "ce5114bb6a210af7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 860,
        "wires": []
    },
    {
        "id": "5b9cda759f309137",
        "type": "function",
        "z": "ce5114bb6a210af7",
        "name": "",
        "func": "msg.headers={\n    \"rejectUnauthorized\":false,\n    \"requestCert\": false,\n    \"agent\": false\n};\nmsg.rejectUnauthorized=false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 860,
        "wires": [
            [
                "899f315b7b41baf7"
            ]
        ]
    },
    {
        "id": "24c4eb437d593186",
        "type": "http in",
        "z": "ce5114bb6a210af7",
        "name": "Services",
        "url": "/api/getServices",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 120,
        "wires": [
            [
                "8cfa5a8617719eed"
            ]
        ]
    },
    {
        "id": "8cd67ee11179811a",
        "type": "http response",
        "z": "ce5114bb6a210af7",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 280,
        "wires": []
    },
    {
        "id": "9e5b1c85dba88ed0",
        "type": "function",
        "z": "ce5114bb6a210af7",
        "name": "",
        "func": "if(msg.statusCode===200){\n    msg.item.ActualStatus='Online';\n}else{\n    msg.item.ActualStatus='Offline'\n}\nmsg.item.ActualStatusTxt=`\nActual Status: ${msg.item.ActualStatus}\n\nCode: ${msg.statusCode}\n\nText: ${msg.statusCode!==200?msg.payload:msg.item.ServiceName}\n`;\n\nmsg.services.push(msg.item);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 320,
        "wires": [
            [
                "ab650baf6782747a",
                "2ea86cedd1c93541"
            ]
        ]
    },
    {
        "id": "51657164cc1590d4",
        "type": "function",
        "z": "ce5114bb6a210af7",
        "name": "ServiceCode",
        "func": "\nmsg.services=[];\n\nif(msg.req.query.ServiceCode){\n    msg.payload=msg.payload.filter(item=>{\n    return msg.req.query.ServiceCode===item.ServiceCode;\n    });\n}\n\nif(msg.req.query.withoutStatus==='true'){\n    return [null, msg];\n}\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 80,
        "wires": [
            [
                "f310ba84f07fd508",
                "2c7b31a1723f61dd"
            ],
            [
                "29331de6aa4607aa"
            ]
        ]
    },
    {
        "id": "e1c6b334a5eb5899",
        "type": "function",
        "z": "ce5114bb6a210af7",
        "name": "",
        "func": "msg.payload=msg.services;\n\nif(msg.req.query.count==='true'){\n    msg.payload={\n        online:0,\n        warnings:0\n    }\n    msg.services.forEach(item=>{\n       if(item.FormalStatus===\"Online\"&&item.ActualStatus===\"Online\"){\n           msg.payload.online+=1;\n       }else{\n           msg.payload.warnings+=1;\n       }\n    });\n}\n\nif(msg.req.query.ServiceCode){\n    msg.payload = msg.payload[0];\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 260,
        "wires": [
            [
                "8cd67ee11179811a",
                "24b05faddc37f414"
            ]
        ]
    },
    {
        "id": "6719738dcea4fa3b",
        "type": "http response",
        "z": "ce5114bb6a210af7",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 630,
        "y": 160,
        "wires": []
    },
    {
        "id": "f310ba84f07fd508",
        "type": "link out",
        "z": "ce5114bb6a210af7",
        "name": "",
        "mode": "link",
        "links": [
            "99dd893923dfec3e",
            "4acc6ef12854450a"
        ],
        "x": 765,
        "y": 60,
        "wires": []
    },
    {
        "id": "99dd893923dfec3e",
        "type": "link in",
        "z": "ce5114bb6a210af7",
        "name": "",
        "links": [
            "f310ba84f07fd508",
            "93674b80dc8b31b4",
            "ef6729dcba14ba55",
            "4cc9c412c88922c2"
        ],
        "x": 115,
        "y": 240,
        "wires": [
            [
                "aee54058a8d0f77a"
            ]
        ]
    },
    {
        "id": "ab650baf6782747a",
        "type": "link out",
        "z": "ce5114bb6a210af7",
        "name": "",
        "mode": "link",
        "links": [
            "e518b4be4052ad27"
        ],
        "x": 755,
        "y": 360,
        "wires": []
    },
    {
        "id": "f26d86566002bff3",
        "type": "comment",
        "z": "ce5114bb6a210af7",
        "name": "10. Get Services",
        "info": "",
        "x": 140,
        "y": 40,
        "wires": []
    },
    {
        "id": "6c6d49e9c435c164",
        "type": "comment",
        "z": "ce5114bb6a210af7",
        "name": "20. Actual Status Check",
        "info": "",
        "x": 160,
        "y": 280,
        "wires": []
    },
    {
        "id": "2ea86cedd1c93541",
        "type": "debug",
        "z": "ce5114bb6a210af7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 320,
        "wires": []
    },
    {
        "id": "2ca208b4d5dd17d8",
        "type": "function",
        "z": "ce5114bb6a210af7",
        "name": "services.json",
        "func": "msg.serviceData = [{\n\tServiceCode: \"B1_SLD_LicenseManager\",\n\tServiceName: \"License Manager\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_Mailer\",\n\tServiceName: \"B1 Mailer\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_Alert\",\n\tServiceName: \"B1 Alert\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_MobileService\",\n\tServiceName: \"Mobile Service\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_AnalyticsPlatform\",\n\tServiceName: \"Analytics Platform & Portal\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_BackupService\",\n\tServiceName: \"Backup Service\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_EDS\",\n\tServiceName: \"Electronic Document Service (EDS)\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_WebClient\",\n\tServiceName: \"Web Client (Fiori)\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_webclient status\",\n\tOSStartCommand: \"ent_b1_webclient start\",\n\tOSServiceStopCommand: \"ent_b1_webclient stop\",\n\tOSServiceRestartCommand: \"ent_b1_webclient restart\"\n}, {\n\tServiceCode: \"B1_ServiceLayer\",\n\tServiceName: \"Service Layer\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 860,
        "wires": [
            [
                "5b9cda759f309137"
            ]
        ]
    },
    {
        "id": "4e4f7c71728a2de1",
        "type": "function",
        "z": "ce5114bb6a210af7",
        "name": "prep ssh",
        "func": "delete msg.session;\n\nif(!msg.payload.length){\n   return [null, msg];\n}\n\nmsg.linux_credentials = {\n    'hostname': msg.payload[0].HOSTNAME,\n    'port': msg.payload[0].PORT,\n    'username': msg.payload[0].USERNAME,\n    'password': msg.payload[0].PASSWORD\n};\n\nmsg.payload = `${msg.item.OSFormalStatusCheckCommand}`;\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 500,
        "wires": [
            [
                "8d6e5cbcd3a09f94"
            ],
            [
                "71db979a4389b237"
            ]
        ]
    },
    {
        "id": "8d6e5cbcd3a09f94",
        "type": "ssh-v3",
        "z": "ce5114bb6a210af7",
        "name": "",
        "x": 550,
        "y": 560,
        "wires": [
            [
                "71db979a4389b237",
                "ed0e81b1dd5a0402"
            ]
        ]
    },
    {
        "id": "6d70647680a03e01",
        "type": "comment",
        "z": "ce5114bb6a210af7",
        "name": "20. Formal Status Check",
        "info": "",
        "x": 170,
        "y": 420,
        "wires": []
    },
    {
        "id": "e518b4be4052ad27",
        "type": "link in",
        "z": "ce5114bb6a210af7",
        "name": "",
        "links": [
            "ab650baf6782747a"
        ],
        "x": 95,
        "y": 500,
        "wires": [
            [
                "f965873d0c6e864d"
            ]
        ]
    },
    {
        "id": "8dced08adba1bd2c",
        "type": "sqlite",
        "z": "ce5114bb6a210af7",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 380,
        "y": 500,
        "wires": [
            [
                "4e4f7c71728a2de1",
                "c2122d0643ced72d"
            ]
        ]
    },
    {
        "id": "f965873d0c6e864d",
        "type": "function",
        "z": "ce5114bb6a210af7",
        "name": "Host Info",
        "func": "\nnode.warn(msg.item.ServiceCode)\nmsg.topic = `\nSELECT * FROM ENT_SERVERS where HOSTNAME='${msg.item.SLD_ServerLocation}';   \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 500,
        "wires": [
            [
                "8dced08adba1bd2c"
            ]
        ]
    },
    {
        "id": "394c0501d7254160",
        "type": "HanaClient-request",
        "z": "ce5114bb6a210af7",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 310,
        "y": 380,
        "wires": [
            [
                "e7564cb196cc4aa7",
                "fd22a8e41f05efc4"
            ],
            [
                "6019baed541675ab"
            ]
        ]
    },
    {
        "id": "e7564cb196cc4aa7",
        "type": "function",
        "z": "ce5114bb6a210af7",
        "name": "",
        "func": "if(msg.payload.length){\n    msg.item.ActualStatus='Online';\n}else{\n    msg.item.ActualStatus='Offline'\n}\n\nmsg.item.ActualStatusTxt=`\nActual Status: ${msg.item.ActualStatus}\n\nCode: Custom Check\n\nText: ${msg.payload.length===0?msg.error:msg.item.ServiceName}\n`;\n\nmsg.services.push(msg.item);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 360,
        "wires": [
            [
                "ab650baf6782747a"
            ]
        ]
    },
    {
        "id": "6019baed541675ab",
        "type": "function",
        "z": "ce5114bb6a210af7",
        "name": "",
        "func": "\nmsg.item.ActualStatus='Offline'\nmsg.services.push(msg.item);\n\nmsg.item.ActualStatusTxt=`\nActual Status: ${msg.item.ActualStatus}\n\nCode: Custom Check\n\nText: ${msg.error}\n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 400,
        "wires": [
            [
                "ab650baf6782747a"
            ]
        ]
    },
    {
        "id": "fd22a8e41f05efc4",
        "type": "debug",
        "z": "ce5114bb6a210af7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 400,
        "wires": []
    },
    {
        "id": "ed0e81b1dd5a0402",
        "type": "debug",
        "z": "ce5114bb6a210af7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 580,
        "wires": []
    },
    {
        "id": "71db979a4389b237",
        "type": "function",
        "z": "ce5114bb6a210af7",
        "name": "",
        "func": "if(msg.session&&msg.session.code===0){\n    msg.item.FormalStatus='Online';\n}else{\n    msg.item.FormalStatus='Offline';\n}\n\nmsg.item.FormalStatusTxt=`\nFormal Status: ${msg.item.FormalStatus}\n\nCode: ${msg.session?msg.session.code:''}\n\nText: ${msg.session?'':'Server Info not found in DB'}\n    stdout: ${msg.session?msg.session.stdout.join('\\n'):''}\n\n    stderr: ${msg.session?msg.session.stderr.join('\\n'):''}\n\n`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 500,
        "wires": [
            [
                "93674b80dc8b31b4"
            ]
        ]
    },
    {
        "id": "93674b80dc8b31b4",
        "type": "link out",
        "z": "ce5114bb6a210af7",
        "name": "",
        "mode": "link",
        "links": [
            "99dd893923dfec3e",
            "4acc6ef12854450a"
        ],
        "x": 845,
        "y": 540,
        "wires": []
    },
    {
        "id": "c2122d0643ced72d",
        "type": "debug",
        "z": "ce5114bb6a210af7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 460,
        "wires": []
    },
    {
        "id": "d09c57d6abf872d0",
        "type": "catch",
        "z": "ce5114bb6a210af7",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 340,
        "y": 620,
        "wires": [
            [
                "36afb180c9ba48e2"
            ]
        ]
    },
    {
        "id": "36afb180c9ba48e2",
        "type": "function",
        "z": "ce5114bb6a210af7",
        "name": "",
        "func": "if(msg.error.source.type===\"ssh-v3\"){\n    return [msg, null];\n}else{\n    return [null, msg];\n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 620,
        "wires": [
            [
                "9d50a515b74a66d7"
            ],
            []
        ]
    },
    {
        "id": "9d50a515b74a66d7",
        "type": "function",
        "z": "ce5114bb6a210af7",
        "name": "",
        "func": "\nmsg.item.FormalStatus='Unknown';\n\nmsg.item.FormalStatusTxt=`\nFormal Status: ${msg.item.FormalStatus}\n\nCode: ${msg.session?msg.session.code:''}\n\nText: ${msg.error.message}\n    stdout: ${msg.session?msg.session.stdout.join('\\n'):''}\n\n    stderr: ${msg.session?msg.session.stderr.join('\\n'):''}\n\n`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 580,
        "wires": [
            [
                "93674b80dc8b31b4"
            ]
        ]
    },
    {
        "id": "f9303da167bae2be",
        "type": "subflow:195b570b57bc542c",
        "z": "ce5114bb6a210af7",
        "name": "",
        "x": 450,
        "y": 120,
        "wires": [
            [
                "51657164cc1590d4"
            ],
            [
                "6719738dcea4fa3b"
            ]
        ]
    },
    {
        "id": "8cfa5a8617719eed",
        "type": "subflow:7ee266ca63cceab4",
        "z": "ce5114bb6a210af7",
        "name": "",
        "x": 280,
        "y": 120,
        "wires": [
            [
                "f9303da167bae2be"
            ]
        ]
    },
    {
        "id": "29331de6aa4607aa",
        "type": "http response",
        "z": "ce5114bb6a210af7",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 810,
        "y": 100,
        "wires": []
    },
    {
        "id": "aee54058a8d0f77a",
        "type": "Serial Iterator",
        "z": "ce5114bb6a210af7",
        "name": "Iterate",
        "property": "payload",
        "inputFlow": "feedback",
        "saveOutput": 0,
        "recursive": 0,
        "storeId": 0,
        "x": 250,
        "y": 240,
        "wires": [
            [
                "14dc477e48163218",
                "f0e1ed6a0fa26761"
            ],
            [
                "e1c6b334a5eb5899"
            ]
        ]
    },
    {
        "id": "6786046d4350f383",
        "type": "function",
        "z": "ce5114bb6a210af7",
        "name": "",
        "func": "if(msg.req.query.ServiceCode){\n    msg.payload = msg.services[0];\n    return [null, msg];\n}\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 580,
        "wires": [
            [],
            [
                "af9276cc3b65c6b2"
            ]
        ]
    },
    {
        "id": "af9276cc3b65c6b2",
        "type": "http response",
        "z": "ce5114bb6a210af7",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 620,
        "wires": []
    },
    {
        "id": "0bdfa63a41172989",
        "type": "http in",
        "z": "60936536b941ff69",
        "name": "Services Start",
        "url": "/api/serviceStart",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "65b949657b437032"
            ]
        ]
    },
    {
        "id": "6b3f0db6e4d3d673",
        "type": "subflow:195b570b57bc542c",
        "z": "60936536b941ff69",
        "name": "",
        "x": 230,
        "y": 260,
        "wires": [
            [
                "24c58c7ef55a478e"
            ],
            [
                "dc55633f2db0a96d"
            ]
        ]
    },
    {
        "id": "83ae2560725779a0",
        "type": "function",
        "z": "60936536b941ff69",
        "name": "prep ssh",
        "func": "delete msg.session;\n\nif(!msg.payload.length){\n   return [null, msg];\n}\n\nmsg.linux_credentials = {\n    'hostname': msg.payload[0].HOSTNAME,\n    'port': msg.payload[0].PORT,\n    'username': msg.payload[0].USERNAME,\n    'password': msg.payload[0].PASSWORD\n};\n\nmsg.payload = `${msg.start ? msg.item.OSStartCommand : msg.stop ? msg.item.OSServiceStopCommand :\n                    msg.restart ? msg.item.OSServiceRestartCommand : ''}`;\n\nreturn [msg, null];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 260,
        "wires": [
            [
                "e9d19d09ad17ea98",
                "09edc71d2e34394b"
            ]
        ]
    },
    {
        "id": "e9d19d09ad17ea98",
        "type": "ssh-v3",
        "z": "60936536b941ff69",
        "name": "",
        "x": 730,
        "y": 340,
        "wires": [
            [
                "9750422f175feade",
                "76f78e194585b75d"
            ]
        ]
    },
    {
        "id": "70eff457a9d81df1",
        "type": "http response",
        "z": "60936536b941ff69",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 730,
        "y": 280,
        "wires": []
    },
    {
        "id": "dc55633f2db0a96d",
        "type": "http response",
        "z": "60936536b941ff69",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 390,
        "y": 280,
        "wires": []
    },
    {
        "id": "365d26072dc3e2a6",
        "type": "sqlite",
        "z": "60936536b941ff69",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 900,
        "y": 200,
        "wires": [
            [
                "83ae2560725779a0"
            ]
        ]
    },
    {
        "id": "410ebcdf2fa9ee39",
        "type": "function",
        "z": "60936536b941ff69",
        "name": "Host Info",
        "func": "\nnode.warn(msg.item)\nmsg.topic = `\nSELECT * FROM ENT_SERVERS where HOSTNAME='${msg.item.SLD_ServerLocation}';   \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 200,
        "wires": [
            [
                "365d26072dc3e2a6"
            ]
        ]
    },
    {
        "id": "1fc6591d8bb9325d",
        "type": "http in",
        "z": "60936536b941ff69",
        "name": "Services Stop",
        "url": "/api/serviceStop",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "0f25224d2213f9cf"
            ]
        ]
    },
    {
        "id": "88761347d3f1590c",
        "type": "http in",
        "z": "60936536b941ff69",
        "name": "Services Restart",
        "url": "/api/serviceRestart",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "b581b3b615af8807"
            ]
        ]
    },
    {
        "id": "65b949657b437032",
        "type": "function",
        "z": "60936536b941ff69",
        "name": "",
        "func": "msg.start=true;\nmsg.success='';\nmsg.error='';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 100,
        "wires": [
            [
                "6b3f0db6e4d3d673"
            ]
        ]
    },
    {
        "id": "0f25224d2213f9cf",
        "type": "function",
        "z": "60936536b941ff69",
        "name": "",
        "func": "msg.stop=true;\nmsg.success='';\nmsg.error='';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 140,
        "wires": [
            [
                "6b3f0db6e4d3d673"
            ]
        ]
    },
    {
        "id": "b581b3b615af8807",
        "type": "function",
        "z": "60936536b941ff69",
        "name": "",
        "func": "msg.restart=true;\nmsg.success='';\nmsg.error='';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 180,
        "wires": [
            [
                "6b3f0db6e4d3d673"
            ]
        ]
    },
    {
        "id": "ac2f5dac4497fa70",
        "type": "subflow:5ddb2001.76d37",
        "z": "60936536b941ff69",
        "name": "",
        "env": [
            {
                "name": "inputVarName",
                "value": "payload",
                "type": "str"
            },
            {
                "name": "currentObjectName",
                "value": "item",
                "type": "str"
            }
        ],
        "x": 550,
        "y": 220,
        "wires": [
            [
                "410ebcdf2fa9ee39",
                "09377df8189276ac"
            ],
            [
                "b1e797e9c792697e"
            ]
        ]
    },
    {
        "id": "b1e797e9c792697e",
        "type": "function",
        "z": "60936536b941ff69",
        "name": "",
        "func": "msg.payload = `\nSuccess:\n${msg.success}\nError:\n${msg.error}\n`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 240,
        "wires": [
            [
                "70eff457a9d81df1",
                "4a2440cca0a06f91"
            ]
        ]
    },
    {
        "id": "e6dbc9d77557ad5e",
        "type": "link out",
        "z": "60936536b941ff69",
        "name": "",
        "mode": "link",
        "links": [
            "ca485db3e723dfd4"
        ],
        "x": 965,
        "y": 340,
        "wires": []
    },
    {
        "id": "ca485db3e723dfd4",
        "type": "link in",
        "z": "60936536b941ff69",
        "name": "",
        "links": [
            "e6dbc9d77557ad5e"
        ],
        "x": 445,
        "y": 200,
        "wires": [
            [
                "ac2f5dac4497fa70"
            ]
        ]
    },
    {
        "id": "9750422f175feade",
        "type": "function",
        "z": "60936536b941ff69",
        "name": "",
        "func": "if(msg.session&&msg.session.code===0){\n    msg.success+=msg.item.ServiceName+'\\t'+'Success\\n';\n}else{\n    msg.error+=msg.item.ServiceName+'\\t'+`${msg.session?'':'Server Info not found in DB'}\n    stdout: ${msg.session?msg.session.stdout.join('\\n'):''}\n    stderr: ${msg.session?msg.session.stderr.join('\\n'):''}\\n`;\n}\n\n// msg.item.FormalStatusTxt=`\n// Formal Status: ${msg.item.FormalStatus}\n\n// Code: ${msg.session?msg.session.code:''}\n\n// Text: ${msg.session?'':'Server Info not found in DB'}\n//     stdout: ${msg.session?msg.session.stdout.join('\\n'):''}\n\n//     stderr: ${msg.session?msg.session.stderr.join('\\n'):''}\n\n// `;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 340,
        "wires": [
            [
                "e6dbc9d77557ad5e"
            ]
        ]
    },
    {
        "id": "24c58c7ef55a478e",
        "type": "function",
        "z": "60936536b941ff69",
        "name": "",
        "func": "var payload=[];\n\nmsg.req.body.ServiceIDs.forEach(serviceId=>{\n    payload.push(msg.payload.find(item=>{\n        return item.ServiceCode===serviceId;\n    }));\n});\n\nmsg.payload=payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 240,
        "wires": [
            [
                "ac2f5dac4497fa70",
                "2529314c8b0ab40b"
            ]
        ]
    },
    {
        "id": "2529314c8b0ab40b",
        "type": "debug",
        "z": "60936536b941ff69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 260,
        "wires": []
    },
    {
        "id": "09377df8189276ac",
        "type": "debug",
        "z": "60936536b941ff69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 160,
        "wires": []
    },
    {
        "id": "4a2440cca0a06f91",
        "type": "debug",
        "z": "60936536b941ff69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 280,
        "wires": []
    },
    {
        "id": "09edc71d2e34394b",
        "type": "debug",
        "z": "60936536b941ff69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 300,
        "wires": []
    },
    {
        "id": "76f78e194585b75d",
        "type": "debug",
        "z": "60936536b941ff69",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 728,
        "y": 401,
        "wires": []
    },
    {
        "id": "09c185937ad21373",
        "type": "sqlite",
        "z": "bc80dc8df2de9bdd",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 560,
        "y": 380,
        "wires": [
            [
                "0af30630b81d5413"
            ]
        ]
    },
    {
        "id": "ac52c41972891a4a",
        "type": "function",
        "z": "bc80dc8df2de9bdd",
        "name": "Host Info SQL",
        "func": "\nmsg.topic = `\nSELECT * FROM ENT_SERVERS ${msg.req.query.hostname ? \"where HOSTNAME = '\" + msg.req.query.hostname + \"'\" : \"\"};   \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 380,
        "wires": [
            [
                "09c185937ad21373",
                "e785d2c252107e5b"
            ]
        ]
    },
    {
        "id": "15ee17445a7b5091",
        "type": "http in",
        "z": "bc80dc8df2de9bdd",
        "name": "GET-Host-Info",
        "url": "/api/hostInfo",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 380,
        "wires": [
            [
                "ac52c41972891a4a"
            ]
        ]
    },
    {
        "id": "51bd586583e1f17d",
        "type": "http response",
        "z": "bc80dc8df2de9bdd",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 380,
        "wires": []
    },
    {
        "id": "0af30630b81d5413",
        "type": "function",
        "z": "bc80dc8df2de9bdd",
        "name": "",
        "func": "if(msg.req.query.hostname){\n    msg.payload = msg.payload[0];\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 380,
        "wires": [
            [
                "51bd586583e1f17d"
            ]
        ]
    },
    {
        "id": "e785d2c252107e5b",
        "type": "debug",
        "z": "bc80dc8df2de9bdd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 340,
        "wires": []
    },
    {
        "id": "b3ae4404edcea71d",
        "type": "sqlite",
        "z": "bc80dc8df2de9bdd",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 560,
        "y": 520,
        "wires": [
            [
                "64c5bf11629c388a"
            ]
        ]
    },
    {
        "id": "6cd2b86bd24c89e8",
        "type": "function",
        "z": "bc80dc8df2de9bdd",
        "name": "Host Info SQL",
        "func": "\nmsg.topic = `\nSELECT * FROM ENT_EMAIL_TEMPLATE ${msg.req.query.template ? \"where HOSTNAME = '\" + msg.req.query.hostname + \"'\" : \"\"};   \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 520,
        "wires": [
            [
                "b3ae4404edcea71d",
                "ef19003823f42de5"
            ]
        ]
    },
    {
        "id": "87c9206560a9e71e",
        "type": "http in",
        "z": "bc80dc8df2de9bdd",
        "name": "emailTemplates",
        "url": "/api/emailTemplates",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 520,
        "wires": [
            [
                "6cd2b86bd24c89e8"
            ]
        ]
    },
    {
        "id": "a84ad6b05ac56b75",
        "type": "http response",
        "z": "bc80dc8df2de9bdd",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 520,
        "wires": []
    },
    {
        "id": "64c5bf11629c388a",
        "type": "function",
        "z": "bc80dc8df2de9bdd",
        "name": "",
        "func": "if(msg.req.query.hostname){\n    msg.payload = msg.payload[0];\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 520,
        "wires": [
            [
                "a84ad6b05ac56b75"
            ]
        ]
    },
    {
        "id": "ef19003823f42de5",
        "type": "debug",
        "z": "bc80dc8df2de9bdd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 480,
        "wires": []
    },
    {
        "id": "1fb44b65eadf9722",
        "type": "sqlite",
        "z": "bc80dc8df2de9bdd",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 840,
        "y": 240,
        "wires": [
            [
                "e91252a4a8af951f"
            ]
        ]
    },
    {
        "id": "6873c50b6615d29c",
        "type": "function",
        "z": "bc80dc8df2de9bdd",
        "name": "",
        "func": "\nmsg.topic = `UPDATE ENT_CONFIG SET VALUE = '${msg.req.body['path-for-export-import']}'  WHERE KEY ='path-for-export-import'`;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 240,
        "wires": [
            [
                "1fb44b65eadf9722"
            ]
        ]
    },
    {
        "id": "e91252a4a8af951f",
        "type": "http response",
        "z": "bc80dc8df2de9bdd",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 240,
        "wires": []
    },
    {
        "id": "817b97a296ccc57b",
        "type": "http in",
        "z": "bc80dc8df2de9bdd",
        "name": "[]POST]pathforExportImport",
        "url": "api/pathforExportImport",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 260,
        "wires": [
            [
                "aa2c5231b01d5df3"
            ]
        ]
    },
    {
        "id": "aa2c5231b01d5df3",
        "type": "subflow:19a1d236fd159ab3",
        "z": "bc80dc8df2de9bdd",
        "name": "",
        "x": 460,
        "y": 260,
        "wires": [
            [
                "6873c50b6615d29c"
            ],
            [
                "972b73745c4dfc06"
            ]
        ]
    },
    {
        "id": "972b73745c4dfc06",
        "type": "http response",
        "z": "bc80dc8df2de9bdd",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 470,
        "y": 300,
        "wires": []
    },
    {
        "id": "0615a264e25b0218",
        "type": "function",
        "z": "97998734b41b7fbf",
        "name": "",
        "func": "\nmsg.configOverrideHana = msg.flowInfo.config['hana-db-connection'];\nmsg.configOverrideHana.database='SLDDATA';\n\nif(!msg.flowInfo){\n    msg.flowInfo={};\n}\nmsg.flowInfo.sql=`\nselect\n'B1_ServiceLayer' AS \"ServiceCode\",\n\"ID\" AS \"SLD_ServiceID\",\n-- \"NAME\" AS \"SLD_ServerLocation\",\n\"ACCESSURL\" AS \"SLD_AccessURL\",\n90 AS \"VisualOrder\",\n\"LOGICALMACHINE_ID\" AS \"SLD_LogicalMachine_ID\"\nfrom \"B1SERVICELAYERS\";\n\n`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 120,
        "wires": [
            [
                "1741df5a0959c5cb"
            ]
        ]
    },
    {
        "id": "1741df5a0959c5cb",
        "type": "HanaClient-request",
        "z": "97998734b41b7fbf",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 650,
        "y": 120,
        "wires": [
            [
                "66fce54f4d8d2c14"
            ],
            [
                "2f3c5c59914de963"
            ]
        ]
    },
    {
        "id": "cbec637d4ec9c3b8",
        "type": "debug",
        "z": "97998734b41b7fbf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 100,
        "wires": []
    },
    {
        "id": "66fce54f4d8d2c14",
        "type": "function",
        "z": "97998734b41b7fbf",
        "name": "",
        "func": "msg.payload[0].SLD_AccessURL+='/b1s/v2';\nmsg.payload=msg.payload[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 100,
        "wires": [
            [
                "cbec637d4ec9c3b8",
                "ffc3ca9c10fcb4ba"
            ]
        ]
    },
    {
        "id": "ffc3ca9c10fcb4ba",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 100,
        "wires": []
    },
    {
        "id": "2f3c5c59914de963",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 140,
        "wires": []
    },
    {
        "id": "05d59afb55b8a841",
        "type": "debug",
        "z": "97998734b41b7fbf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 280,
        "wires": []
    },
    {
        "id": "05d5a188d66d47d5",
        "type": "function",
        "z": "97998734b41b7fbf",
        "name": "",
        "func": "var payload={};\n\nmsg.payload.forEach(item=>{\n    try{\n        payload[item.KEY]=JSON.parse(item.VALUE);\n    }catch(err){\n        payload[item.KEY]=item.VALUE;\n    }\n});\n\nif(msg.req.query.configStatus){\n    var configStatus= {\n        'b1-sl-config':true,\n        'mail-config':true,\n        'hana-db-connection':true,\n        'warnings':0\n    };\n    \n    var b1_sl_config=['SLD_AccessURL'],\n        mail_config=['userid','password','from','host','port','portal_url','to'],\n        hana_db_connection=['userName','password','server','port','dedicated_config_override'];\n        for(var item of b1_sl_config){\n            if(!payload['b1-sl-config'][item]){\n                configStatus['b1-sl-config']=false;\n                configStatus['warnings']+=1;\n                break;\n            }\n        }\n        for(item of mail_config){\n            if(!payload['mail-config'][item]){\n                configStatus['mail-config']=false;\n                configStatus['warnings']+=1;\n                break;\n            }\n        }\n        for(item of hana_db_connection){\n            if(!payload['hana-db-connection'][item]){\n                configStatus['hana-db-connection']=false;\n                configStatus['warnings']+=1;\n                break;\n            }\n        }\n        msg.payload=configStatus;\n        return msg;\n}\n\nmsg.payload=payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 260,
        "wires": [
            [
                "05d59afb55b8a841",
                "5a8b30c53e11cbd7"
            ]
        ]
    },
    {
        "id": "5a8b30c53e11cbd7",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 990,
        "y": 240,
        "wires": []
    },
    {
        "id": "8179ee81a1197397",
        "type": "sqlite",
        "z": "97998734b41b7fbf",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 660,
        "y": 260,
        "wires": [
            [
                "05d5a188d66d47d5"
            ]
        ]
    },
    {
        "id": "95dbb7b6f29d166c",
        "type": "function",
        "z": "97998734b41b7fbf",
        "name": "SQL",
        "func": "\nmsg.topic = `\nSELECT * FROM ENT_CONFIG;   \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 180,
        "wires": [
            [
                "8179ee81a1197397"
            ]
        ]
    },
    {
        "id": "4551d3240a1d3737",
        "type": "sqlite",
        "z": "97998734b41b7fbf",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 700,
        "y": 400,
        "wires": [
            [
                "fba2e8bb5bd6d383"
            ]
        ]
    },
    {
        "id": "ca4d8cc4753bb6b0",
        "type": "function",
        "z": "97998734b41b7fbf",
        "name": "",
        "func": "\n\n\nmsg.topic = `UPDATE ENT_CONFIG SET VALUE = '${JSON.stringify(msg.req.body)}'  WHERE KEY ='b1-sl-config'`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 340,
        "wires": [
            [
                "4551d3240a1d3737",
                "e070879b0528fd07"
            ]
        ]
    },
    {
        "id": "751c7d72488537e6",
        "type": "sqlite",
        "z": "97998734b41b7fbf",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 740,
        "y": 520,
        "wires": [
            [
                "1a6880834dc708cd"
            ]
        ]
    },
    {
        "id": "b1479c3144e06d17",
        "type": "function",
        "z": "97998734b41b7fbf",
        "name": "",
        "func": "msg.topic = `UPDATE ENT_CONFIG SET VALUE = '${JSON.stringify(msg.req.body)}'  WHERE KEY ='hana-db-connection'`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 420,
        "wires": [
            [
                "751c7d72488537e6"
            ]
        ]
    },
    {
        "id": "d760789314302479",
        "type": "sqlite",
        "z": "97998734b41b7fbf",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 740,
        "y": 600,
        "wires": [
            [
                "16940cabdf4f2e95"
            ]
        ]
    },
    {
        "id": "157075f302b83605",
        "type": "function",
        "z": "97998734b41b7fbf",
        "name": "",
        "func": "\nmsg.topic = `UPDATE ENT_CONFIG SET VALUE = '${JSON.stringify(msg.req.body)}'  WHERE KEY ='mail-config'`;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 520,
        "wires": [
            [
                "d760789314302479"
            ]
        ]
    },
    {
        "id": "fba2e8bb5bd6d383",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 400,
        "wires": []
    },
    {
        "id": "1a6880834dc708cd",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 520,
        "wires": []
    },
    {
        "id": "16940cabdf4f2e95",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 600,
        "wires": []
    },
    {
        "id": "e070879b0528fd07",
        "type": "debug",
        "z": "97998734b41b7fbf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 340,
        "wires": []
    },
    {
        "id": "2d1a8b307478bf25",
        "type": "subflow:7ee266ca63cceab4",
        "z": "97998734b41b7fbf",
        "name": "",
        "x": 560,
        "y": 60,
        "wires": [
            [
                "0615a264e25b0218"
            ]
        ]
    },
    {
        "id": "bc749a24333e3d7b",
        "type": "http in",
        "z": "97998734b41b7fbf",
        "name": "b1sUrl",
        "url": "/api/b1sUrl",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "4aa524244e345531"
            ]
        ]
    },
    {
        "id": "5c91e3ffcb5218ba",
        "type": "http in",
        "z": "97998734b41b7fbf",
        "name": "config",
        "url": "/api/config",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "387748e49cb8a627"
            ]
        ]
    },
    {
        "id": "287fa093b4e4ee68",
        "type": "http in",
        "z": "97998734b41b7fbf",
        "name": "[]POST]b1SLConfig",
        "url": "api/b1SLConfig",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 360,
        "wires": [
            [
                "2c21b9da7d964e2e"
            ]
        ]
    },
    {
        "id": "9cae1c53930af19b",
        "type": "http in",
        "z": "97998734b41b7fbf",
        "name": "[]POST]hanaDBConfig",
        "url": "api/hanaDBConfig",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 440,
        "wires": [
            [
                "96f4146a50797d06"
            ]
        ]
    },
    {
        "id": "82d5a5b51b7e46c9",
        "type": "http in",
        "z": "97998734b41b7fbf",
        "name": "[]POST]mailConfig",
        "url": "api/mailConfig",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 540,
        "wires": [
            [
                "ad159fe4b1c51865"
            ]
        ]
    },
    {
        "id": "a59126e6acb884c1",
        "type": "function",
        "z": "97998734b41b7fbf",
        "name": "testHanaDB",
        "func": "\nmsg.configOverrideHana = msg.flowInfo.config['hana-db-connection'];\n// msg.configOverrideHana.database='SLDDATA';\n\nmsg.flowInfo.sql = 'select 1 from dummy';\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 860,
        "wires": [
            [
                "fb0cebf4b12e8b05"
            ]
        ]
    },
    {
        "id": "5db1116ad0198ccc",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 840,
        "wires": []
    },
    {
        "id": "851497fe69cbebfc",
        "type": "http in",
        "z": "97998734b41b7fbf",
        "name": "[]GET]testHanaDB",
        "url": "api/testHanaDB",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "5082aa3d2b07d431"
            ]
        ]
    },
    {
        "id": "5696e1f4977354be",
        "type": "subflow:7ee266ca63cceab4",
        "z": "97998734b41b7fbf",
        "name": "",
        "x": 560,
        "y": 800,
        "wires": [
            [
                "a59126e6acb884c1"
            ]
        ]
    },
    {
        "id": "fb0cebf4b12e8b05",
        "type": "HanaClient-request",
        "z": "97998734b41b7fbf",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 730,
        "y": 860,
        "wires": [
            [
                "5db1116ad0198ccc"
            ],
            [
                "c37ed61a5da29e53"
            ]
        ]
    },
    {
        "id": "c37ed61a5da29e53",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 900,
        "y": 880,
        "wires": []
    },
    {
        "id": "52d6039141e1e8e7",
        "type": "function",
        "z": "97998734b41b7fbf",
        "name": "testServiceLayer",
        "func": "\nmsg.configOverride = msg.flowInfo.config['b1-sl-config'];\nmsg.url = msg.flowInfo.config['b1-sl-config'].serviceLayerUrl.split('b1s')[0];\nmsg.rejectUnauthorized=false;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 960,
        "wires": [
            [
                "f99680989059f9d5"
            ]
        ]
    },
    {
        "id": "1ec09b7ead222171",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1130,
        "y": 960,
        "wires": []
    },
    {
        "id": "280d51984dfabade",
        "type": "http in",
        "z": "97998734b41b7fbf",
        "name": "[]GET]testServiceLayer",
        "url": "api/testServiceLayer",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 960,
        "wires": [
            [
                "8d7723fa9db55319"
            ]
        ]
    },
    {
        "id": "38a56f8daae3c2af",
        "type": "subflow:7ee266ca63cceab4",
        "z": "97998734b41b7fbf",
        "name": "",
        "x": 620,
        "y": 920,
        "wires": [
            [
                "52d6039141e1e8e7"
            ]
        ]
    },
    {
        "id": "908cf42f167e49fe",
        "type": "function",
        "z": "97998734b41b7fbf",
        "name": "testMailService",
        "func": "\nconst {userid, from, password, host, port, tls, secure, portal_url, to} = msg.flowInfo.config['mail-config'];\n\nmsg.userid = userid;\nmsg.password = password;\nmsg.from = from;\nmsg.host = host;\nmsg.port = port;\nmsg.tls = tls;\nmsg.secure = secure;\nmsg.to = to;\nmsg.topic = 'B1 System Management';//msg.req.body.emailTitle;\nmsg.payload = \"Test E-Mail\";//msg.req.body.mailBody\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1040,
        "wires": [
            [
                "4297c8089091f8c2"
            ]
        ]
    },
    {
        "id": "1840c53e38237299",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 1040,
        "wires": []
    },
    {
        "id": "596396bb809aaaf6",
        "type": "http in",
        "z": "97998734b41b7fbf",
        "name": "[]GET]testMailService",
        "url": "api/testMailService",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1040,
        "wires": [
            [
                "8cf3ff12253c5ef6"
            ]
        ]
    },
    {
        "id": "8cf3ff12253c5ef6",
        "type": "subflow:7ee266ca63cceab4",
        "z": "97998734b41b7fbf",
        "name": "",
        "x": 420,
        "y": 1040,
        "wires": [
            [
                "908cf42f167e49fe"
            ]
        ]
    },
    {
        "id": "4297c8089091f8c2",
        "type": "e-mail",
        "z": "97998734b41b7fbf",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 770,
        "y": 1040,
        "wires": [
            [
                "1840c53e38237299",
                "e479c7e5b26f3f9f"
            ],
            [
                "1840c53e38237299"
            ]
        ]
    },
    {
        "id": "4aa524244e345531",
        "type": "subflow:19a1d236fd159ab3",
        "z": "97998734b41b7fbf",
        "name": "",
        "x": 300,
        "y": 60,
        "wires": [
            [
                "2d1a8b307478bf25"
            ],
            [
                "c116877f63d4d840"
            ]
        ]
    },
    {
        "id": "c116877f63d4d840",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 310,
        "y": 100,
        "wires": []
    },
    {
        "id": "387748e49cb8a627",
        "type": "subflow:19a1d236fd159ab3",
        "z": "97998734b41b7fbf",
        "name": "",
        "x": 300,
        "y": 200,
        "wires": [
            [
                "95dbb7b6f29d166c"
            ],
            [
                "9bfeb566a52165f5"
            ]
        ]
    },
    {
        "id": "9bfeb566a52165f5",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 278,
        "y": 241,
        "wires": []
    },
    {
        "id": "2c21b9da7d964e2e",
        "type": "subflow:19a1d236fd159ab3",
        "z": "97998734b41b7fbf",
        "name": "",
        "x": 340,
        "y": 360,
        "wires": [
            [
                "ca4d8cc4753bb6b0"
            ],
            [
                "620dee79e3a424ab"
            ]
        ]
    },
    {
        "id": "620dee79e3a424ab",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 350,
        "y": 400,
        "wires": []
    },
    {
        "id": "96f4146a50797d06",
        "type": "subflow:19a1d236fd159ab3",
        "z": "97998734b41b7fbf",
        "name": "",
        "x": 400,
        "y": 440,
        "wires": [
            [
                "b1479c3144e06d17"
            ],
            [
                "50684f8b584a8fe1"
            ]
        ]
    },
    {
        "id": "50684f8b584a8fe1",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 399,
        "y": 481,
        "wires": []
    },
    {
        "id": "ad159fe4b1c51865",
        "type": "subflow:19a1d236fd159ab3",
        "z": "97998734b41b7fbf",
        "name": "",
        "x": 360,
        "y": 540,
        "wires": [
            [
                "157075f302b83605"
            ],
            [
                "a35e33bd1abfa7ed"
            ]
        ]
    },
    {
        "id": "a35e33bd1abfa7ed",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 370,
        "y": 580,
        "wires": []
    },
    {
        "id": "5082aa3d2b07d431",
        "type": "subflow:19a1d236fd159ab3",
        "z": "97998734b41b7fbf",
        "name": "",
        "x": 360,
        "y": 800,
        "wires": [
            [
                "5696e1f4977354be"
            ],
            [
                "669ec304849539b5"
            ]
        ]
    },
    {
        "id": "669ec304849539b5",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 339,
        "y": 841,
        "wires": []
    },
    {
        "id": "8d7723fa9db55319",
        "type": "subflow:19a1d236fd159ab3",
        "z": "97998734b41b7fbf",
        "name": "",
        "x": 400,
        "y": 960,
        "wires": [
            [
                "38a56f8daae3c2af"
            ],
            [
                "92e05104c8ea9968"
            ]
        ]
    },
    {
        "id": "92e05104c8ea9968",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 349,
        "y": 1001,
        "wires": []
    },
    {
        "id": "a98cb23422a81f49",
        "type": "function",
        "z": "97998734b41b7fbf",
        "name": "testHanaDB",
        "func": "\nmsg.configOverrideHana = msg.req.body;//msg.flowInfo.config['hana-db-connection'];\n// msg.configOverrideHana.database='SLDDATA';\nif(!msg.flowInfo){\n    msg.flowInfo = {};\n}\n\nmsg.flowInfo.sql = 'select 1 from dummy';\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1420,
        "wires": [
            [
                "9654c40c366fa6f3"
            ]
        ]
    },
    {
        "id": "5396ece15196781d",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1030,
        "y": 1400,
        "wires": []
    },
    {
        "id": "99e808b8abecb37e",
        "type": "http in",
        "z": "97998734b41b7fbf",
        "name": "[POST]validateHanaDBConfig",
        "url": "api/validateHanaDBConfig",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "6bec10e4deba6284"
            ]
        ]
    },
    {
        "id": "9654c40c366fa6f3",
        "type": "HanaClient-request",
        "z": "97998734b41b7fbf",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 870,
        "y": 1420,
        "wires": [
            [
                "5396ece15196781d"
            ],
            [
                "4ce9d430319012a1"
            ]
        ]
    },
    {
        "id": "4ce9d430319012a1",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 1040,
        "y": 1440,
        "wires": []
    },
    {
        "id": "6bec10e4deba6284",
        "type": "subflow:19a1d236fd159ab3",
        "z": "97998734b41b7fbf",
        "name": "",
        "x": 460,
        "y": 1360,
        "wires": [
            [
                "61254f662384b75b"
            ],
            [
                "7afddeb6a3799c42"
            ]
        ]
    },
    {
        "id": "7afddeb6a3799c42",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 510,
        "y": 1420,
        "wires": []
    },
    {
        "id": "5d9c735f1d424eb3",
        "type": "debug",
        "z": "97998734b41b7fbf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 1600,
        "wires": []
    },
    {
        "id": "798da85ea14bd909",
        "type": "function",
        "z": "97998734b41b7fbf",
        "name": "",
        "func": "var payload={};\n\nmsg.payload.forEach(item=>{\n    try{\n        payload[item.KEY]=JSON.parse(item.VALUE);\n    }catch(err){\n        payload[item.KEY]=item.VALUE;\n    }\n});\n\nvar configStatus= {\n    'b1-sl-config':true,\n    'mail-config':true,\n    'hana-db-connection':true,\n    'warnings':0\n};\n    \n    var b1_sl_config=['SLD_AccessURL'],\n    mail_config=['userid','password','from','host','port','portal_url','to'],\n    hana_db_connection=['userName','password','server','port','dedicated_config_override'];\n    for(var item of b1_sl_config){\n        if(!payload['b1-sl-config'][item]){\n            configStatus['b1-sl-config']=false;\n            configStatus['warnings']+=1;\n            break;\n        }\n    }\n    for(item of mail_config){\n        if(!payload['mail-config'][item]){\n            configStatus['mail-config']=false;\n            configStatus['warnings']+=1;\n            break;\n        }\n    }\n    for(item of hana_db_connection){\n        if(!payload['hana-db-connection'][item]){\n            configStatus['hana-db-connection']=false;\n            configStatus['warnings']+=1;\n            break;\n        }\n    }\n    msg.payload=configStatus;\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1580,
        "wires": [
            [
                "5d9c735f1d424eb3",
                "14f96b957272fcbe"
            ]
        ]
    },
    {
        "id": "14f96b957272fcbe",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 990,
        "y": 1560,
        "wires": []
    },
    {
        "id": "3d6c2b273dffc58b",
        "type": "sqlite",
        "z": "97998734b41b7fbf",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 660,
        "y": 1580,
        "wires": [
            [
                "798da85ea14bd909"
            ]
        ]
    },
    {
        "id": "7bc92b3f62d7f568",
        "type": "function",
        "z": "97998734b41b7fbf",
        "name": "SQL",
        "func": "\nmsg.topic = `\nSELECT * FROM ENT_CONFIG;   \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1500,
        "wires": [
            [
                "3d6c2b273dffc58b"
            ]
        ]
    },
    {
        "id": "0dcd5b1f1e9085bf",
        "type": "http in",
        "z": "97998734b41b7fbf",
        "name": "configStatus",
        "url": "/api/configStatus",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1520,
        "wires": [
            [
                "d735c6bd059cabe4"
            ]
        ]
    },
    {
        "id": "d735c6bd059cabe4",
        "type": "subflow:19a1d236fd159ab3",
        "z": "97998734b41b7fbf",
        "name": "",
        "x": 300,
        "y": 1520,
        "wires": [
            [
                "7bc92b3f62d7f568"
            ],
            [
                "a4811a906860d21e",
                "d054e3f02a2cc8cf"
            ]
        ]
    },
    {
        "id": "a4811a906860d21e",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 278,
        "y": 1561,
        "wires": []
    },
    {
        "id": "f99680989059f9d5",
        "type": "http request",
        "z": "97998734b41b7fbf",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 950,
        "y": 960,
        "wires": [
            [
                "1ec09b7ead222171"
            ]
        ]
    },
    {
        "id": "5d560d6d3ff00068",
        "type": "function",
        "z": "97998734b41b7fbf",
        "name": "testServiceLayer",
        "func": "\n// msg.configOverride = msg.req.body;\nmsg.url = msg.req.body.serviceLayerUrl.split('b1s')[0];\nmsg.rejectUnauthorized=false;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1700,
        "wires": [
            [
                "42e7e37d9b3dcb8f"
            ]
        ]
    },
    {
        "id": "0ccec81212472ca1",
        "type": "http in",
        "z": "97998734b41b7fbf",
        "name": "[POST]validateServiceLayer",
        "url": "api/validateServiceLayer",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 1720,
        "wires": [
            [
                "0fc9d6a6737550f4"
            ]
        ]
    },
    {
        "id": "0fc9d6a6737550f4",
        "type": "subflow:19a1d236fd159ab3",
        "z": "97998734b41b7fbf",
        "name": "",
        "x": 400,
        "y": 1720,
        "wires": [
            [
                "5d560d6d3ff00068"
            ],
            [
                "681d3b5ebe5f179c"
            ]
        ]
    },
    {
        "id": "681d3b5ebe5f179c",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 349,
        "y": 1761,
        "wires": []
    },
    {
        "id": "42e7e37d9b3dcb8f",
        "type": "http request",
        "z": "97998734b41b7fbf",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 710,
        "y": 1760,
        "wires": [
            [
                "1a7db270d1b3ab31"
            ]
        ]
    },
    {
        "id": "1a7db270d1b3ab31",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 1760,
        "wires": []
    },
    {
        "id": "ef191bce85837024",
        "type": "catch",
        "z": "97998734b41b7fbf",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 120,
        "y": 1940,
        "wires": [
            [
                "abde85c8ef58cce4",
                "eca4e8b873443880"
            ]
        ]
    },
    {
        "id": "abde85c8ef58cce4",
        "type": "debug",
        "z": "97998734b41b7fbf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 1940,
        "wires": []
    },
    {
        "id": "08e0044250fa1e25",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 480,
        "y": 1900,
        "wires": []
    },
    {
        "id": "eca4e8b873443880",
        "type": "function",
        "z": "97998734b41b7fbf",
        "name": "",
        "func": "msg.payload = msg.error;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1900,
        "wires": [
            [
                "08e0044250fa1e25"
            ]
        ]
    },
    {
        "id": "61254f662384b75b",
        "type": "subflow:7ee266ca63cceab4",
        "z": "97998734b41b7fbf",
        "name": "",
        "env": [
            {
                "name": "b1-sl-config",
                "type": "bool",
                "value": "false"
            }
        ],
        "x": 680,
        "y": 1360,
        "wires": [
            [
                "a98cb23422a81f49"
            ]
        ]
    },
    {
        "id": "d054e3f02a2cc8cf",
        "type": "debug",
        "z": "97998734b41b7fbf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 444,
        "y": 1549.5999755859375,
        "wires": []
    },
    {
        "id": "e479c7e5b26f3f9f",
        "type": "debug",
        "z": "97998734b41b7fbf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 1020,
        "wires": []
    },
    {
        "id": "5db5ff916dc753a4",
        "type": "function",
        "z": "97998734b41b7fbf",
        "name": "testMailService",
        "func": "\nconst {userid, from, password, host, port, tls, secure, portal_url, to} = msg.req.body;\n\nmsg.userid = userid;\nmsg.password = password;\nmsg.from = from;\nmsg.host = host;\nmsg.port = port;\nmsg.tls = tls;\nmsg.secure = secure;\nmsg.to = to;\nmsg.topic = 'B1 System Management';//msg.req.body.emailTitle;\nmsg.payload = \"Test E-Mail\";//msg.req.body.mailBody\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1120,
        "wires": [
            [
                "91ab6b0ab33fd8de"
            ]
        ]
    },
    {
        "id": "03e5777c818fca7c",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 1100,
        "wires": []
    },
    {
        "id": "af50b57eb4c5a302",
        "type": "http in",
        "z": "97998734b41b7fbf",
        "name": "[POST]validateMailService",
        "url": "api/validateMailService",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1120,
        "wires": [
            [
                "2168512c3829eda6"
            ]
        ]
    },
    {
        "id": "91ab6b0ab33fd8de",
        "type": "e-mail",
        "z": "97998734b41b7fbf",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 770,
        "y": 1120,
        "wires": [
            [
                "03e5777c818fca7c",
                "a4537198d7b872dd"
            ],
            [
                "a4537198d7b872dd",
                "f50bd8de933a6660"
            ]
        ]
    },
    {
        "id": "a4537198d7b872dd",
        "type": "debug",
        "z": "97998734b41b7fbf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 1120,
        "wires": []
    },
    {
        "id": "2168512c3829eda6",
        "type": "subflow:19a1d236fd159ab3",
        "z": "97998734b41b7fbf",
        "name": "",
        "x": 400,
        "y": 1140,
        "wires": [
            [
                "5db5ff916dc753a4"
            ],
            [
                "1ca9670646836d88"
            ]
        ]
    },
    {
        "id": "1ca9670646836d88",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 570,
        "y": 1160,
        "wires": []
    },
    {
        "id": "f50bd8de933a6660",
        "type": "http response",
        "z": "97998734b41b7fbf",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 1140,
        "wires": []
    },
    {
        "id": "977f72e6e9822fac",
        "type": "sqlite",
        "z": "680f23997f7dfd3d",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 740,
        "y": 80,
        "wires": [
            [
                "5982c849d993f066"
            ]
        ]
    },
    {
        "id": "b44600a64ebcf3c5",
        "type": "function",
        "z": "680f23997f7dfd3d",
        "name": "",
        "func": "\nmsg.topic = `UPDATE ENT_CONFIG SET VALUE = '${JSON.stringify(msg.req.body)}'  WHERE KEY ='security'`;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 80,
        "wires": [
            [
                "977f72e6e9822fac"
            ]
        ]
    },
    {
        "id": "5982c849d993f066",
        "type": "http response",
        "z": "680f23997f7dfd3d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 770,
        "y": 140,
        "wires": []
    },
    {
        "id": "a4ac74d843dec42c",
        "type": "http in",
        "z": "680f23997f7dfd3d",
        "name": "[]POST]security",
        "url": "api/security",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "78ab9149f28c819c"
            ]
        ]
    },
    {
        "id": "78ab9149f28c819c",
        "type": "subflow:19a1d236fd159ab3",
        "z": "680f23997f7dfd3d",
        "name": "",
        "x": 360,
        "y": 100,
        "wires": [
            [
                "b44600a64ebcf3c5"
            ],
            [
                "95725f4ea2173b70"
            ]
        ]
    },
    {
        "id": "95725f4ea2173b70",
        "type": "http response",
        "z": "680f23997f7dfd3d",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 370,
        "y": 140,
        "wires": []
    },
    {
        "id": "716ed5af4e965af1",
        "type": "sqlite",
        "z": "680f23997f7dfd3d",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 760,
        "y": 240,
        "wires": [
            [
                "122bb33e9ab2a814"
            ]
        ]
    },
    {
        "id": "e44655efa9d3ee80",
        "type": "function",
        "z": "680f23997f7dfd3d",
        "name": "",
        "func": "msg.payload=msg.req.body;\nfunction uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n     });\n}\n\nfunction getBody(agg,item){\n    return agg + (agg === ''?'' : ',') +`('${item.USER_ID ? item.USER_ID : uuidv4()}','Admin', '${item.USERNAME}', 'ADMIN', '${item.PASSWORD}', 'N', datetime('now', 'localtime'))`;\n}\n\nconst sqlBody = msg.payload.upsert.reduce(getBody,'');\n\nmsg.topic=`\n    INSERT INTO ENT_USERS (USER_ID, NAME, USERNAME, ROLE, PASSWORD, BLOCKED, CREATED_ON)\n      VALUES ${sqlBody}\n      ON CONFLICT(USER_ID) DO UPDATE SET\n        USERNAME=excluded.USERNAME,\n        PASSWORD=excluded.PASSWORD\n`;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 240,
        "wires": [
            [
                "f16fa67d604e12d4",
                "716ed5af4e965af1"
            ]
        ]
    },
    {
        "id": "ba59d63a7983b2ec",
        "type": "http response",
        "z": "680f23997f7dfd3d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 770,
        "y": 360,
        "wires": []
    },
    {
        "id": "d907784957ab5e84",
        "type": "http in",
        "z": "680f23997f7dfd3d",
        "name": "[]POST]users",
        "url": "api/users",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "e59b3c25e78bcfc2"
            ]
        ]
    },
    {
        "id": "e59b3c25e78bcfc2",
        "type": "subflow:19a1d236fd159ab3",
        "z": "680f23997f7dfd3d",
        "name": "",
        "x": 360,
        "y": 260,
        "wires": [
            [
                "e44655efa9d3ee80"
            ],
            [
                "de9b8edc1d2a0fae"
            ]
        ]
    },
    {
        "id": "de9b8edc1d2a0fae",
        "type": "http response",
        "z": "680f23997f7dfd3d",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 410,
        "y": 320,
        "wires": []
    },
    {
        "id": "5ce2e590f1a4ff49",
        "type": "subflow:5ddb2001.76d37",
        "z": "680f23997f7dfd3d",
        "name": "",
        "env": [
            {
                "name": "inputVarName",
                "value": "payload",
                "type": "str"
            },
            {
                "name": "currentObjectName",
                "value": "user",
                "type": "str"
            }
        ],
        "x": 490,
        "y": 760,
        "wires": [
            [
                "c3ccdd423f7d5a20",
                "1b02f92e6ca48963"
            ],
            [
                "2c2341967dc37037"
            ]
        ]
    },
    {
        "id": "4f1ca8bf612d36b4",
        "type": "sqlite",
        "z": "680f23997f7dfd3d",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 520,
        "y": 880,
        "wires": [
            [
                "2702f84a212236c4"
            ]
        ]
    },
    {
        "id": "2e56ea2b3a9e549e",
        "type": "function",
        "z": "680f23997f7dfd3d",
        "name": "",
        "func": "\nmsg.topic = `DELETE FROM ENT_USERS WHERE USER_ID = '5626607f-e21d-4c45-a22c-cd7e8205940e'`;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 880,
        "wires": [
            [
                "4f1ca8bf612d36b4"
            ]
        ]
    },
    {
        "id": "2a95516d2b86aa20",
        "type": "inject",
        "z": "680f23997f7dfd3d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 880,
        "wires": [
            [
                "2e56ea2b3a9e549e"
            ]
        ]
    },
    {
        "id": "2702f84a212236c4",
        "type": "debug",
        "z": "680f23997f7dfd3d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 880,
        "wires": []
    },
    {
        "id": "c3ccdd423f7d5a20",
        "type": "function",
        "z": "680f23997f7dfd3d",
        "name": "",
        "func": "function uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n     });\n}\n\nconst {USER_ID, USERNAME, PASSWORD} = msg.user;\nif(USER_ID){\n    msg.topic += `UPDATE ENT_USERS SET USERNAME = '${USERNAME}', PASSWORD = '${PASSWORD}'  WHERE USER_ID ='${msg.user.USER_ID}'; `;\n}else{\n    const ID = uuidv4();\n    msg.topic += `INSERT INTO ENT_USERS (USER_ID, NAME, USERNAME, ROLE, PASSWORD, BLOCKED, CREATED_ON)\n            VALUES ('${ID}','Admin', '${USERNAME}', 'ADMIN', '${PASSWORD}', 'N', datetime('now', 'localtime'));`;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 740,
        "wires": [
            [
                "5ce2e590f1a4ff49"
            ]
        ]
    },
    {
        "id": "2c2341967dc37037",
        "type": "debug",
        "z": "680f23997f7dfd3d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 780,
        "wires": []
    },
    {
        "id": "1b02f92e6ca48963",
        "type": "debug",
        "z": "680f23997f7dfd3d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 740,
        "wires": []
    },
    {
        "id": "564e26aabdfe0e13",
        "type": "debug",
        "z": "680f23997f7dfd3d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 360,
        "wires": []
    },
    {
        "id": "f16fa67d604e12d4",
        "type": "debug",
        "z": "680f23997f7dfd3d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 220,
        "wires": []
    },
    {
        "id": "f4061b5485194ab3",
        "type": "catch",
        "z": "680f23997f7dfd3d",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 120,
        "y": 680,
        "wires": [
            [
                "9c7b073801446d8a",
                "851b9c372ba69e2b"
            ]
        ]
    },
    {
        "id": "9c7b073801446d8a",
        "type": "debug",
        "z": "680f23997f7dfd3d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 660,
        "wires": []
    },
    {
        "id": "844dad69c056daeb",
        "type": "http response",
        "z": "680f23997f7dfd3d",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 440,
        "y": 700,
        "wires": []
    },
    {
        "id": "851b9c372ba69e2b",
        "type": "function",
        "z": "680f23997f7dfd3d",
        "name": "",
        "func": "msg.payload=msg.error;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 700,
        "wires": [
            [
                "844dad69c056daeb"
            ]
        ]
    },
    {
        "id": "7e5a7676a2a54d32",
        "type": "sqlite",
        "z": "680f23997f7dfd3d",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 740,
        "y": 500,
        "wires": [
            [
                "8c5bc3d1c5fcbb8e"
            ]
        ]
    },
    {
        "id": "167601b233c0fcbd",
        "type": "function",
        "z": "680f23997f7dfd3d",
        "name": "",
        "func": "msg.payload=msg.req.body;\nfunction uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n     });\n}\n\nfunction getBody(agg,item){\n    return agg + (agg === ''?'' : ',') +`('${item.SERVER_ID ? item.SERVER_ID : uuidv4()}','${item.HOSTNAME}', ${item.PORT}, '${item.USERNAME}', '${item.PASSWORD}', datetime('now', 'localtime'))`;\n}\n\nconst sqlBody = msg.payload.upsert.reduce(getBody,'');\n\nmsg.topic=`\n    INSERT INTO ENT_SERVERS (SERVER_ID, HOSTNAME, PORT, USERNAME, PASSWORD, CREATED_ON)\n      VALUES ${sqlBody}\n      ON CONFLICT(SERVER_ID) DO UPDATE SET\n        HOSTNAME=excluded.HOSTNAME,\n        PORT=excluded.PORT,\n        USERNAME=excluded.USERNAME,\n        PASSWORD=excluded.PASSWORD\n`;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 500,
        "wires": [
            [
                "6b755bc58d6d62ad",
                "7e5a7676a2a54d32"
            ]
        ]
    },
    {
        "id": "28ba59d5bb5427a9",
        "type": "http in",
        "z": "680f23997f7dfd3d",
        "name": "[]POST]servers",
        "url": "api/servers",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 520,
        "wires": [
            [
                "b20ba11e5d06c294"
            ]
        ]
    },
    {
        "id": "b20ba11e5d06c294",
        "type": "subflow:19a1d236fd159ab3",
        "z": "680f23997f7dfd3d",
        "name": "",
        "x": 360,
        "y": 520,
        "wires": [
            [
                "167601b233c0fcbd"
            ],
            [
                "867b1ff3b45ce285"
            ]
        ]
    },
    {
        "id": "867b1ff3b45ce285",
        "type": "http response",
        "z": "680f23997f7dfd3d",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 410,
        "y": 580,
        "wires": []
    },
    {
        "id": "6b755bc58d6d62ad",
        "type": "debug",
        "z": "680f23997f7dfd3d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 480,
        "wires": []
    },
    {
        "id": "122bb33e9ab2a814",
        "type": "function",
        "z": "680f23997f7dfd3d",
        "name": "",
        "func": "if( msg.req.body.delete.length){\n    msg.topic =  \"DELETE FROM ENT_USERS WHERE USER_ID = '\"+ msg.req.body.delete.join(\"' OR \") + \"' ;\"\n    return [msg, null];\n}else{\n    return [null, msg];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 320,
        "wires": [
            [
                "9ff03aaa346d763a"
            ],
            [
                "ba59d63a7983b2ec"
            ]
        ]
    },
    {
        "id": "9ff03aaa346d763a",
        "type": "sqlite",
        "z": "680f23997f7dfd3d",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 800,
        "y": 280,
        "wires": [
            [
                "ba59d63a7983b2ec",
                "564e26aabdfe0e13"
            ]
        ]
    },
    {
        "id": "c0124f24c22b2e38",
        "type": "http response",
        "z": "680f23997f7dfd3d",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 620,
        "wires": []
    },
    {
        "id": "d855f0d0cd26f586",
        "type": "debug",
        "z": "680f23997f7dfd3d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 580,
        "wires": []
    },
    {
        "id": "8c5bc3d1c5fcbb8e",
        "type": "function",
        "z": "680f23997f7dfd3d",
        "name": "",
        "func": "if( msg.req.body.delete.length){\n    msg.topic =  \"DELETE FROM ENT_SERVERS WHERE SERVER_ID = '\"+ msg.req.body.delete.join(\"' OR \") + \"' ;\"\n    return [msg, null];\n}else{\n    return [null, msg];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 580,
        "wires": [
            [
                "442d57349fbf7bf7"
            ],
            [
                "c0124f24c22b2e38"
            ]
        ]
    },
    {
        "id": "442d57349fbf7bf7",
        "type": "sqlite",
        "z": "680f23997f7dfd3d",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 820,
        "y": 540,
        "wires": [
            [
                "c0124f24c22b2e38",
                "d855f0d0cd26f586"
            ]
        ]
    },
    {
        "id": "58aefd70addf248c",
        "type": "function",
        "z": "c9017f4194923110",
        "name": "SBOCOMMON.SRGC",
        "func": "\nmsg.schemaInfo = msg.payload;\nmsg.configOverrideHana = msg.flowInfo.config['hana-db-connection'];\n// msg.configOverrideHana.database='SLDDATA';\n\nmsg.flowInfo.sql =`\nSelect \"dbName\", \"cmpName\", \"versStr\", \"LOC\", \n    CASE \n        WHEN SUBSTR_REGEXPR('.*(TEST).*' IN \"cmpName\" GROUP 1) = 'TEST'  THEN 'TEST'\n        ELSE 'PROD' END\n        AS \"cmpType\",\n        '0. UNCONFIRMED' as \"typeSts\" from SBOCOMMON.SRGC\n`;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 160,
        "wires": [
            [
                "9e8dd2eb0f7dc819"
            ]
        ]
    },
    {
        "id": "d3bc26d51339a9b5",
        "type": "http response",
        "z": "c9017f4194923110",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 140,
        "wires": []
    },
    {
        "id": "9c75d88d9a8a1a42",
        "type": "http in",
        "z": "c9017f4194923110",
        "name": "[]GET]companies",
        "url": "api/companies",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "4364db228ee2b1e9"
            ]
        ]
    },
    {
        "id": "4cd2b7c933503a3b",
        "type": "subflow:7ee266ca63cceab4",
        "z": "c9017f4194923110",
        "name": "",
        "x": 540,
        "y": 100,
        "wires": [
            [
                "cb012dea096d62d1"
            ]
        ]
    },
    {
        "id": "9e8dd2eb0f7dc819",
        "type": "HanaClient-request",
        "z": "c9017f4194923110",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 670,
        "y": 160,
        "wires": [
            [
                "cf5f0be116863a87"
            ],
            [
                "12c7d9d70c20fde6"
            ]
        ]
    },
    {
        "id": "12c7d9d70c20fde6",
        "type": "http response",
        "z": "c9017f4194923110",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 840,
        "y": 180,
        "wires": []
    },
    {
        "id": "4364db228ee2b1e9",
        "type": "subflow:19a1d236fd159ab3",
        "z": "c9017f4194923110",
        "name": "",
        "x": 340,
        "y": 100,
        "wires": [
            [
                "4cd2b7c933503a3b"
            ],
            [
                "38aa667b10d0d085"
            ]
        ]
    },
    {
        "id": "38aa667b10d0d085",
        "type": "http response",
        "z": "c9017f4194923110",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 319,
        "y": 141,
        "wires": []
    },
    {
        "id": "3f6cbf23fd33b1e0",
        "type": "debug",
        "z": "c9017f4194923110",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 140,
        "wires": []
    },
    {
        "id": "1d625ccccdaf765a",
        "type": "function",
        "z": "c9017f4194923110",
        "name": "MEMORY_SIZE",
        "func": "\nmsg.configOverrideHana = msg.flowInfo.config['hana-db-connection'];\n// msg.configOverrideHana.database='SLDDATA';\n\nmsg.flowInfo.sql =`\nSELECT SCHEMA_NAME, ROUND(SUM (TABLE_SIZE)/1024/1024/1024,2) AS MEMORY_SIZE FROM M_TABLES\nWHERE (IS_COLUMN_TABLE = 'FALSE') OR (IS_COLUMN_TABLE = 'TRUE' AND (SCHEMA_NAME,TABLE_NAME) IN (SELECT DISTINCT SCHEMA_NAME,TABLE_NAME FROM SYS.M_CS_TABLES WHERE LOADED <> 'NO' ))\nAND SCHEMA_NAME IN (SELECT \"dbName\" FROM SBOCOMMON.SRGC)\nGROUP BY SCHEMA_NAME\n`;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 380,
        "wires": [
            [
                "8e158e401117350d"
            ]
        ]
    },
    {
        "id": "7976c3a9e2d6f612",
        "type": "http response",
        "z": "c9017f4194923110",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 360,
        "wires": []
    },
    {
        "id": "e7bbdefaa0f9905f",
        "type": "http in",
        "z": "c9017f4194923110",
        "name": "[]GET]memorySizes",
        "url": "api/memorySizes",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "e54705077eb3713d"
            ]
        ]
    },
    {
        "id": "78955713a518f552",
        "type": "subflow:7ee266ca63cceab4",
        "z": "c9017f4194923110",
        "name": "",
        "x": 540,
        "y": 320,
        "wires": [
            [
                "1d625ccccdaf765a"
            ]
        ]
    },
    {
        "id": "8e158e401117350d",
        "type": "HanaClient-request",
        "z": "c9017f4194923110",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 710,
        "y": 380,
        "wires": [
            [
                "6c2cd8bceed5611f"
            ],
            [
                "3f8236e5a1f3bd44"
            ]
        ]
    },
    {
        "id": "3f8236e5a1f3bd44",
        "type": "http response",
        "z": "c9017f4194923110",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 880,
        "y": 400,
        "wires": []
    },
    {
        "id": "e54705077eb3713d",
        "type": "subflow:19a1d236fd159ab3",
        "z": "c9017f4194923110",
        "name": "",
        "x": 340,
        "y": 320,
        "wires": [
            [
                "78955713a518f552"
            ],
            [
                "2139e0c829ffe97c"
            ]
        ]
    },
    {
        "id": "2139e0c829ffe97c",
        "type": "http response",
        "z": "c9017f4194923110",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 319,
        "y": 361,
        "wires": []
    },
    {
        "id": "8aed13d9c7241ee1",
        "type": "debug",
        "z": "c9017f4194923110",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 360,
        "wires": []
    },
    {
        "id": "c0b8a11eadcb903e",
        "type": "function",
        "z": "c9017f4194923110",
        "name": "DISK_SIZE",
        "func": "\nmsg.configOverrideHana = msg.flowInfo.config['hana-db-connection'];\n// msg.configOverrideHana.database='SLDDATA';\n\nmsg.flowInfo.sql =`\nSELECT\nSCHEMA_NAME, ROUND(SUM (DISK_SIZE)/1024/1024/1024,2) AS DISK_SIZE\nFROM PUBLIC.M_TABLE_PERSISTENCE_STATISTICS\nWHERE SCHEMA_NAME IN (SELECT \"dbName\" FROM SBOCOMMON.SRGC)\nGROUP BY SCHEMA_NAME\n`;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 500,
        "wires": [
            [
                "ca17dc35667d6729"
            ]
        ]
    },
    {
        "id": "9de3c2d8da8f63df",
        "type": "http response",
        "z": "c9017f4194923110",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 480,
        "wires": []
    },
    {
        "id": "c97ca18745c5e632",
        "type": "http in",
        "z": "c9017f4194923110",
        "name": "[]GET]diskSizes",
        "url": "api/diskSizes",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 440,
        "wires": [
            [
                "68dd2ac776bc7888"
            ]
        ]
    },
    {
        "id": "9edb071c16b0add4",
        "type": "subflow:7ee266ca63cceab4",
        "z": "c9017f4194923110",
        "name": "",
        "x": 540,
        "y": 440,
        "wires": [
            [
                "c0b8a11eadcb903e"
            ]
        ]
    },
    {
        "id": "ca17dc35667d6729",
        "type": "HanaClient-request",
        "z": "c9017f4194923110",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 710,
        "y": 500,
        "wires": [
            [
                "1a5ae2500a5896b2"
            ],
            [
                "06390c5b9d6a8925"
            ]
        ]
    },
    {
        "id": "06390c5b9d6a8925",
        "type": "http response",
        "z": "c9017f4194923110",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 920,
        "y": 520,
        "wires": []
    },
    {
        "id": "68dd2ac776bc7888",
        "type": "subflow:19a1d236fd159ab3",
        "z": "c9017f4194923110",
        "name": "",
        "x": 340,
        "y": 440,
        "wires": [
            [
                "9edb071c16b0add4"
            ],
            [
                "7c3e08c84f5fb58d"
            ]
        ]
    },
    {
        "id": "7c3e08c84f5fb58d",
        "type": "http response",
        "z": "c9017f4194923110",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 319,
        "y": 481,
        "wires": []
    },
    {
        "id": "1dba951c664fdbdd",
        "type": "debug",
        "z": "c9017f4194923110",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 480,
        "wires": []
    },
    {
        "id": "6c2cd8bceed5611f",
        "type": "function",
        "z": "c9017f4194923110",
        "name": "",
        "func": "var payload = {};\nmsg.payload.forEach(item=>{\n    payload[item.SCHEMA_NAME] = {\n        MEMORY_SIZE : parseFloat(parseFloat(item.MEMORY_SIZE).toFixed(2))\n    };\n});\nmsg.payload = payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 360,
        "wires": [
            [
                "8aed13d9c7241ee1",
                "7976c3a9e2d6f612"
            ]
        ]
    },
    {
        "id": "1a5ae2500a5896b2",
        "type": "function",
        "z": "c9017f4194923110",
        "name": "",
        "func": "var payload = {};\nmsg.payload.forEach(item=>{\n    payload[item.SCHEMA_NAME] = {\n        DISK_SIZE : parseFloat(parseFloat(item.DISK_SIZE).toFixed(2))\n    };\n});\nmsg.payload = payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 480,
        "wires": [
            [
                "9de3c2d8da8f63df",
                "1dba951c664fdbdd"
            ]
        ]
    },
    {
        "id": "34ca6876461c0d0a",
        "type": "sqlite",
        "z": "c9017f4194923110",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 740,
        "y": 600,
        "wires": [
            [
                "cbea74b9ac32b7d4",
                "b07e802b1dc32a05"
            ]
        ]
    },
    {
        "id": "569d955b15d3df0e",
        "type": "function",
        "z": "c9017f4194923110",
        "name": "",
        "func": "\nvar item=msg.req.body;\n\nfunction uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n     });\n}\n\n// function getBody(agg,item){\n//     return agg + (agg === ''?'' : ',') +`('${item.SCHEMA_INFO_ID ? item.SCHEMA_INFO_ID : uuidv4()}','${item.SCHEMA}', '${item.Y}', datetime('now', 'localtime'))`;\n// }\n\n// const sqlBody = msg.payload.upsert.reduce(getBody,'');\n\nmsg.topic=`\n    INSERT INTO ENT_SCHEMA_INFO (SCHEMA_INFO_ID, SCHEMA, TYPE, CREATED_ON)\n      VALUES ('${uuidv4()}', '${item.SCHEMA}', '${item.TYPE}', datetime('now', 'localtime'))\n      ON CONFLICT(SCHEMA) DO UPDATE SET\n        TYPE=excluded.TYPE\n`;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 600,
        "wires": [
            [
                "eb515511993484fc",
                "34ca6876461c0d0a"
            ]
        ]
    },
    {
        "id": "794d480a97f54c80",
        "type": "http in",
        "z": "c9017f4194923110",
        "name": "[]POST]SchemaInfo",
        "url": "api/updateTypeInfo",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 620,
        "wires": [
            [
                "c5fc084312b8ba36"
            ]
        ]
    },
    {
        "id": "c5fc084312b8ba36",
        "type": "subflow:19a1d236fd159ab3",
        "z": "c9017f4194923110",
        "name": "",
        "x": 340,
        "y": 620,
        "wires": [
            [
                "569d955b15d3df0e"
            ],
            [
                "895cb40100c7bad6"
            ]
        ]
    },
    {
        "id": "895cb40100c7bad6",
        "type": "http response",
        "z": "c9017f4194923110",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 390,
        "y": 680,
        "wires": []
    },
    {
        "id": "b07e802b1dc32a05",
        "type": "debug",
        "z": "c9017f4194923110",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 640,
        "wires": []
    },
    {
        "id": "eb515511993484fc",
        "type": "debug",
        "z": "c9017f4194923110",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 560,
        "wires": []
    },
    {
        "id": "cbea74b9ac32b7d4",
        "type": "http response",
        "z": "c9017f4194923110",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 600,
        "wires": []
    },
    {
        "id": "cf5f0be116863a87",
        "type": "function",
        "z": "c9017f4194923110",
        "name": "",
        "func": "\nfor(var i in msg.payload){\n    for(var sObj of msg.schemaInfo){\n        if(msg.payload[i].dbName === sObj.SCHEMA){\n            msg.payload[i].typeSts = sObj.TYPE==='PROD' ? '1. PROD' : sObj.TYPE==='TEST' ? '2. TEST' : '0.UNCONFIRMED';\n            msg.payload[i].versStr = parseFloat(msg.payload[i].versStr);\n            msg.payload[i].cmpType = sObj.TYPE;\n        }\n    }\n    // msg.payload[i].typeSts = 'UNCONFIRMED';\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 140,
        "wires": [
            [
                "d3bc26d51339a9b5",
                "3f6cbf23fd33b1e0"
            ]
        ]
    },
    {
        "id": "1e1dc55450df5797",
        "type": "sqlite",
        "z": "c9017f4194923110",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 860,
        "y": 100,
        "wires": [
            [
                "58aefd70addf248c"
            ]
        ]
    },
    {
        "id": "cb012dea096d62d1",
        "type": "function",
        "z": "c9017f4194923110",
        "name": "",
        "func": "\n\nmsg.topic=`\n    SELECT * FROM ENT_SCHEMA_INFO;\n`;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 100,
        "wires": [
            [
                "1e1dc55450df5797"
            ]
        ]
    },
    {
        "id": "170befd3bff487d8",
        "type": "function",
        "z": "dfb0188865563809",
        "name": "open session query",
        "func": "\nmsg.configOverrideHana = msg.flowInfo.config['hana-db-connection'];\n// msg.configOverrideHana.database='SLDDATA';\n\nconst {dbName} = msg.req.query;\n\nmsg.flowInfo.sql =`\nSELECT DISTINCT\n--CURRENT_SCHEMA_NAME, -- keep just for testing purposes\nC.CLIENT_HOST || ' - ' || C.CLIENT_IP AS CLIENT_HOST_IP, C.CLIENT_PID, C.LOGICAL_CONNECTION_ID AS SESSION_ID, C.START_TIME, ROUND(C.IDLE_TIME/1000/60,0) AS \"IDLETIME_MINUTES\"\n\n,coalesce((SELECT MAX(SC.VALUE) FROM M_SESSION_CONTEXT SC WHERE SC.HOST = C.HOST AND SC.PORT = C.PORT \nAND SC.CONNECTION_ID = C.CONNECTION_ID -- 2022.07.25 - Vlad with Yogi - sometimes it is not returning results ... to check when we have issues again\nAND SC.KEY = 'APPLICATION'),'unknown') AS \"CLIENT_OS_APPNAME\"\n,coalesce((SELECT MAX(SC.VALUE) FROM M_SESSION_CONTEXT SC WHERE SC.HOST = C.HOST AND SC.PORT = C.PORT AND SC.CONNECTION_ID = C.CONNECTION_ID \nAND SC.KEY = 'APPLICATIONUSER'),'unknown') AS \"CLIENT_OS_USER\"\n,C.USER_NAME AS \"DB_USER\"\n\nFROM M_CONNECTIONS C \nWHERE C.CONNECTION_ID >0 AND C.CURRENT_SCHEMA_NAME = '${dbName}'\nORDER BY ROUND(C.IDLE_TIME/1000/60,0)\n`;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 140,
        "wires": [
            [
                "7752c3e78fb333c0"
            ]
        ]
    },
    {
        "id": "827d435438603a2d",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 955,
        "y": 123,
        "wires": []
    },
    {
        "id": "40c4c63ef17c3ecb",
        "type": "http in",
        "z": "dfb0188865563809",
        "name": "[]GET]openSessions",
        "url": "api/openSessions",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 115,
        "y": 83,
        "wires": [
            [
                "69ca2284d3933a44"
            ]
        ]
    },
    {
        "id": "dc4553396eff6b14",
        "type": "subflow:7ee266ca63cceab4",
        "z": "dfb0188865563809",
        "name": "",
        "x": 560,
        "y": 80,
        "wires": [
            [
                "170befd3bff487d8"
            ]
        ]
    },
    {
        "id": "7752c3e78fb333c0",
        "type": "HanaClient-request",
        "z": "dfb0188865563809",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 655,
        "y": 143,
        "wires": [
            [
                "32950fe270283645"
            ],
            [
                "feb8d084a2bc9f0a"
            ]
        ]
    },
    {
        "id": "feb8d084a2bc9f0a",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 820,
        "y": 160,
        "wires": []
    },
    {
        "id": "69ca2284d3933a44",
        "type": "subflow:19a1d236fd159ab3",
        "z": "dfb0188865563809",
        "name": "",
        "x": 360,
        "y": 80,
        "wires": [
            [
                "dc4553396eff6b14"
            ],
            [
                "6490bd79ad129c4c"
            ]
        ]
    },
    {
        "id": "6490bd79ad129c4c",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 264,
        "y": 124,
        "wires": []
    },
    {
        "id": "a99f2e954493f456",
        "type": "debug",
        "z": "dfb0188865563809",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 120,
        "wires": []
    },
    {
        "id": "32950fe270283645",
        "type": "function",
        "z": "dfb0188865563809",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 120,
        "wires": [
            [
                "a99f2e954493f456",
                "827d435438603a2d"
            ]
        ]
    },
    {
        "id": "96c2301e2cf000f8",
        "type": "function",
        "z": "dfb0188865563809",
        "name": "Dependencies FROM",
        "func": "\nmsg.configOverrideHana = msg.flowInfo.config['hana-db-connection'];\n// msg.configOverrideHana.database='SLDDATA';\n\nconst {dbName} = msg.req.query;\n\nmsg.flowInfo.sql =`\nselect\n\nDEPENDENT_SCHEMA_NAME,DEPENDENT_OBJECT_NAME,DEPENDENT_OBJECT_TYPE,\n'-->' AS \"DIRECTION\",\nBASE_OBJECT_NAME,BASE_OBJECT_TYPE\n--DEPENDENCY_TYPE  -- Decode 1 to direct\n\nfrom OBJECT_DEPENDENCIES \nwhere base_schema_name='${dbName}' \nand dependent_schema_name<>base_schema_name \nand dependent_schema_name<>'_SYS_BIC' and dependent_object_type<>'SYNONYM' -- not important (cubes and public synonyms)\nand dependency_type<>2 --2 is indirect\n`;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 280,
        "wires": [
            [
                "ce0c6c6e188a916a"
            ]
        ]
    },
    {
        "id": "9eb35063c2f9395b",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 955,
        "y": 263,
        "wires": []
    },
    {
        "id": "d30af45e6cf409c5",
        "type": "http in",
        "z": "dfb0188865563809",
        "name": "[]GET]dependenciesFrom",
        "url": "api/dependenciesFrom",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 135,
        "y": 223,
        "wires": [
            [
                "c0ee89763277e35f"
            ]
        ]
    },
    {
        "id": "fc4e28a73b88a70d",
        "type": "subflow:7ee266ca63cceab4",
        "z": "dfb0188865563809",
        "name": "",
        "x": 560,
        "y": 220,
        "wires": [
            [
                "96c2301e2cf000f8"
            ]
        ]
    },
    {
        "id": "ce0c6c6e188a916a",
        "type": "HanaClient-request",
        "z": "dfb0188865563809",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 655,
        "y": 283,
        "wires": [
            [
                "ae26b8ca2a3cae80"
            ],
            [
                "7b56208850910196"
            ]
        ]
    },
    {
        "id": "7b56208850910196",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 820,
        "y": 300,
        "wires": []
    },
    {
        "id": "c0ee89763277e35f",
        "type": "subflow:19a1d236fd159ab3",
        "z": "dfb0188865563809",
        "name": "",
        "x": 360,
        "y": 220,
        "wires": [
            [
                "fc4e28a73b88a70d"
            ],
            [
                "fa4a60eaed7b484c"
            ]
        ]
    },
    {
        "id": "fa4a60eaed7b484c",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 264,
        "y": 264,
        "wires": []
    },
    {
        "id": "452b9b2e72b48fc0",
        "type": "debug",
        "z": "dfb0188865563809",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 260,
        "wires": []
    },
    {
        "id": "ae26b8ca2a3cae80",
        "type": "function",
        "z": "dfb0188865563809",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 260,
        "wires": [
            [
                "452b9b2e72b48fc0",
                "9eb35063c2f9395b"
            ]
        ]
    },
    {
        "id": "f468269c1af34397",
        "type": "function",
        "z": "dfb0188865563809",
        "name": "Dependencies To",
        "func": "\nmsg.configOverrideHana = msg.flowInfo.config['hana-db-connection'];\n// msg.configOverrideHana.database='SLDDATA';\n\nconst {dbName} = msg.req.query;\n\nmsg.flowInfo.sql =`\nselect \n--BASE_DATABASE_NAME;DEPENDENT_DATABASE_NAME;DEPENDENT_SCHEMA_NAME;DEPENDENT_DATABASE_NAME\nDEPENDENT_OBJECT_NAME,DEPENDENT_OBJECT_TYPE,\n'-->' AS \"DIRECTION\",\nBASE_SCHEMA_NAME,BASE_OBJECT_NAME,BASE_OBJECT_TYPE\n--,DEPENDENCY_TYPE  -- Decode 1 to direct\n\nfrom OBJECT_DEPENDENCIES \nwhere dependent_schema_name='${dbName}'\nand dependent_schema_name<>base_schema_name \nand base_schema_name NOT LIKE '%SYS' and base_object_type<>'SYNONYM' -- not important (cubes and public synonyms)\nand dependency_type<>2 --1 is direct, 2 is indirect  \nORDER BY DEPENDENCY_TYPE\n`;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 440,
        "wires": [
            [
                "e9ddc795d23f8465"
            ]
        ]
    },
    {
        "id": "52b78ad8bd75d27c",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 955,
        "y": 423,
        "wires": []
    },
    {
        "id": "206e0469b758a0ca",
        "type": "http in",
        "z": "dfb0188865563809",
        "name": "[]GET]dependenciesTo",
        "url": "api/dependenciesTo",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 125,
        "y": 383,
        "wires": [
            [
                "c55e375bb7312bf4"
            ]
        ]
    },
    {
        "id": "a5bd53b79565cbcb",
        "type": "subflow:7ee266ca63cceab4",
        "z": "dfb0188865563809",
        "name": "",
        "x": 560,
        "y": 380,
        "wires": [
            [
                "f468269c1af34397"
            ]
        ]
    },
    {
        "id": "e9ddc795d23f8465",
        "type": "HanaClient-request",
        "z": "dfb0188865563809",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 655,
        "y": 443,
        "wires": [
            [
                "38ce06c03b433892"
            ],
            [
                "a1561320641b90e1"
            ]
        ]
    },
    {
        "id": "a1561320641b90e1",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 820,
        "y": 460,
        "wires": []
    },
    {
        "id": "c55e375bb7312bf4",
        "type": "subflow:19a1d236fd159ab3",
        "z": "dfb0188865563809",
        "name": "",
        "x": 360,
        "y": 380,
        "wires": [
            [
                "a5bd53b79565cbcb"
            ],
            [
                "0b753c5301166251"
            ]
        ]
    },
    {
        "id": "0b753c5301166251",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 264,
        "y": 424,
        "wires": []
    },
    {
        "id": "38ce06c03b433892",
        "type": "function",
        "z": "dfb0188865563809",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 420,
        "wires": [
            [
                "52b78ad8bd75d27c"
            ]
        ]
    },
    {
        "id": "7c31942810e12826",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 770,
        "y": 760,
        "wires": []
    },
    {
        "id": "395731e892404841",
        "type": "http in",
        "z": "dfb0188865563809",
        "name": "[DELETE]deleteCompany",
        "url": "api/deleteCompany",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 135,
        "y": 543,
        "wires": [
            [
                "4e9f3c1b78e73fb7"
            ]
        ]
    },
    {
        "id": "3b7cc19041683620",
        "type": "subflow:7ee266ca63cceab4",
        "z": "dfb0188865563809",
        "name": "",
        "x": 600,
        "y": 520,
        "wires": [
            [
                "407623c7cdcfe79c"
            ]
        ]
    },
    {
        "id": "a1d00bd0ea4bcfa2",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 780,
        "y": 840,
        "wires": []
    },
    {
        "id": "4e9f3c1b78e73fb7",
        "type": "subflow:19a1d236fd159ab3",
        "z": "dfb0188865563809",
        "name": "",
        "x": 360,
        "y": 540,
        "wires": [
            [
                "3b7cc19041683620"
            ],
            [
                "187aac4b66f16f18"
            ]
        ]
    },
    {
        "id": "187aac4b66f16f18",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 570,
        "y": 560,
        "wires": []
    },
    {
        "id": "e644ee271819a1a7",
        "type": "function",
        "z": "dfb0188865563809",
        "name": "Standard export WITH NO dependencies",
        "func": "const { dbName } = msg.req.query;\nvar d = new Date(),\n    dformat = [d.getFullYear(),\n               d.getMonth()+1,\n               d.getDate()].join('')+'_'+\n              [d.getHours(),\n               d.getMinutes(),\n               d.getSeconds()].join('');\n               \nconst path_for_export_import = msg.flowInfo.config[\"path-for-export-import\"];\nmsg.file_path = `${path_for_export_import}/${dbName}/bck_${dformat}`;//yyyymmdd_hhssmm\n\n// msg.configOverride = {};\n// if(!msg.flowInfo){\n//     msg.flowInfo = {};\n// }\n\nmsg.configOverrideHana = msg.flowInfo.config['hana-db-connection'];\n\nmsg.flowInfo.sql = `export ${dbName}.\"*\" as binary\ninto '${msg.file_path}'\n\nwith threads 4 no dependencies;`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 700,
        "wires": [
            [
                "181c945249ed1926",
                "c5dc187ef1fa8d55",
                "f438c12917211edf"
            ]
        ]
    },
    {
        "id": "c5dc187ef1fa8d55",
        "type": "HanaClient-request",
        "z": "dfb0188865563809",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 210,
        "y": 800,
        "wires": [
            [
                "0ecac5083e9dad45"
            ],
            [
                "e9c0939dbf41aa8a"
            ]
        ]
    },
    {
        "id": "b7488529df731f82",
        "type": "function",
        "z": "dfb0188865563809",
        "name": "prep ssh",
        "func": "\nconst { server } =  msg.flowInfo.config['hana-db-connection'];\nconst { credentials_linux } = msg.flowInfo.config;\nconst { dbName } = msg.req.query;\n\n\ncredentials_linux.forEach(item=>{\n    if(item.HOSTNAME===server){\n        msg.linux_credentials = {\n\t\t\t\"hostname\": item.HOSTNAME,\n\t\t\t\"port\": item.PORT,\n\t\t\t\"username\": item.USERNAME , \n\t\t\t\"password\" : item.PASSWORD\n\t    };\n    }\n});\nconst path_for_export_import = msg.flowInfo.config[\"path-for-export-import\"];\nmsg.payload = `mkdir -p -m 777 \"${path_for_export_import}/${dbName}\"`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 700,
        "wires": [
            [
                "6ab965a55b2e4dcf"
            ]
        ]
    },
    {
        "id": "6ab965a55b2e4dcf",
        "type": "ssh-v3",
        "z": "dfb0188865563809",
        "name": "",
        "x": 370,
        "y": 700,
        "wires": [
            [
                "e644ee271819a1a7"
            ]
        ]
    },
    {
        "id": "d152b34d0f2cd3ee",
        "type": "sqlite",
        "z": "dfb0188865563809",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 440,
        "y": 620,
        "wires": [
            [
                "7dfbfb48b62d1f6e"
            ]
        ]
    },
    {
        "id": "407623c7cdcfe79c",
        "type": "function",
        "z": "dfb0188865563809",
        "name": "Host Info SQL",
        "func": "\nmsg.topic = `\nSELECT * FROM ENT_SERVERS;   \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 620,
        "wires": [
            [
                "d152b34d0f2cd3ee"
            ]
        ]
    },
    {
        "id": "7dfbfb48b62d1f6e",
        "type": "function",
        "z": "dfb0188865563809",
        "name": "credentials_linux",
        "func": "msg.flowInfo.config.credentials_linux = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 620,
        "wires": [
            [
                "b7488529df731f82"
            ]
        ]
    },
    {
        "id": "0ecac5083e9dad45",
        "type": "function",
        "z": "dfb0188865563809",
        "name": "DROP SCHEMA",
        "func": "\nmsg.configOverrideHana = msg.flowInfo.config['hana-db-connection'];\n// msg.configOverrideHana.database='SLDDATA';\n\nconst {dbName} = msg.req.query;\n\nmsg.flowInfo.sql =`\nDROP SCHEMA dbName WITH CASCADE \n`;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 780,
        "wires": [
            [
                "a38b9722f12e80a1"
            ]
        ]
    },
    {
        "id": "a38b9722f12e80a1",
        "type": "HanaClient-request",
        "z": "dfb0188865563809",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 610,
        "y": 800,
        "wires": [
            [
                "7c31942810e12826",
                "eba7d6485215b159"
            ],
            [
                "a1d00bd0ea4bcfa2"
            ]
        ]
    },
    {
        "id": "181c945249ed1926",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 680,
        "wires": []
    },
    {
        "id": "e9c0939dbf41aa8a",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 400,
        "y": 820,
        "wires": []
    },
    {
        "id": "f438c12917211edf",
        "type": "debug",
        "z": "dfb0188865563809",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 720,
        "wires": []
    },
    {
        "id": "eba7d6485215b159",
        "type": "debug",
        "z": "dfb0188865563809",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 760,
        "wires": []
    },
    {
        "id": "b964ca6c8bf035e1",
        "type": "function",
        "z": "dfb0188865563809",
        "name": "SBOCOMMON.SRGC",
        "func": "\nmsg.schemaInfo = msg.payload;\nmsg.configOverrideHana = msg.flowInfo.config['hana-db-connection'];\nconst {dbName} = msg.req.query;\n\nmsg.flowInfo.sql =`\nSelect \"dbName\", \"cmpName\", \"versStr\", \"LOC\" from SBOCOMMON.SRGC where \"dbName\" = '${dbName}'\n`;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1040,
        "wires": [
            [
                "243422fd61a36b8b"
            ]
        ]
    },
    {
        "id": "243422fd61a36b8b",
        "type": "HanaClient-request",
        "z": "dfb0188865563809",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 590,
        "y": 1040,
        "wires": [
            [
                "22622abcda7b632a",
                "739526bb996b129c"
            ],
            [
                "677c38b85d925729"
            ]
        ]
    },
    {
        "id": "93aaac77cfa8c07a",
        "type": "http in",
        "z": "dfb0188865563809",
        "name": "[GET]companyDetails",
        "url": "api/companyDetails",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 940,
        "wires": [
            [
                "35ea22706f5dfe91"
            ]
        ]
    },
    {
        "id": "340b71a15a7dc986",
        "type": "subflow:7ee266ca63cceab4",
        "z": "dfb0188865563809",
        "name": "",
        "x": 560,
        "y": 920,
        "wires": [
            [
                "b964ca6c8bf035e1"
            ]
        ]
    },
    {
        "id": "35ea22706f5dfe91",
        "type": "subflow:19a1d236fd159ab3",
        "z": "dfb0188865563809",
        "name": "",
        "x": 355,
        "y": 937,
        "wires": [
            [
                "340b71a15a7dc986"
            ],
            [
                "716a73d10c1fcb15"
            ]
        ]
    },
    {
        "id": "716a73d10c1fcb15",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 960,
        "wires": []
    },
    {
        "id": "72354dede86c2026",
        "type": "inject",
        "z": "dfb0188865563809",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "22622abcda7b632a",
        "type": "debug",
        "z": "dfb0188865563809",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1020,
        "wires": []
    },
    {
        "id": "b6ef00dce2bb2bb8",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 1020,
        "wires": []
    },
    {
        "id": "739526bb996b129c",
        "type": "function",
        "z": "dfb0188865563809",
        "name": "",
        "func": "msg.payload = msg.payload[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1020,
        "wires": [
            [
                "b6ef00dce2bb2bb8"
            ]
        ]
    },
    {
        "id": "677c38b85d925729",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 740,
        "y": 1060,
        "wires": []
    },
    {
        "id": "5c99a0697fa59c0a",
        "type": "function",
        "z": "dfb0188865563809",
        "name": "SBOCOMMON.SRGC",
        "func": "\nmsg.configOverrideHana = msg.flowInfo.config['hana-db-connection'];\n\nmsg.flowInfo.sql =`\nALTER SYSTEM DISCONNECT SESSION '${msg.item}';\n`;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1240,
        "wires": [
            [
                "0cc43d2683539fb5",
                "838c36fcc36cb97d"
            ]
        ]
    },
    {
        "id": "0cc43d2683539fb5",
        "type": "HanaClient-request",
        "z": "dfb0188865563809",
        "server": "d92dfc92c370a6d4",
        "sql": "",
        "x": 650,
        "y": 1240,
        "wires": [
            [
                "23846b3e6f072dee"
            ],
            [
                "24bbd038016e1c41"
            ]
        ]
    },
    {
        "id": "804bf96cf0794d01",
        "type": "http in",
        "z": "dfb0188865563809",
        "name": "[POST]disconnectSession",
        "url": "api/disconnectSession",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1140,
        "wires": [
            [
                "fdf5a9e482adabf6"
            ]
        ]
    },
    {
        "id": "bad9f294da755a92",
        "type": "subflow:7ee266ca63cceab4",
        "z": "dfb0188865563809",
        "name": "",
        "x": 580,
        "y": 1120,
        "wires": [
            [
                "d4a0a54ae5dc9586"
            ]
        ]
    },
    {
        "id": "fdf5a9e482adabf6",
        "type": "subflow:19a1d236fd159ab3",
        "z": "dfb0188865563809",
        "name": "",
        "x": 375,
        "y": 1137,
        "wires": [
            [
                "bad9f294da755a92"
            ],
            [
                "21518350e36a3260"
            ]
        ]
    },
    {
        "id": "21518350e36a3260",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "KO",
        "statusCode": "",
        "headers": {},
        "x": 550,
        "y": 1160,
        "wires": []
    },
    {
        "id": "838c36fcc36cb97d",
        "type": "debug",
        "z": "dfb0188865563809",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 1240,
        "wires": []
    },
    {
        "id": "23846b3e6f072dee",
        "type": "subflow:5ddb2001.76d37",
        "z": "dfb0188865563809",
        "name": "",
        "env": [
            {
                "name": "inputVarName",
                "value": "sessions",
                "type": "str"
            },
            {
                "name": "currentObjectName",
                "value": "item",
                "type": "str"
            }
        ],
        "x": 850,
        "y": 1120,
        "wires": [
            [
                "5c99a0697fa59c0a"
            ],
            [
                "476a660eb9525931"
            ]
        ]
    },
    {
        "id": "24bbd038016e1c41",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 840,
        "y": 1360,
        "wires": []
    },
    {
        "id": "5c12e9a8e0acf6e3",
        "type": "debug",
        "z": "dfb0188865563809",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 808,
        "y": 1179,
        "wires": []
    },
    {
        "id": "94352dbc0807ce56",
        "type": "http response",
        "z": "dfb0188865563809",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 1180,
        "wires": []
    },
    {
        "id": "476a660eb9525931",
        "type": "function",
        "z": "dfb0188865563809",
        "name": "",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1180,
        "wires": [
            [
                "94352dbc0807ce56"
            ]
        ]
    },
    {
        "id": "d4a0a54ae5dc9586",
        "type": "function",
        "z": "dfb0188865563809",
        "name": "body",
        "func": "msg.sessions = msg.req.body.sessions\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1120,
        "wires": [
            [
                "23846b3e6f072dee"
            ]
        ]
    },
    {
        "id": "ec9294b856890aee",
        "type": "http request",
        "z": "8c1e85c397c34986",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://hanab1hdev20:50000",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 650,
        "y": 860,
        "wires": [
            [
                "b8ea94d82df46553"
            ]
        ]
    },
    {
        "id": "f2f9ed308f87841e",
        "type": "inject",
        "z": "8c1e85c397c34986",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 860,
        "wires": [
            [
                "98f1550943287230"
            ]
        ]
    },
    {
        "id": "b8ea94d82df46553",
        "type": "debug",
        "z": "8c1e85c397c34986",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 860,
        "wires": []
    },
    {
        "id": "d017c86b9d3c0f86",
        "type": "function",
        "z": "8c1e85c397c34986",
        "name": "",
        "func": "msg.headers={\n    \"rejectUnauthorized\":false,\n    \"requestCert\": false,\n    \"agent\": false\n};\nmsg.rejectUnauthorized=false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 860,
        "wires": [
            [
                "ec9294b856890aee"
            ]
        ]
    },
    {
        "id": "6cbf045b84e777b6",
        "type": "http in",
        "z": "8c1e85c397c34986",
        "name": "Services",
        "url": "/api/getServices2",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "f96296936bddc62e"
            ]
        ]
    },
    {
        "id": "9da0ce93ac3806c3",
        "type": "function",
        "z": "8c1e85c397c34986",
        "name": "ServiceCode",
        "func": "\nif(msg.req && msg.req.query.ServiceCode){\n    msg.payload=msg.payload.filter(item=>{\n    return msg.req.query.ServiceCode===item.ServiceCode;\n    });\n}\n\nif(msg.req && msg.req.query.withoutStatus==='true'){\n    return [null, msg];\n}\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 80,
        "wires": [
            [
                "1fe09003737ad06d"
            ],
            [
                "74df806b230fbeee"
            ]
        ]
    },
    {
        "id": "e9a8e2ea4882b1e6",
        "type": "http response",
        "z": "8c1e85c397c34986",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 160,
        "wires": []
    },
    {
        "id": "1fe09003737ad06d",
        "type": "link out",
        "z": "8c1e85c397c34986",
        "name": "",
        "mode": "link",
        "links": [
            "eadfd5b1c8890f3a",
            "4acc6ef12854450a",
            "c884b59e6196da31"
        ],
        "x": 835,
        "y": 60,
        "wires": []
    },
    {
        "id": "5da86a12b9887e22",
        "type": "comment",
        "z": "8c1e85c397c34986",
        "name": "10. Get Services",
        "info": "",
        "x": 140,
        "y": 40,
        "wires": []
    },
    {
        "id": "98f1550943287230",
        "type": "function",
        "z": "8c1e85c397c34986",
        "name": "services.json",
        "func": "msg.serviceData = [{\n\tServiceCode: \"B1_SLD_LicenseManager\",\n\tServiceName: \"License Manager\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_Mailer\",\n\tServiceName: \"B1 Mailer\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_Alert\",\n\tServiceName: \"B1 Alert\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_MobileService\",\n\tServiceName: \"Mobile Service\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_AnalyticsPlatform\",\n\tServiceName: \"Analytics Platform & Portal\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_BackupService\",\n\tServiceName: \"Backup Service\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_EDS\",\n\tServiceName: \"Electronic Document Service (EDS)\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_WebClient\",\n\tServiceName: \"Web Client (Fiori)\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_webclient status\",\n\tOSStartCommand: \"ent_b1_webclient start\",\n\tOSServiceStopCommand: \"ent_b1_webclient stop\",\n\tOSServiceRestartCommand: \"ent_b1_webclient restart\"\n}, {\n\tServiceCode: \"B1_ServiceLayer\",\n\tServiceName: \"Service Layer\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 860,
        "wires": [
            [
                "d017c86b9d3c0f86"
            ]
        ]
    },
    {
        "id": "a0f45cad838423a8",
        "type": "comment",
        "z": "8c1e85c397c34986",
        "name": "20. Formal Status Check",
        "info": "",
        "x": 170,
        "y": 220,
        "wires": []
    },
    {
        "id": "c884b59e6196da31",
        "type": "link in",
        "z": "8c1e85c397c34986",
        "name": "",
        "links": [
            "3f4d2fb147a1e77f",
            "1fe09003737ad06d"
        ],
        "x": 95,
        "y": 300,
        "wires": [
            [
                "8ccfead3ec56fc55"
            ]
        ]
    },
    {
        "id": "9d0890dc7c393ea2",
        "type": "catch",
        "z": "8c1e85c397c34986",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 180,
        "y": 460,
        "wires": [
            [
                "877d01a774b08915"
            ]
        ]
    },
    {
        "id": "9cb48d12a6949797",
        "type": "function",
        "z": "8c1e85c397c34986",
        "name": "",
        "func": "if(msg.error.source.type===\"ssh-v3\"){\n    return [msg, null];\n}else{\n    return [null, msg];\n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 620,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "74df806b230fbeee",
        "type": "http response",
        "z": "8c1e85c397c34986",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 100,
        "wires": []
    },
    {
        "id": "1ed8627ad4990665",
        "type": "debug",
        "z": "8c1e85c397c34986",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 300,
        "wires": []
    },
    {
        "id": "fd75d742bd793ecf",
        "type": "http response",
        "z": "8c1e85c397c34986",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 770,
        "y": 300,
        "wires": []
    },
    {
        "id": "bbe7bce23b855697",
        "type": "sqlite",
        "z": "8c1e85c397c34986",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 440,
        "y": 300,
        "wires": [
            [
                "4aa96ab573a33265",
                "2864f126e3667eb7"
            ]
        ]
    },
    {
        "id": "8ccfead3ec56fc55",
        "type": "function",
        "z": "8c1e85c397c34986",
        "name": "Get Formal Status",
        "func": "// node.warn(msg.item.ServiceCode)\nmsg.items = msg.payload;\n\nmsg.topic = '';\n\nmsg.topic+=`SELECT LOG_ID, ENTITY_KEY, STATUS, STATUS_INFO, CREATED_ON FROM \nENT_HEALTHCHECK_LOGS where ENTITY_KEY IN ('${msg.items.map(function(item){ return item.ServiceCode}).join(\"', '\")}') \nAND CREATED_ON = (select MAX(CREATED_ON) FROM ENT_HEALTHCHECK_LOGS);`;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 300,
        "wires": [
            [
                "bbe7bce23b855697"
            ]
        ]
    },
    {
        "id": "afdfdbb7a0bf83b2",
        "type": "subflow:195b570b57bc542c",
        "z": "8c1e85c397c34986",
        "name": "",
        "x": 490,
        "y": 120,
        "wires": [
            [
                "9da0ce93ac3806c3"
            ],
            [
                "e9a8e2ea4882b1e6"
            ]
        ]
    },
    {
        "id": "4aa96ab573a33265",
        "type": "function",
        "z": "8c1e85c397c34986",
        "name": "",
        "func": "\n\nfor(let i in msg.payload){\n    for(let j in msg.items){\n        if(msg.items[j].ServiceCode === msg.payload[i].ENTITY_KEY){\n            msg.payload[i].STATUS_INFO = JSON.parse(msg.payload[i].STATUS_INFO);\n            msg.payload[i] = Object.assign(msg.payload[i],msg.items[j]);\n        }\n    }\n}\nif(msg.req.query.count==='true'){\n    msg.services = msg.payload;\n    msg.payload={\n        online:0,\n        warnings:0\n    }\n    msg.services.forEach(item=>{\n       if(item.STATUS===\"Online\"){\n           msg.payload.online+=1;\n       }else{\n           msg.payload.warnings+=1;\n       }\n    });\n}\n\nif(msg.req.query.ServiceCode){\n    msg.payload = msg.payload[0];\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 300,
        "wires": [
            [
                "fd75d742bd793ecf",
                "1ed8627ad4990665"
            ]
        ]
    },
    {
        "id": "877d01a774b08915",
        "type": "debug",
        "z": "8c1e85c397c34986",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 460,
        "wires": []
    },
    {
        "id": "2864f126e3667eb7",
        "type": "debug",
        "z": "8c1e85c397c34986",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 260,
        "wires": []
    },
    {
        "id": "f96296936bddc62e",
        "type": "subflow:7ee266ca63cceab4",
        "z": "8c1e85c397c34986",
        "name": "",
        "env": [
            {
                "name": "b1-sl-config",
                "type": "bool",
                "value": "false"
            }
        ],
        "x": 320,
        "y": 120,
        "wires": [
            [
                "afdfdbb7a0bf83b2"
            ]
        ]
    },
    {
        "id": "bed4fa497f742c81",
        "type": "http request",
        "z": "a014b78d93723dab",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://hanab1hdev20:50000",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 650,
        "y": 860,
        "wires": [
            [
                "89696174ce0ee308"
            ]
        ]
    },
    {
        "id": "f4248169a4b4db7a",
        "type": "inject",
        "z": "a014b78d93723dab",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 860,
        "wires": [
            [
                "7949785a7833505d"
            ]
        ]
    },
    {
        "id": "89696174ce0ee308",
        "type": "debug",
        "z": "a014b78d93723dab",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 860,
        "wires": []
    },
    {
        "id": "94d0fbc262be4eac",
        "type": "function",
        "z": "a014b78d93723dab",
        "name": "",
        "func": "msg.headers={\n    \"rejectUnauthorized\":false,\n    \"requestCert\": false,\n    \"agent\": false\n};\nmsg.rejectUnauthorized=false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 860,
        "wires": [
            [
                "bed4fa497f742c81"
            ]
        ]
    },
    {
        "id": "4a9cd3e2126d4911",
        "type": "link out",
        "z": "a014b78d93723dab",
        "name": "",
        "mode": "link",
        "links": [
            "6bd65e8ff68b0b47",
            "4acc6ef12854450a"
        ],
        "x": 935,
        "y": 120,
        "wires": []
    },
    {
        "id": "6bd65e8ff68b0b47",
        "type": "link in",
        "z": "a014b78d93723dab",
        "name": "",
        "links": [
            "4a9cd3e2126d4911",
            "e345d9c5a7c7f825",
            "ef6729dcba14ba55",
            "4cc9c412c88922c2",
            "031b112e41de3031"
        ],
        "x": 155,
        "y": 200,
        "wires": [
            [
                "ebeff9e43f7f73f1"
            ]
        ]
    },
    {
        "id": "3a29d3a48e992f2e",
        "type": "comment",
        "z": "a014b78d93723dab",
        "name": "10. Get Services",
        "info": "",
        "x": 140,
        "y": 40,
        "wires": []
    },
    {
        "id": "7949785a7833505d",
        "type": "function",
        "z": "a014b78d93723dab",
        "name": "services.json",
        "func": "msg.serviceData = [{\n\tServiceCode: \"B1_SLD_LicenseManager\",\n\tServiceName: \"License Manager\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_Mailer\",\n\tServiceName: \"B1 Mailer\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_Alert\",\n\tServiceName: \"B1 Alert\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_MobileService\",\n\tServiceName: \"Mobile Service\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_AnalyticsPlatform\",\n\tServiceName: \"Analytics Platform & Portal\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_SLD_BackupService\",\n\tServiceName: \"Backup Service\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_EDS\",\n\tServiceName: \"Electronic Document Service (EDS)\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}, {\n\tServiceCode: \"B1_WebClient\",\n\tServiceName: \"Web Client (Fiori)\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_webclient status\",\n\tOSStartCommand: \"ent_b1_webclient start\",\n\tOSServiceStopCommand: \"ent_b1_webclient stop\",\n\tOSServiceRestartCommand: \"ent_b1_webclient restart\"\n}, {\n\tServiceCode: \"B1_ServiceLayer\",\n\tServiceName: \"Service Layer\",\n\tStatusCheckType: \"Basic\",\n\tOSFormalStatusCheckCommand: \"ent_b1_sld status\",\n\tOSStartCommand: \"ent_b1_sld start\",\n\tOSServiceStopCommand: \"ent_b1_sld stop\",\n\tOSServiceRestartCommand: \"ent_b1_sld restart\"\n}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 860,
        "wires": [
            [
                "94d0fbc262be4eac"
            ]
        ]
    },
    {
        "id": "8ce909f65ffb6bf1",
        "type": "function",
        "z": "a014b78d93723dab",
        "name": "prep ssh",
        "func": "delete msg.session;\n\nif(!msg.payload.length){\n   return [null, msg];\n}\n\nmsg.linux_credentials = {\n    'hostname': msg.payload[0].HOSTNAME,\n    'port': msg.payload[0].PORT,\n    'username': msg.payload[0].USERNAME,\n    'password': msg.payload[0].PASSWORD\n};\n\nmsg.payload = `${msg.item.OSFormalStatusCheckCommand}`;\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 560,
        "wires": [
            [
                "1dafd880d3afbc45"
            ],
            [
                "6d8d4a98312f3767"
            ]
        ]
    },
    {
        "id": "1dafd880d3afbc45",
        "type": "ssh-v3",
        "z": "a014b78d93723dab",
        "name": "",
        "x": 570,
        "y": 620,
        "wires": [
            [
                "6d8d4a98312f3767"
            ]
        ]
    },
    {
        "id": "bf63c87740b04d74",
        "type": "comment",
        "z": "a014b78d93723dab",
        "name": "20. Formal Status Check",
        "info": "",
        "x": 170,
        "y": 480,
        "wires": []
    },
    {
        "id": "c8ea4c2d3422a37f",
        "type": "link in",
        "z": "a014b78d93723dab",
        "name": "",
        "links": [
            "e2a6c36f87fd8576",
            "9149ab29e46dfcce"
        ],
        "x": 95,
        "y": 560,
        "wires": [
            [
                "4f41a26d5ac5bc1a"
            ]
        ]
    },
    {
        "id": "3507f19a164265d8",
        "type": "sqlite",
        "z": "a014b78d93723dab",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 380,
        "y": 560,
        "wires": [
            [
                "8ce909f65ffb6bf1"
            ]
        ]
    },
    {
        "id": "4f41a26d5ac5bc1a",
        "type": "function",
        "z": "a014b78d93723dab",
        "name": "Host Info",
        "func": "node.warn(msg.item.ServiceCode)\nmsg.topic = `\nSELECT * FROM ENT_SERVERS where HOSTNAME='${msg.item.SLD_ServerLocation}';   \n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 560,
        "wires": [
            [
                "3507f19a164265d8"
            ]
        ]
    },
    {
        "id": "6d8d4a98312f3767",
        "type": "function",
        "z": "a014b78d93723dab",
        "name": "",
        "func": "if(msg.session&&msg.session.code===0){\n    msg.item.FormalStatus='Online';\n}else{\n    msg.item.FormalStatus='Offline';\n}\n\nmsg.item.FormalStatusTxt=`\nFormal Status - ${msg.item.FormalStatus}\n\nCode - ${msg.session?msg.session.code:''}\n\nText - ${msg.session?'':'Server Info not found in DB'}\n    stdout -  ${msg.session?msg.session.stdout.join('\\n'):''}\n\n    stderr - ${msg.session?msg.session.stderr.join('\\n'):''}\n\n`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 600,
        "wires": [
            [
                "bf695364f4b19f54"
            ]
        ]
    },
    {
        "id": "9ede4ee32cde710d",
        "type": "catch",
        "z": "a014b78d93723dab",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 340,
        "y": 680,
        "wires": [
            [
                "fb702fefb3652f47"
            ]
        ]
    },
    {
        "id": "fb702fefb3652f47",
        "type": "function",
        "z": "a014b78d93723dab",
        "name": "",
        "func": "if(msg.error.source.type===\"ssh-v3\"){\n    return [msg, null];\n}else{\n    return [null, msg];\n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 680,
        "wires": [
            [
                "995334b112a386c1"
            ],
            [
                "9273d7c777c8d087"
            ]
        ]
    },
    {
        "id": "995334b112a386c1",
        "type": "function",
        "z": "a014b78d93723dab",
        "name": "",
        "func": "\nmsg.item.FormalStatus='Unknown';\n\nmsg.item.FormalStatusTxt=`\nFormal Status - ${msg.item.FormalStatus}\n\nCode - ${msg.session?msg.session.code:''}\n\nText - ${msg.error.message}\n    stdout - ${msg.session?msg.session.stdout.join('\\n'):''}\n\n    stderr - ${msg.session?msg.session.stderr.join('\\n'):''}\n\n`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 660,
        "wires": [
            [
                "bf695364f4b19f54"
            ]
        ]
    },
    {
        "id": "ebeff9e43f7f73f1",
        "type": "Serial Iterator",
        "z": "a014b78d93723dab",
        "name": "Iterate",
        "property": "payload",
        "inputFlow": "feedback",
        "saveOutput": 0,
        "recursive": 0,
        "storeId": 0,
        "x": 290,
        "y": 200,
        "wires": [
            [
                "95a85a2c125ac3fa"
            ],
            [
                "7213b1c02783cb37"
            ]
        ]
    },
    {
        "id": "7213b1c02783cb37",
        "type": "debug",
        "z": "a014b78d93723dab",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 240,
        "wires": []
    },
    {
        "id": "9273d7c777c8d087",
        "type": "debug",
        "z": "a014b78d93723dab",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 700,
        "wires": []
    },
    {
        "id": "19bf34246d94b847",
        "type": "sqlite",
        "z": "a014b78d93723dab",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 860,
        "y": 480,
        "wires": [
            [
                "031b112e41de3031"
            ]
        ]
    },
    {
        "id": "e18efcea5bdab080",
        "type": "function",
        "z": "a014b78d93723dab",
        "name": "CALC Status",
        "func": "// \"CREATE TABLE ENT_B1SERVICE_LOGS(SERVICE_LOG_ID PRIMARY KEY, ENTITY_KEY UNIQUE NOT NULL, ENTITY_TYPE TEXT, FRML_STATUS TEXT NOT NULL, FRML_STATUS_INFO TEXT, CREATED_ON DATETIME NOT NULL)\";\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nfunction getStatus (actual, formal){\n\treturn actual && formal ? actual==='Online' && formal==='Online' ? \"Online\" : actual==='Offline' && formal==='Offline' ? \"Offline\" : \"Warning\" : \"Loading...\"\n}\n\nconst LOG_ID = uuidv4();\nconst {ServiceCode, ServiceName, ActualStatus, ActualStatusTxt, FormalStatus, FormalStatusTxt} = msg.item;\n\nmsg.topic = `\n\nINSERT INTO ENT_HEALTHCHECK_LOGS (LOG_ID, ENTITY_TYPE, ENTITY_KEY, STATUS, STATUS_INFO, CREATED_ON)\nVALUES ('${LOG_ID}', 'SERVICE' ,'${ServiceCode}', '${getStatus(ActualStatus, FormalStatus)}', \n'${JSON.stringify({Actual_Info : ActualStatusTxt, Formal_Info: FormalStatusTxt})}', '${msg.FlowTimeStamp}')\n            \n`;\n            \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 480,
        "wires": [
            [
                "19bf34246d94b847"
            ]
        ]
    },
    {
        "id": "5676bfb40a843c0e",
        "type": "subflow:195b570b57bc542c",
        "z": "a014b78d93723dab",
        "name": "",
        "x": 810,
        "y": 140,
        "wires": [
            [
                "4a9cd3e2126d4911"
            ],
            []
        ]
    },
    {
        "id": "79c38fe0b582d67e",
        "type": "inject",
        "z": "a014b78d93723dab",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "f13cfaa6c9b141d0"
            ]
        ]
    },
    {
        "id": "3861f2ced6493754",
        "type": "subflow:7ee266ca63cceab4",
        "z": "a014b78d93723dab",
        "name": "",
        "x": 620,
        "y": 140,
        "wires": [
            [
                "5676bfb40a843c0e"
            ]
        ]
    },
    {
        "id": "031b112e41de3031",
        "type": "link out",
        "z": "a014b78d93723dab",
        "name": "",
        "mode": "link",
        "links": [
            "6bd65e8ff68b0b47",
            "4acc6ef12854450a"
        ],
        "x": 995,
        "y": 480,
        "wires": []
    },
    {
        "id": "bf695364f4b19f54",
        "type": "link out",
        "z": "a014b78d93723dab",
        "name": "",
        "mode": "link",
        "links": [
            "5801c1bcd2bb208b"
        ],
        "x": 865,
        "y": 640,
        "wires": []
    },
    {
        "id": "5801c1bcd2bb208b",
        "type": "link in",
        "z": "a014b78d93723dab",
        "name": "",
        "links": [
            "bf695364f4b19f54"
        ],
        "x": 545,
        "y": 480,
        "wires": [
            [
                "e18efcea5bdab080"
            ]
        ]
    },
    {
        "id": "7ae817e44cfc51d0",
        "type": "http request",
        "z": "a014b78d93723dab",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 400,
        "y": 300,
        "wires": [
            [
                "f08b0fc85527420d"
            ]
        ]
    },
    {
        "id": "95a85a2c125ac3fa",
        "type": "function",
        "z": "a014b78d93723dab",
        "name": "",
        "func": "msg.item = msg.payload;\nmsg.url = msg.item.SLD_AccessURL\nmsg.rejectUnauthorized=false;\n\nif(msg.item.ActualStatusCheckType==='Basic'){\n    return [msg, null, null];\n}else if(msg.item.ServiceCode==='HANA_IndexServer'){\n    if (!msg.flowInfo)\n    msg.flowInfo = {};\n    msg.flowInfo.sql = 'select 1 from dummy';\n    return [null, msg, null];\n}else{\n    return [null, null, msg];\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 340,
        "wires": [
            [
                "7ae817e44cfc51d0"
            ],
            [
                "4b6234d1c4064435"
            ],
            []
        ]
    },
    {
        "id": "f08b0fc85527420d",
        "type": "function",
        "z": "a014b78d93723dab",
        "name": "",
        "func": "if(msg.statusCode===200){\n    msg.item.ActualStatus='Online';\n}else{\n    msg.item.ActualStatus='Offline'\n}\nmsg.item.ActualStatusTxt=`\nActual Status - ${msg.item.ActualStatus}\n\nCode - ${msg.statusCode}\n\nText - ${msg.statusCode!==200?msg.payload:msg.item.ServiceName}\n`;\n\n// msg.services.push(msg.item);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 300,
        "wires": [
            [
                "9149ab29e46dfcce"
            ]
        ]
    },
    {
        "id": "4b6234d1c4064435",
        "type": "HanaClient-request",
        "z": "a014b78d93723dab",
        "server": "15d6e3b0d0c5d1fa",
        "sql": "",
        "x": 380,
        "y": 360,
        "wires": [
            [
                "63eff6bc660f0e24"
            ],
            [
                "0481cad5d2fea64a"
            ]
        ]
    },
    {
        "id": "63eff6bc660f0e24",
        "type": "function",
        "z": "a014b78d93723dab",
        "name": "",
        "func": "if(msg.payload.length){\n    msg.item.ActualStatus='Online';\n}else{\n    msg.item.ActualStatus='Offline'\n}\n\nmsg.item.ActualStatusTxt=`\nActual Status - ${msg.item.ActualStatus}\n\nCode - Custom Check\n\nText - ${msg.payload.length===0?msg.error:msg.item.ServiceName}\n`;\n\n// msg.services.push(msg.item);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 340,
        "wires": [
            [
                "9149ab29e46dfcce"
            ]
        ]
    },
    {
        "id": "0481cad5d2fea64a",
        "type": "function",
        "z": "a014b78d93723dab",
        "name": "",
        "func": "\nmsg.item.ActualStatus='Offline'\n// msg.services.push(msg.item);\n\nmsg.item.ActualStatusTxt=`\nActual Status - ${msg.item.ActualStatus}\n\nCode - Custom Check\n\nText - ${msg.error}\n`;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 380,
        "wires": [
            [
                "9149ab29e46dfcce"
            ]
        ]
    },
    {
        "id": "9149ab29e46dfcce",
        "type": "link out",
        "z": "a014b78d93723dab",
        "name": "",
        "mode": "link",
        "links": [
            "c8ea4c2d3422a37f"
        ],
        "x": 815,
        "y": 340,
        "wires": []
    },
    {
        "id": "f0220f8a98e05c5a",
        "type": "sqlite",
        "z": "a014b78d93723dab",
        "mydb": "e7336e81.c32bc",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 620,
        "y": 80,
        "wires": [
            [
                "1ebce36c10ef8434"
            ]
        ]
    },
    {
        "id": "f13cfaa6c9b141d0",
        "type": "function",
        "z": "a014b78d93723dab",
        "name": "FlowTimeStamp",
        "func": "\nnode.warn('B1_SLD_AnalyticsPlatform')\n\nmsg.topic = `SELECT datetime('now', 'localtime') as \"FlowTimeStamp\" FROM ENT_CONFIG;\n`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 80,
        "wires": [
            [
                "f0220f8a98e05c5a"
            ]
        ]
    },
    {
        "id": "1ebce36c10ef8434",
        "type": "function",
        "z": "a014b78d93723dab",
        "name": "",
        "func": "\nmsg.FlowTimeStamp = msg.payload[0].FlowTimeStamp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 80,
        "wires": [
            [
                "3861f2ced6493754"
            ]
        ]
    }
]